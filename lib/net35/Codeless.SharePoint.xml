<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Codeless.SharePoint</name>
    </assembly>
    <members>
        <member name="T:Codeless.SharePoint.CamlExpression">
            <summary>
            Provides a base class of a range of objects representating different types of CAML expressions.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.CamlExpression.AppendToStringBuilder">
            <summary>
            Appends a string value to a <see cref="T:System.Text.StringBuilder"/> instance.
            </summary>
            <param name="value">Value to append.</param>
            <returns>A <see cref="T:System.Text.StringBuilder"/> instance.</returns>
        </member>
        <member name="F:Codeless.SharePoint.CamlExpression.EmptyBindings">
            <summary>
            Represents an empty collection of parameter values. This collection is read-only.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpression.op_BitwiseAnd(Codeless.SharePoint.CamlExpression,Codeless.SharePoint.CamlExpression)">
            <summary>
            Performs a logical And operation between two CAML expressions.
            </summary>
            <param name="x">First expression.</param>
            <param name="y">Second expression.</param>
            <returns>A resulting expression.</returns>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpression.op_Addition(Codeless.SharePoint.CamlExpression,Codeless.SharePoint.CamlExpression)">
            <summary>
            Performs a logical And operation between two CAML expressions.
            </summary>
            <param name="x">First expression.</param>
            <param name="y">Second expression.</param>
            <returns>A resulting expression.</returns>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpression.op_BitwiseOr(Codeless.SharePoint.CamlExpression,Codeless.SharePoint.CamlExpression)">
            <summary>
            Performs a logical Or operation between two CAML expressions.
            </summary>
            <param name="x">First expression.</param>
            <param name="y">Second expression.</param>
            <returns>A resulting expression.</returns>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpression.op_OnesComplement(Codeless.SharePoint.CamlExpression)">
            <summary>
            Performs a negation operation on a CAML expressions.
            </summary>
            <param name="x">A CAML expression.</param>
            <returns>A resulting expression.</returns>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpression.op_Explicit(Codeless.SharePoint.CamlExpression)~System.String">
            <summary>
            Converts this expression into an equivalent string representation.
            </summary>
            <param name="x">A CAML expression.</param>
            <returns>A string representation of this expression.</returns>
        </member>
        <member name="P:Codeless.SharePoint.CamlExpression.Type">
            <summary>
            Gets the type of this expression.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpression.ToString">
            <summary>
            Gets an equivalent string representation of this expression.
            </summary>
            <returns>A string representation of this expression.</returns>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpression.ToString(System.Boolean)">
            <summary>
            Gets an equivalent string representation of this expression, optionally enables new lines and indentation when formatting output XML.
            </summary>
            <param name="indent">Whether to enable new lines and indentation when formatting output XML.</param>
            <returns>A string representation of this expression.</returns>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpression.ToString(System.Collections.Hashtable)">
            <summary>
            Gets an equivalent string representation of this expression, with values to be binded on parameters.
            </summary>
            <param name="bindings">A collection of parameter values.</param>
            <returns>A string representation of this expression.</returns>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpression.ToString(System.Collections.Hashtable,System.Boolean)">
            <summary>
            Gets an equivalent string representation of this expression, with values to be binded on parameters, and optionally enables new lines and indentation when formatting output XML.
            </summary>
            <param name="bindings">A collection of parameter values.</param>
            <param name="indent">Whether to enable new lines and indentation when formatting output XML.</param>
            <returns>A string representation of this expression.</returns>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpression.ToString(System.Xml.XmlWriterSettings,System.Collections.Hashtable)">
            <summary>
            Gets an equivalent string representation of this expression, with values to be binded on parameters and specified XML writer settings.
            </summary>
            <param name="settings">XML writer settings.</param>
            <param name="bindings">A collection of parameter values.</param>
            <returns>A string representation of this expression.</returns>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpression.Bind(System.Collections.Hashtable)">
            <summary>
            Binds values to parameters.
            </summary>
            <param name="bindings">A collection of parameter values.</param>
            <returns>An expression with binding values.</returns>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpression.GetViewFieldsExpression">
            <summary>
            Gets an expression equivalent to a &lt;ViewFields/&gt; that contains all fields referenced by this expression.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpression.HandleAnd(Codeless.SharePoint.CamlExpression,System.Boolean)">
            <summary>
            When overriden, handles a logical And operation against another expression.
            </summary>
            <param name="x">Another expression.</param>
            <returns>A resulting expression.</returns>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpression.HandleOr(Codeless.SharePoint.CamlExpression,System.Boolean)">
            <summary>
            When overriden, handles a logical Or operation against another expression.
            </summary>
            <param name="x">Another expression.</param>
            <returns>A resulting expression.</returns>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpression.HandleNegate">
            <summary>
            When overriden, handles a negation operation.
            </summary>
            <returns>A resulting expression.</returns>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpression.Visit(Codeless.SharePoint.CamlVisitor)">
            <summary>
            When overriden, handles a visitor visit.
            </summary>
            <param name="visitor"></param>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpression.WriteXml(System.Xml.XmlWriter,System.Collections.Hashtable)">
            <summary>
            When overriden, outputs XML that is an equivalent representation of this expression.
            </summary>
            <param name="writer">An XML writer object.</param>
            <param name="bindings">A collection of parameter values.</param>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpression.ToStringStatic(Codeless.SharePoint.CamlExpression,System.Xml.XmlWriterSettings,System.Collections.Hashtable)">
            <summary>
            Reserved for internal use.
            </summary>
            <param name="x"></param>
            <param name="settings"></param>
            <param name="bindings"></param>
            <returns></returns>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpression.WriteXmlStatic(Codeless.SharePoint.CamlExpression,System.Xml.XmlWriter,System.Collections.Hashtable)">
            <summary>
            Reserved for internal use.
            </summary>
            <param name="x"></param>
            <param name="writer"></param>
            <param name="bindings"></param>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpression.GetOperatorString(Codeless.SharePoint.CamlUnaryOperator)">
            <summary>
            Provides fast conversion from <see cref="T:Codeless.SharePoint.CamlUnaryOperator"/> enum values to its string representation.
            </summary>
            <param name="value">Value to convert.</param>
            <returns>An string representation of the operator.</returns>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpression.GetOperatorString(Codeless.SharePoint.CamlBinaryOperator)">
            <summary>
            Provides fast conversion from <see cref="T:Codeless.SharePoint.CamlBinaryOperator"/> enum values to its string representation.
            </summary>
            <param name="value">Value to convert.</param>
            <returns>An string representation of the operator.</returns>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpression.GetOperatorString(Codeless.SharePoint.CamlLogicalOperator)">
            <summary>
            Provides fast conversion from <see cref="T:Codeless.SharePoint.CamlLogicalOperator"/> enum values to its string representation.
            </summary>
            <param name="value">Value to convert.</param>
            <returns>An string representation of the operator.</returns>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpression.GetValueTypeString(Codeless.SharePoint.CamlValueType)">
            <summary>
            Provides fast conversion from <see cref="T:Codeless.SharePoint.CamlValueType"/> enum values to its string representation.
            </summary>
            <param name="value">Value to convert.</param>
            <returns>An string representation of the value type.</returns>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpression.CreateAppendToStringBuilderDelegate(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
            <summary>
            Creates a string builder delegate using the specified XML writer settings.
            </summary>
            <param name="sb">A string builder object.</param>
            <param name="settings">XML writer settings.</param>
            <returns>A delegate of a string builder.</returns>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpression.BindValue(Codeless.SharePoint.ICamlParameterBinding,System.Collections.Hashtable)">
            <summary>
            Gets the string representation of the binded value.
            </summary>
            <param name="value">An instance of a parameter in a CAML expression.</param>
            <param name="bindings">A dictionary containing values that are associated to parameter names.</param>
            <returns>A string representation of the binded value; -or- a placeholder string for unbinded parameters.</returns>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpression.BindValues(Codeless.SharePoint.ICamlParameterBinding,System.Collections.Hashtable)">
            <summary>
            Gets an enumerable collection of string representations of the binded values.
            </summary>
            <param name="value">An instance of a parameter in a CAML expression.</param>
            <param name="bindings">A dictionary containing values that are associated to parameter names.</param>
            <returns>An enumerable collection of string representations of the binded values; -or- a placeholder string for unbinded parameters.</returns>
        </member>
        <member name="T:Codeless.SharePoint.CamlExpressionVisitor">
            <summary>
            Providers a base class that visits a CAML expression.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpressionVisitor.#ctor">
            <summary>
            Instantiate an instance of the <see cref="T:Codeless.SharePoint.CamlExpressionVisitor"/> class.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.CamlExpressionVisitor.Bindings">
            <summary>
            Gets the values binded to the CAML expression that is visiting.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpressionVisitor.Visit(Codeless.SharePoint.CamlExpression)">
            <summary>
            Called when visiting a sub-expression.
            </summary>
            <param name="expression">An instance of the <see cref="T:Codeless.SharePoint.CamlExpression"/> class representing the visiting expression.</param>
            <returns>When overriden, returns an expression to replace the expression given in arguments.</returns>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpressionVisitor.VisitBindedExpression(Codeless.SharePoint.CamlBindedExpression)">
            <summary>
            Called when visiting a CAML expression with binded values.
            </summary>
            <param name="expression">An instance of the <see cref="T:Codeless.SharePoint.CamlBindedExpression"/> class representing the value-binded expression.</param>
            <returns>When overriden, returns an expression to replace the expression given in arguments.</returns>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpressionVisitor.VisitViewFieldsExpression(Codeless.SharePoint.CamlViewFieldsExpression)">
            <summary>
            Called when visiting a &lt;ViewFields/&gt; element.
            </summary>=
            <param name="expression">An instance of the <see cref="T:Codeless.SharePoint.CamlViewFieldsExpression"/> class representing the &lt;ViewFields/&gt; expression.</param>
            <returns>When overriden, returns an expression to replace the expression given in arguments.</returns>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpressionVisitor.VisitOrderByExpression(Codeless.SharePoint.CamlOrderByExpression)">
            <summary>
            Called when visiting a &lt;OrderBy/&gt; element.
            </summary>=
            <param name="expression">An instance of the <see cref="T:Codeless.SharePoint.CamlOrderByExpression"/> class representing the &lt;OrderBy/&gt; expression.</param>
            <returns>When overriden, returns an expression to replace the expression given in arguments.</returns>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpressionVisitor.VisitGroupByExpression(Codeless.SharePoint.CamlGroupByExpression)">
            <summary>
            Called when visiting a &lt;GroupBy/&gt; element.
            </summary>=
            <param name="expression">An instance of the <see cref="T:Codeless.SharePoint.CamlGroupByExpression"/> class representing the &lt;GroupBy/&gt; expression.</param>
            <returns>When overriden, returns an expression to replace the expression given in arguments.</returns>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpressionVisitor.VisitViewFieldsFieldRefExpression(Codeless.SharePoint.CamlViewFieldsFieldRefExpression)">
            <summary>
            Called when visiting a &lt;FieldRef/&gt; expression inside a &lt;ViewFields/&gt; element.
            </summary>
            <param name="expression">An instance of the <see cref="T:Codeless.SharePoint.CamlViewFieldsFieldRefExpression"/> class representing the &lt;FieldRef/&gt; expression.</param>
            <returns>When overriden, returns an expression to replace the expression given in arguments.</returns>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpressionVisitor.VisitOrderByFieldRefExpression(Codeless.SharePoint.CamlOrderByFieldRefExpression)">
            <summary>
            Called when visiting a &lt;FieldRef/&gt; expression inside an &lt;OrderBy/&gt; element.
            </summary>
            <param name="expression">An instance of the <see cref="T:Codeless.SharePoint.CamlOrderByFieldRefExpression"/> class representing the &lt;FieldRef/&gt; expression.</param>
            <returns>When overriden, returns an expression to replace the expression given in arguments.</returns>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpressionVisitor.VisitGroupByFieldRefExpression(Codeless.SharePoint.CamlGroupByFieldRefExpression)">
            <summary>
            Called when visiting a &lt;FieldRef/&gt; expression inside a &lt;GroupBy/&gt; element.
            </summary>
            <param name="expression">An instance of the <see cref="T:Codeless.SharePoint.CamlGroupByFieldRefExpression"/> class representing the &lt;FieldRef/&gt; expression.</param>
            <returns>When overriden, returns an expression to replace the expression given in arguments.</returns>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpressionVisitor.VisitWhereUnaryComparisonExpression(Codeless.SharePoint.CamlWhereUnaryComparisonExpression)">
            <summary>
            Called when visiting a unary comparison expression inside a &lt;Where/&gt; element.
            </summary>
            <param name="expression">An instance of the <see cref="T:Codeless.SharePoint.CamlWhereUnaryComparisonExpression"/> class representing the unary comparison expression.</param>
            <returns>When overriden, returns an expression to replace the expression given in arguments.</returns>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpressionVisitor.VisitWhereBinaryComparisonExpression(Codeless.SharePoint.CamlWhereBinaryComparisonExpression)">
            <summary>
            Called when visiting a binary comparison expression inside a &lt;Where/&gt; element.
            </summary>
            <param name="expression">An instance of the <see cref="T:Codeless.SharePoint.CamlWhereBinaryComparisonExpression"/> class representing the binary comparison expression.</param>
            <returns>When overriden, returns an expression to replace the expression given in arguments.</returns>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpressionVisitor.VisitWhereLogicalExpression(Codeless.SharePoint.CamlWhereLogicalExpression)">
            <summary>
            Called when visiting a logical comparison expression inside a &lt;Where/&gt; element.
            </summary>
            <param name="expression">An instance of the <see cref="T:Codeless.SharePoint.CamlWhereLogicalExpression"/> class representing the logical comparison expression.</param>
            <returns>When overriden, returns an expression to replace the expression given in arguments.</returns>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpressionVisitor.VisitWhereExpression(Codeless.SharePoint.CamlWhereExpression)">
            <summary>
            Called when visiting a &lt;Where/&gt; expression.
            </summary>
            <param name="expression">An instance of the <see cref="T:Codeless.SharePoint.CamlWhereExpression"/> class representing the &lt;Where/&gt; expression.</param>
            <returns>When overriden, returns an expression to replace the expression given in arguments.</returns>
        </member>
        <member name="M:Codeless.SharePoint.CamlExpressionVisitor.VisitQueryExpression(Codeless.SharePoint.CamlQueryExpression)">
            <summary>
            Called when visiting a &lt;Query/&gt; expression.
            </summary>
            <param name="expression">An instance of the <see cref="T:Codeless.SharePoint.CamlQueryExpression"/> class representing the &lt;Query/&gt; expression.</param>
            <returns>When overriden, returns an expression to replace the expression given in arguments.</returns>
        </member>
        <member name="T:Codeless.SharePoint.CamlParameterBinding`1">
            <summary>
            Provides a base class representating a parameter in a CAML expression.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Codeless.SharePoint.CamlParameterName">
            <summary>
            Indicates the name of a parameter which its value can be binded after.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.CamlParameterName.#ctor(System.String)">
            <summary>
            Creates an instance of the <see cref="T:Codeless.SharePoint.CamlParameterName"/> class.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Codeless.SharePoint.CamlParameterName.op_Implicit(Codeless.SharePoint.CamlParameterName)~System.String">
            <summary>
            Implicitly converts the name of a parameter specified by this instance to a string representation.
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="T:Codeless.SharePoint.ICamlParameterBinding">
            <summary>
            Exposes properties and methods related to a parameter in a CAML expression.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ICamlParameterBinding.IsParameter">
            <summary>
            Gets a boolean value indicating whether this instance binds to any given arguments.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ICamlParameterBinding.ParameterName">
            <summary>
            Gets the name of this parameter. <see cref="F:Codeless.SharePoint.CamlParameterName.NoBinding"/> is returned if this instance does not bind to any given arguments.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ICamlParameterBinding.ValueType">
            <summary>
            Gets the value type this parameter representing.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ICamlParameterBinding.Bind(System.Collections.Hashtable)">
            <summary>
            Binds a single value and returns a string representation of the value from a collection of parameter values.
            </summary>
            <param name="bindings"></param>
            <returns></returns>
        </member>
        <member name="M:Codeless.SharePoint.ICamlParameterBinding.BindCollection(System.Collections.Hashtable)">
            <summary>
            Bings a list of values and returns a string representation of the values from a collection of parameter values.
            </summary>
            <param name="bindings"></param>
            <returns></returns>
        </member>
        <member name="T:Codeless.SharePoint.ISPObjectContext">
            <summary>
            Represents data source of SharePoint objects.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ISPObjectContext.Site">
            <summary>
            Gets the site collection where persisted SharePoint objects to be retrieved from.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ISPObjectContext.TermStore">
            <summary>
            Gets the term store where persisted objects of the Managed Metadata Service to be retrieved from.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelEventHandler`1.OnAdding(`0,Codeless.SharePoint.ObjectModel.SPModelEventArgs)">
            <summary>
            Invoked when the underlying list item is being added to a list.
            </summary>
            <param name="item">Instance of the model class representing a list item.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelEventHandler`1.OnAdded(`0,Codeless.SharePoint.ObjectModel.SPModelEventArgs)">
            <summary>
            Invoked when the underlying list item is added to a list.
            </summary>
            <param name="item">Instance of the model class representing a list item.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelEventHandler`1.OnAddedAsync(`0,Codeless.SharePoint.ObjectModel.SPModelEventArgs)">
            <summary>
            Invoked asynchronously when the underlying list item is added to a list.
            </summary>
            <param name="item">Instance of the model class representing a list item.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelEventHandler`1.OnUpdating(`0,Codeless.SharePoint.ObjectModel.SPModelEventArgs)">
            <summary>
            Invoked when the underlying list item is being updated.
            </summary>
            <param name="item">Instance of the model class representing a list item.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelEventHandler`1.OnUpdated(`0,Codeless.SharePoint.ObjectModel.SPModelEventArgs)">
            <summary>
            Invoked when the underlying list item is updated.
            </summary>
            <param name="item">Instance of the model class representing a list item.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelEventHandler`1.OnUpdatedAsync(`0,Codeless.SharePoint.ObjectModel.SPModelEventArgs)">
            <summary>
            Invoked asynchronously when the underlying list item is updated.
            </summary>
            <param name="item">Instance of the model class representing a list item.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelEventHandler`1.OnAddingOrUpdating(`0,Codeless.SharePoint.ObjectModel.SPModelEventArgs)">
            <summary>
            Invoked when the underlying list item is being added to a list or being updated.
            </summary>
            <param name="item">Instance of the model class representing a list item.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelEventHandler`1.OnAddedOrUpdated(`0,Codeless.SharePoint.ObjectModel.SPModelEventArgs)">
            <summary>
            Invoked when the underlying list item is added to a list or updated.
            </summary>
            <param name="item">Instance of the model class representing a list item.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelEventHandler`1.OnAddedOrUpdatedAsync(`0,Codeless.SharePoint.ObjectModel.SPModelEventArgs)">
            <summary>
            Invoked asynchronously when the underlying list item is added to a list or updated.
            </summary>
            <param name="item">Instance of the model class representing a list item.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelEventHandler`1.OnDeleting(`0,Codeless.SharePoint.ObjectModel.SPModelEventArgs)">
            <summary>
            Invoked when the underlying list item is being deleted.
            </summary>
            <param name="item">Instance of the model class representing a list item.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelEventHandler`1.OnDeleted(`0,Codeless.SharePoint.ObjectModel.SPModelEventArgs)">
            <summary>
            Invoked when the underlying list item is deleted.
            </summary>
            <param name="item">Instance of the model class representing a list item.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelEventHandler`1.OnPublishing(`0,Codeless.SharePoint.ObjectModel.SPModelEventArgs)">
            <summary>
            Invoked when the underlying list item is being published.
            </summary>
            <param name="item">Instance of the model class representing a list item.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelEventHandler`1.OnPublished(`0,Codeless.SharePoint.ObjectModel.SPModelEventArgs)">
            <summary>
            Invoked when the underlying list item is published.
            </summary>
            <param name="item">Instance of the model class representing a list item.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPModelInterfaceAttribute">
            <summary>
            Specifies behaviors on interfaces that are used with <see cref="T:Codeless.SharePoint.ObjectModel.SPModel"/> classes.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPModelInterfaceAttribute.EventHandlerType">
            <summary>
            Gets or sets the type of event handler to be instantiated to receiver events of items implementing the interface.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.ISPModelMetaData">
            <summary>
            Defines the meta-data of the list item associated with an <see cref="T:Codeless.SharePoint.ObjectModel.SPModel"/> instance.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.ISPModelMetaData.ID">
            <summary>
            Gets the list item ID of the list item associated with an <see cref="T:Codeless.SharePoint.ObjectModel.SPModel"/> instance.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.ISPModelMetaData.UniqueId">
            <summary>
            Gets the unique ID of the list item associated with an <see cref="T:Codeless.SharePoint.ObjectModel.SPModel"/> instance.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.ISPModelMetaData.FileRef">
            <summary>
            Gets the server-relative path of the list item associated with an <see cref="T:Codeless.SharePoint.ObjectModel.SPModel"/> instance, without starting slash.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.ISPModelMetaData.ServerRelativeUrl">
            <summary>
            Gets the server-relative path of the list item associated with an <see cref="T:Codeless.SharePoint.ObjectModel.SPModel"/> instance, with starting slash.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.ISPModelMetaData.SiteId">
            <summary>
            Gets the parent site collection ID of the list item associated with an <see cref="T:Codeless.SharePoint.ObjectModel.SPModel"/> instance.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.ISPModelMetaData.WebId">
            <summary>
            Gets the parent site ID of the list item associated with an <see cref="T:Codeless.SharePoint.ObjectModel.SPModel"/> instance.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.ISPModelMetaData.ListId">
            <summary>
            Gets the parent list ID of the list item associated with an <see cref="T:Codeless.SharePoint.ObjectModel.SPModel"/> instance.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.ISPModelMetaData.FileLeafRef">
            <summary>
            Gets the filename of the list item associated with an <see cref="T:Codeless.SharePoint.ObjectModel.SPModel"/> instance.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.ISPModelMetaData.Filename">
            <summary>
            Gets the filename of the list item associated with an <see cref="T:Codeless.SharePoint.ObjectModel.SPModel"/> instance.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.ISPModelMetaData.LastModified">
            <summary>
            Gets the last modified time of the list item associated with an <see cref="T:Codeless.SharePoint.ObjectModel.SPModel"/> instance.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.ISPModelMetaData.EffectivePermissions">
            <summary>
            Gets the permission granted to the user that fetched the list item associated with an <see cref="T:Codeless.SharePoint.ObjectModel.SPModel"/> instance.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.ISPModelMetaData.ContentTypeId">
            <summary>
            Gets the content type ID of the list item associated with an <see cref="T:Codeless.SharePoint.ObjectModel.SPModel"/> instance.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.ISPModelMetaData.Version">
            <summary>
            Gets the version number of the list item associated with an <see cref="T:Codeless.SharePoint.ObjectModel.SPModel"/> instance.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.ISPModelMetaData.CheckOutUserID">
            <summary>
            Gets the user ID who has checked out the list item associated with an <see cref="T:Codeless.SharePoint.ObjectModel.SPModel"/> instance.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.ISPModelMetaData.HitHighlightSummary">
            <summary>
            Gets a highlighted summary returned from Office search service.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPModelIgnoreAttribute">
            <summary>
            Marks the attributed interface to be ignored in provisioning.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPFieldProvisionEventArgs">
            <summary>
            Provides event data to FieldProvisioning and FieldProvisioned events.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPFieldProvisionEventArgs.Site">
            <summary>
            Gets a site collection that a column is being provisioned to.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPFieldProvisionEventArgs.ParentList">
            <summary>
            Gets a list that a list column is being provisioned to. If it is a site column, *null* is returned.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPFieldProvisionEventArgs.Definition">
            <summary>
            Gets a definition object for the column being provisioned.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPFieldProvisionEventArgs.TargetModified">
            <summary>
            Indicates if an existing column is modified during provision.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPFieldProvisionEventArgs.Cancel">
            <summary>
            Gets or sets whether to cancel operation. Setting this property has no effects in FieldProvisioned event.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPContentTypeProvisionEventArgs">
            <summary>
            Provides event data to ContentTypeProvisioning and ContentTypeProvisioned events.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPContentTypeProvisionEventArgs.Site">
            <summary>
            Gets a site collection that a content type is being provisioned to.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPContentTypeProvisionEventArgs.ParentList">
            <summary>
            Gets a list that a list content type is being provisioned to. If it is a site content type, *null* is returned.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPContentTypeProvisionEventArgs.Definition">
            <summary>
            Gets a definition object for the content type being provisioned.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPContentTypeProvisionEventArgs.FieldOrder">
            <summary>
            Gets a list of ordered field names. The list can be manuplated for custom ordering.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPContentTypeProvisionEventArgs.TargetModified">
            <summary>
            Indicates if an existing content type is modified during provision.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPContentTypeProvisionEventArgs.Cancel">
            <summary>
            Gets or sets whether to cancel operation. Setting this property has no effects in ContentTypeProvisioned event.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPListProvisionEventArgs">
            <summary>
            Provides event data to ListProvisioning and ListProvisioned events.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPListProvisionEventArgs.Web">
            <summary>
            Gets a site that a list is being provisioned to.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPListProvisionEventArgs.List">
            <summary>
            Gets a list that is being provisioned.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPListProvisionEventArgs.Definition">
            <summary>
            Gets a definition object for the list being provisioned.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPListProvisionEventArgs.TargetModified">
            <summary>
            Indicates if an existing list is modified during provision.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPListProvisionEventArgs.Cancel">
            <summary>
            Gets or sets whether to cancel operation. Setting this property has no effects in ContentTypeProvisioned event.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPListViewProvisionEventArgs">
            <summary>
            Provides event data to ListViewProvisioning and ListViewProvisioned events.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPListViewProvisionEventArgs.Web">
            <summary>
            Gets a site that a list view is being provisioned to.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPListViewProvisionEventArgs.View">
            <summary>
            Gets a list view that is being provisioned.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPListViewProvisionEventArgs.Query">
            <summary>
            Gets or sets a query text for the list view being provisioned.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPListViewProvisionEventArgs.IncludedFields">
            <summary>
            Gets a list of included fields for the list view being provisioned. The list can be manuplated.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPListViewProvisionEventArgs.ExcludedFields">
            <summary>
            Gets a list of excluded fields for the list view being provisioned. The list can be manuplated.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPListViewProvisionEventArgs.TargetModified">
            <summary>
            Indicates if an existing list view is modified during provision.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPListViewProvisionEventArgs.Cancel">
            <summary>
            Gets or sets whether to cancel operation. Setting this property has no effects in ContentTypeProvisioned event.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPModelProvisionEventReceiver">
            <summary>
            Provides a base class for handling model provisioning events.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPModelProvisionEventReceiver.Default">
            <summary>
            Gets a default model provisioning handler which does nothing on all events.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelProvisionEventReceiver.OnListViewProvisioning(Codeless.SharePoint.ObjectModel.SPListViewProvisionEventArgs)">
            <summary>
            Called when a list view is being provisioned.
            </summary>
            <param name="eventArgs">Event data.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelProvisionEventReceiver.OnListViewProvisioned(Codeless.SharePoint.ObjectModel.SPListViewProvisionEventArgs)">
            <summary>
            Called when a list view is provisioned.
            </summary>
            <param name="eventArgs">Event data.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelProvisionEventReceiver.OnListProvisioning(Codeless.SharePoint.ObjectModel.SPListProvisionEventArgs)">
            <summary>
            Called when a list is being provisioned.
            </summary>
            <param name="eventArgs">Event data.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelProvisionEventReceiver.OnListProvisioned(Codeless.SharePoint.ObjectModel.SPListProvisionEventArgs)">
            <summary>
            Called when a list is provisioned.
            </summary>
            <param name="eventArgs">Event data.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelProvisionEventReceiver.OnContentTypeProvisioning(Codeless.SharePoint.ObjectModel.SPContentTypeProvisionEventArgs)">
            <summary>
            Called when a content type is being provisioned.
            </summary>
            <param name="eventArgs">Event data.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelProvisionEventReceiver.OnContentTypeProvisioned(Codeless.SharePoint.ObjectModel.SPContentTypeProvisionEventArgs)">
            <summary>
            Called when a content type is provisioned.
            </summary>
            <param name="eventArgs">Event data.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelProvisionEventReceiver.OnFieldProvisioning(Codeless.SharePoint.ObjectModel.SPFieldProvisionEventArgs)">
            <summary>
            Called when a site column is being provisioned.
            </summary>
            <param name="eventArgs">Event data.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelProvisionEventReceiver.OnFieldProvisioned(Codeless.SharePoint.ObjectModel.SPFieldProvisionEventArgs)">
            <summary>
            Called when a site column is provisioned.
            </summary>
            <param name="eventArgs">Event data.</param>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPModelExtension">
            <summary>
            Provides extension methods to the <see cref="T:Codeless.SharePoint.ObjectModel.SPModel"/> class.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelExtension.GetMetaData(Codeless.SharePoint.ObjectModel.SPModel)">
            <summary>
            Gets the meta-data of the list item associated with an <see cref="T:Codeless.SharePoint.ObjectModel.SPModel"/> instance.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelExtension.GetVersion``1(``0,System.Int32)">
            <summary>
            Gets a specified major version of the list item.
            </summary>
            <typeparam name="T">Type of model.</typeparam>
            <param name="model">A model object representing the list item.</param>
            <param name="majorVersion">Major version number.</param>
            <returns>A read-only model object of type <typeparamref name="T"/> if the specified version or *null* if such version does not exist.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelExtension.GetVersion``1(``0,Codeless.SharePoint.SPItemVersion)">
            <summary>
            Gets a specified version of the list item.
            </summary>
            <typeparam name="T">Type of model.</typeparam>
            <param name="model">A model object representing the list item.</param>
            <param name="version">Version number.</param>
            <returns>A read-only model object of type <typeparamref name="T"/> if the specified version or *null* if such version does not exist.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelExtension.GetVersions``1(``0)">
            <summary>
            Gets all versions of the list item.
            </summary>
            <typeparam name="T">Type of model.</typeparam>
            <param name="model">A model object representing the list item.</param>
            <returns>A enumerable collection containing read-only model objects of type <typeparamref name="T"/> representing different versions of the list item.</returns>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPOption">
            <summary>
            Specifies the value when provisioning a <see cref="T:System.Boolean"/> property.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPOption.Unspecified">
            <summary>
            Does not update the <see cref="T:System.Boolean"/> property.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPOption.True">
            <summary>
            Updates the <see cref="T:System.Boolean"/> property to *true*.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPOption.False">
            <summary>
            Updates the <see cref="T:System.Boolean"/> property to *false*.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.ISPModelManager">
            <summary>
            Encapsulates <see cref="T:Codeless.SharePoint.ObjectModel.SPModelManager`1"/> when the model type is variable or unknown.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.ISPModelManager.Site">
            <summary>
            Gets the site collection associated with the site that initialized this instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1"/> class.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.ISPModelManager.TermStore">
            <summary>
            Gets the term store connected with the site that initialized this instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1"/> class.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.ISPModelManager.GetItems">
            <summary>
            Gets items of the associated content type(s).
            </summary>
            <returns>A collection containing the returned items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.ISPModelManager.GetItems(Codeless.SharePoint.CamlExpression)">
            <summary>
            Gets items of the associated content type(s) that satisfy the condition.
            </summary>
            <param name="query">CAML query expression.</param>
            <returns>A collection containing the returned items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.ISPModelManager.GetItems(Codeless.SharePoint.CamlExpression,System.UInt32)">
            <summary>
            Gets items of the associated content type(s) that satisfy the condition.
            </summary>
            <param name="query">CAML query expression.</param>
            <param name="limit">Maximum number of items to be returned.</param>
            <returns>A collection containing the returned items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.ISPModelManager.GetItems(Codeless.SharePoint.CamlExpression,System.UInt32,System.UInt32)">
            <summary>
            Gets items of the associated content type(s) that satisfy the condition.
            </summary>
            <param name="query">CAML query expression.</param>
            <param name="limit">Maximum number of items to be returned.</param>
            <param name="startRow">Number of items to skip from start.</param>
            <returns>A collection containing the returned items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.ISPModelManager.GetItems(Codeless.SharePoint.CamlExpression,System.UInt32,System.String[],Microsoft.Office.Server.Search.Query.KeywordInclusion)">
            <summary>
            Performs a keyword search against the items of the associated content type(s).
            </summary>
            <param name="query">CAML query expression.</param>
            <param name="limit">Maximum number of items to be returned.</param>
            <param name="keywords">A list of keywords to be searched against.</param>
            <param name="keywordInclusion">See <see cref="T:Microsoft.Office.Server.Search.Query.KeywordInclusion"/>.</param>
            <returns>A collection containing the returned items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.ISPModelManager.GetItems(Codeless.SharePoint.CamlExpression,System.UInt32,System.UInt32,System.String[],Codeless.SharePoint.SearchRefiner[],Microsoft.Office.Server.Search.Query.KeywordInclusion,System.Int32@)">
            <summary>
            Performs a keyword search against the items of the associated content type(s).
            </summary>
            <param name="query">CAML query expression.</param>
            <param name="limit">Maximum number of items to be returned.</param>
            <param name="startRow">Number of items to skip from start.</param>
            <param name="keywords">A list of keywords to be searched against.</param>
            <param name="refiners">A list of <see cref="T:Codeless.SharePoint.SearchRefiner"/> instances. Refinement results are populated to the supplied instances.</param>
            <param name="keywordInclusion">See <see cref="T:Microsoft.Office.Server.Search.Query.KeywordInclusion"/>.</param>
            <param name="totalCount">Total number of items.</param>
            <returns>A collection containing the returned items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.ISPModelManager.GetCount">
            <summary>
            Gets the number of items of the associated content type(s).
            </summary>
            <returns>Number of items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.ISPModelManager.GetCount(Codeless.SharePoint.CamlExpression)">
            <summary>
            Gets the number of items of the associated content type(s) that satisfy the condition.
            </summary>
            <param name="query">CAML query expression.</param>with the associated content type(s)
            <returns>Number of items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.ISPModelManager.GetCount(Codeless.SharePoint.CamlExpression,System.String[],Microsoft.Office.Server.Search.Query.KeywordInclusion)">
            <summary>
            Performs a keyword search against the items of the associated content type(s) and returns the number of items.
            </summary>
            <param name="query">CAML query expression.</param>
            <param name="keywords">A list of keywords to be searched against.</param>
            <param name="keywordInclusion">See <see cref="T:Microsoft.Office.Server.Search.Query.KeywordInclusion"/>.</param>
            <returns>Number of items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.ISPModelManager.Create(System.Type)">
            <summary>
            Creates an item of the associated content type. If the content type derives from File or Folder, a random name is used.
            See also <see cref="M:Codeless.SharePoint.ObjectModel.ISPModelManager.Create(System.Type,System.String)"/>
            </summary>
            <param name="modelType">Type of item to be created.</param>
            <returns>An item of the specified content type.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.ISPModelManager.Create(System.Type,System.String)">
            <summary>
            Creates an item of the associated content type with the given file or folder name. 
            See also <see cref="M:Codeless.SharePoint.ObjectModel.ISPModelManager.Create(System.Type,System.String)"/>
            </summary>
            <param name="modelType">Type of item to be created.</param>
            <param name="filename">File or folder name.</param>
            <returns>An item of the specified content type.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.ISPModelManager.Recycle(System.Object)">
            <summary>
            Moves the specified item to recycle bin.
            </summary>
            <param name="model">An item to be recycled.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.ISPModelManager.Delete(System.Object)">
            <summary>
            Deletes the specified item from a list. 
            </summary>
            <param name="model">An item to be deleted.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.ISPModelManager.CommitChanges">
            <summary>
            Commits changes made to model class instances fetched fromt this manager.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.ISPModelManager.CommitChanges(System.Object)">
            <summary>
            Commits changes made to the specified model class instances.
            </summary>
            <param name="item">An item with changes to be persisted.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.ISPModelManager.CommitChanges(Codeless.SharePoint.ObjectModel.SPModelCommitMode)">
            <summary>
            Commits changes made to model class instances fetched from this manager with the specified commit option.
            </summary>
            <param name="mode">An value of <see cref="T:Codeless.SharePoint.ObjectModel.SPModelCommitMode" /> representing how a list item is updated.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.ISPModelManager.CommitChanges(System.Object,Codeless.SharePoint.ObjectModel.SPModelCommitMode)">
            <summary>
            Commits changes made to the specified model class instances with the specified commit option.
            </summary>
            <param name="item">An item with changes to be persisted.</param>
            <param name="mode">An value of <see cref="T:Codeless.SharePoint.ObjectModel.SPModelCommitMode" /> representing how a list item is updated.</param>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPModelManager`1">
            <summary>
            Provides a generic implementation of <see cref="T:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1"/>.
            </summary>
            <typeparam name="T">Type of model class.</typeparam>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.#ctor(Microsoft.SharePoint.SPSite)">
            <summary>
            Initializes an instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPModelManager`1"/> class that queries list items under the specified site collection and its sub-sites.
            </summary>
            <param name="site">The site collection object to query against.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.#ctor(Microsoft.SharePoint.SPWeb)">
            <summary>
            Initializes an instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPModelManager`1"/> class that queries list items under the specified site and its sub-sites.
            </summary>
            <param name="web">Site object.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.#ctor(Microsoft.SharePoint.SPWeb,System.Boolean)">
            <summary>
            Initializes an instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPModelManager`1"/> class that queries list items under the specified site and optionally its sub-sites.
            </summary>
            <param name="web">The site object to query against.</param>
            <param name="currentWebOnly">A boolean value specifies whether lists in sub-sites should also be queried.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.#ctor(Microsoft.SharePoint.SPList)">
            <summary>
            Initializes an instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPModelManager`1"/> class that queries list items under the specified list.
            </summary>
            <param name="list">The list object to query against.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.#ctor(Microsoft.SharePoint.SPWeb,System.Collections.Generic.IList{Microsoft.SharePoint.SPList})">
            <summary>
            Initializes an instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPModelManager`1"/> class that queries list items under the specified list(s).
            </summary>
            <param name="web">The site object.</param>
            <param name="lists">A List of lists to query against.</param>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPModelManager`1.Current">
            <summary>
            Gets a singleton manager in the current HTTP request.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPModelManager`1.CurrentItem">
            <summary>
            Gets the list item associated with the current SharePoint request context.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.GetItems">
            <summary>
            Gets items of the associated content type(s).
            </summary>
            <returns>A collection containing the returned items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.GetItems(Codeless.SharePoint.CamlExpression)">
            <summary>
            Gets items of the associated content type(s) that satisfy the condition.
            </summary>
            <param name="query">CAML query expression.</param>
            <returns>A collection containing the returned items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.GetItems(Codeless.SharePoint.CamlExpression,System.UInt32)">
            <summary>
            Gets items of the associated content type(s) that satisfy the condition.
            </summary>
            <param name="query">CAML query expression.</param>
            <param name="limit">Maximum number of items to be returned.</param>
            <returns>A collection containing the returned items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.GetItems(Codeless.SharePoint.CamlExpression,System.UInt32,System.String[],Microsoft.Office.Server.Search.Query.KeywordInclusion)">
            <summary>
            Performs a keyword search against the items of the associated content type(s).
            </summary>
            <param name="query">CAML query expression.</param>
            <param name="limit">Maximum number of items to be returned.</param>
            <param name="keywords">A list of keywords to be searched against.</param>
            <param name="keywordInclusion">See <see cref="T:Microsoft.Office.Server.Search.Query.KeywordInclusion"/>.</param>
            <returns>A collection containing the returned items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.GetItems``1">
            <summary>
            Gets items of the associated content type(s).
            </summary>
            <typeparam name="TItem">Item type.</typeparam>
            <returns>A collection containing the returned items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.GetItems``1(Codeless.SharePoint.CamlExpression)">
            <summary>
            Gets items of the associated content type(s) that satisfy the condition.
            </summary>
            <typeparam name="TItem">Item type.</typeparam>
            <param name="query">CAML query expression.</param>
            <returns>A collection containing the returned items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.GetItems``1(Codeless.SharePoint.CamlExpression,System.UInt32)">
            <summary>
            Gets items of the associated content type(s) that satisfy the condition.
            </summary>
            <typeparam name="TItem">Item type.</typeparam>
            <param name="query">CAML query expression.</param>
            <param name="limit">Maximum number of items to be returned.</param>
            <returns>A collection containing the returned items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.GetItems``1(Codeless.SharePoint.CamlExpression,System.UInt32,System.UInt32)">
            <summary>
            Gets items of the associated content type(s) that satisfy the condition.
            </summary>
            <typeparam name="TItem">Item type.</typeparam>
            <param name="query">CAML query expression.</param>
            <param name="limit">Maximum number of items to be returned.</param>
            <param name="startRow">Number of items to skip from start.</param>
            <returns>A collection containing the returned items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.GetItems``1(Codeless.SharePoint.CamlExpression,System.UInt32,System.String[],Microsoft.Office.Server.Search.Query.KeywordInclusion)">
            <summary>
            Performs a keyword search against the items of the associated content type(s).
            </summary>
            <typeparam name="TItem">Item type.</typeparam>
            <param name="query">CAML query expression.</param>
            <param name="limit">Maximum number of items to be returned.</param>
            <param name="keywords">A list of keywords to be searched against.</param>
            <param name="keywordInclusion">See <see cref="T:Microsoft.Office.Server.Search.Query.KeywordInclusion"/>.</param>
            <returns>A collection containing the returned items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.GetItems``1(Codeless.SharePoint.CamlExpression,System.UInt32,System.UInt32,System.String[],Codeless.SharePoint.SearchRefiner[],Microsoft.Office.Server.Search.Query.KeywordInclusion,System.Int32@)">
            <summary>
            Performs a keyword search against the items of the associated content type(s).
            </summary>
            <typeparam name="TItem">Item type.</typeparam>
            <param name="query">CAML query expression.</param>
            <param name="limit">Maximum number of items to be returned.</param>
            <param name="startRow">Number of items to skip from start.</param>
            <param name="keywords">A list of keywords to be searched against.</param>
            <param name="refiners">A list of <see cref="T:Codeless.SharePoint.SearchRefiner"/> instances. Refinement results are populated to the supplied instances.</param>
            <param name="keywordInclusion">See <see cref="T:Microsoft.Office.Server.Search.Query.KeywordInclusion"/>.</param>
            <param name="totalCount">Total number of items.</param>
            <returns>A collection containing the returned items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.GetCount">
            <summary>
            Gets the number of items of the associated content type(s).
            </summary>
            <returns>Number of items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.GetCount(Codeless.SharePoint.CamlExpression)">
            <summary>
            Gets the number of items of the associated content type(s) that satisfy the condition.
            </summary>
            <param name="query">CAML query expression.</param>with the associated content type(s)
            <returns>Number of items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.GetCount(Codeless.SharePoint.CamlExpression,System.String[],Microsoft.Office.Server.Search.Query.KeywordInclusion)">
            <summary>
            Performs a keyword search against the items of the associated content type(s) and returns the number of items.
            </summary>
            <param name="query">CAML query expression.</param>
            <param name="keywords">A list of keywords to be searched against.</param>
            <param name="keywordInclusion">See <see cref="T:Microsoft.Office.Server.Search.Query.KeywordInclusion"/>.</param>
            <returns>Number of items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.GetCount``1">
            <summary>
            Gets the number of items of the associated content type(s).
            </summary>
            <typeparam name="TItem">Item type.</typeparam>
            <returns>Number of items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.GetCount``1(Codeless.SharePoint.CamlExpression)">
            <summary>
            Gets the number of items of the associated content type(s) that satisfy the condition.
            </summary>
            <typeparam name="TItem">Item type.</typeparam>
            <param name="query">CAML query expression.</param>with the associated content type(s)
            <returns>Number of items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.GetCount``1(Codeless.SharePoint.CamlExpression,System.String[],Microsoft.Office.Server.Search.Query.KeywordInclusion)">
            <summary>
            Performs a keyword search against the items of the associated content type(s) and returns the number of items.
            </summary>
            <typeparam name="TItem">Item type.</typeparam>
            <param name="query">CAML query expression.</param>
            <param name="keywords">A list of keywords to be searched against.</param>
            <param name="keywordInclusion">See <see cref="T:Microsoft.Office.Server.Search.Query.KeywordInclusion"/>.</param>
            <returns>Number of items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.GetCount``1(Codeless.SharePoint.CamlExpression,System.String[],Codeless.SharePoint.SearchRefiner[],Microsoft.Office.Server.Search.Query.KeywordInclusion)">
            <summary>
            Performs a keyword search against the items of the associated content type(s) and returns the number of items.
            </summary>
            <typeparam name="TItem">Item type.</typeparam>
            <param name="query">CAML query expression.</param>
            <param name="keywords">A list of keywords to be searched against.</param>
            <param name="refiners">A list of <see cref="T:Codeless.SharePoint.SearchRefiner"/> instances. Refinement results are populated to the supplied instances.</param>
            <param name="keywordInclusion">See <see cref="T:Microsoft.Office.Server.Search.Query.KeywordInclusion"/>.</param>
            <returns>Number of items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.Create``1">
            <summary>
            Creates an item of the associated content type.
            If the content type derives from File or Folder, a random name is used. See <see cref="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.Create``1(System.String)"/>.
            </summary>
            <typeparam name="TItem">Item type.</typeparam>
            <returns>An item of the specified content type.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.Create``1(System.String)">
            <summary>
            Creates an item of the associated content type with the given file or folder name.
            </summary>
            <typeparam name="TItem">Item type.</typeparam>
            <param name="name">File or folder name.</param>
            <returns>An item of the specified content type.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.Create(System.Type)">
            <summary>
            Creates an item of the associated content type.
            If the content type derives from File or Folder, a random name is used. See <see cref="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.Create``1(System.String)"/>.
            </summary>
            <param name="modelType">Item type.</param>
            <returns>An item of the specified content type.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.Create(System.Type,System.String)">
            <summary>
            Creates an item of the associated content type with the given file or folder name.
            </summary>
            <param name="modelType">Item type.</param>
            <param name="name">File or folder name.</param>
            <returns>An item of the specified content type.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.Recycle(`0)">
            <summary>
            Moves the specified item to recycle bin.
            </summary>
            <param name="item">An item to be recycled.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.Delete(`0)">
            <summary>
            Deletes the specified item from a list. 
            </summary>
            <param name="item">An item to be deleted.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.CommitChanges">
            <summary>
            Commits changes made to model class instances fetched from this manager.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.CommitChanges(`0)">
            <summary>
            Commits changes made to the specified model class instances.
            </summary>
            <param name="item">An item with changes to be persisted.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.CommitChanges(Codeless.SharePoint.ObjectModel.SPModelCommitMode)">
            <summary>
            Commits changes made to model class instances fetched from this manager with the specified commit option.
            </summary>
            <param name="mode">An value of <see cref="T:Codeless.SharePoint.ObjectModel.SPModelCommitMode" /> representing how a list item is updated.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.CommitChanges(`0,Codeless.SharePoint.ObjectModel.SPModelCommitMode)">
            <summary>
            Commits changes made to the specified model class instances with the specified commit option.
            </summary>
            <param name="item">An item with changes to be persisted.</param>
            <param name="mode">An value of <see cref="T:Codeless.SharePoint.ObjectModel.SPModelCommitMode" /> representing how a list item is updated.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.ExecuteFileOperation(`0,Codeless.SharePoint.ObjectModel.SPModelFileOperation)">
            <summary>
            Executes specified operation on the file represented by the model object with no comment.
            </summary>
            <param name="item">An item which operation is being performed on.</param>
            <param name="operation">The operation to be performed.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManager`1.ExecuteFileOperation(`0,Codeless.SharePoint.ObjectModel.SPModelFileOperation,System.String)">
            <summary>
            Executes specified operation on the file represented by the model object with the specified comment.
            </summary>
            <param name="item">An item which operation is being performed on.</param>
            <param name="operation">The operation to be performed.</param>
            <param name="comment">A string that contains a comment about the operation. It is ignored for some oeprations.</param>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPModelEventType">
            <summary>
            Represents the type of an SPModel event.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPModelEventType.Adding">
            <summary>
            Respresents a synchronous event which the underlying list item is being added to a list.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPModelEventType.Added">
            <summary>
            Respresents a synchronous event which the underlying list item is added to a list.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPModelEventType.AddedAsync">
            <summary>
            Respresents an asynchronous event which the underlying list item is added to a list.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPModelEventType.Updating">
            <summary>
            Respresents a synchronous event which the underlying list item is being updated.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPModelEventType.Updated">
            <summary>
            Respresents a synchronous event which the underlying list item is updated.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPModelEventType.UpdatedAsync">
            <summary>
            Respresents an asynchronous event which the underlying list item is updated.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPModelEventType.Deleting">
            <summary>
            Respresents a synchronous event which the underlying list item is being deleted from a lsit.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPModelEventType.Deleted">
            <summary>
            Respresents a synchronous event which the underlying list item is deleted from a lsit.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPModelEventType.Publishing">
            <summary>
            Respresents a synchronous event which the underlying list item is being published.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPModelEventType.Published">
            <summary>
            Respresents a synchronous event which the underlying list item is published.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPModelEventArgs">
            <summary>
            Provides data to an SPModel event.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPModelEventArgs.Site">
            <summary>
            Gets the parent site collection of the underlying list item which triggered this event.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPModelEventArgs.Web">
            <summary>
            Gets the parent site of the underlying list item which triggered this event.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPModelEventArgs.List">
            <summary>
            Gets the parent list of the underlying list item which triggered this event.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPModelEventArgs.ListItem">
            <summary>
            Gets the underlying list item which triggered this event.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPModelEventArgs.Properties">
            <summary>
            Gets the properties of the underlying SPItem event.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPModelEventArgs.OriginalValue">
            <summary>
            Gets a read-only model object containing original values of the underlying list item.
            The type of the model object returned may not be the same as the object that this event is invoked on, as the value of Content Type ID field can be changed.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelEventArgs.GetEventFiringDisabledScope">
            <summary>
            Disables event firing on subsequent updates to list items until disposing the returned object.
            </summary>
            <returns>A disposable object.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelEventArgs.GetEventFiringEnabledScope">
            <summary>
            Enables event firing on subsequent updates to list items until disposing the returned object.
            </summary>
            <returns>A disposable object.</returns>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPModelEventArgs.EventType">
            <summary>
            Gets the type of this event.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPModelEventArgs.IsWorkflowFiredEvent">
            <summary>
            Indicates whether this event is triggered inside a workflow.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPModelEventArgs.IsNestedItemEvent">
            <summary>
            Indicates whether this event is triggered by another event.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelEventArgs.PreventAction(System.String)">
            <summary>
            Cancels the action with the specified message.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelEventArgs.PreventAction(System.String,Microsoft.SharePoint.SPEventReceiverStatus)">
            <summary>
            Cancels the action with the specified message and event status.
            </summary>
            <param name="message">Error message.</param>
            <param name="status">Cancellation status.</param>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPModelManagerExtension">
            <summary>
            Provides extension methods to model manager.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerExtension.GetItemByID``1(Codeless.SharePoint.ObjectModel.SPModelManager{``0},System.Int32)">
            <summary>
            Gets a list item of model type <typeparamref name="T"/> with the specified list item ID.
            </summary>
            <typeparam name="T">Model type.</typeparam>
            <param name="manager">A model manager instance.</param>
            <param name="id">List item ID.</param>
            <returns>A list item; or *null* if there is no list item with the specified ID.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerExtension.GetItemByUniqueId``1(Codeless.SharePoint.ObjectModel.SPModelManager{``0},System.Guid)">
            <summary>
            Gets a list item of model type <typeparamref name="T"/> with the specified unique ID.
            </summary>
            <typeparam name="T">Model type.</typeparam>
            <param name="manager">A model manager instance.</param>
            <param name="uniqueId">Unique ID.</param>
            <returns>A list item; or *null* if there is no list item with the specified unique ID.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerExtension.Query``1(Codeless.SharePoint.ObjectModel.SPModelManagerBase{``0})">
            <summary>
            Creates a LINQ queryable interface.
            </summary>
            <typeparam name="T">Model type.</typeparam>
            <param name="manager">A model manager instance.</param>
            <returns>A LINQ queryable interface.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerExtension.Query``1(Codeless.SharePoint.ObjectModel.SPModelManagerBase{``0},System.String[],Microsoft.Office.Server.Search.Query.KeywordInclusion)">
            <summary>
            Creates a LINQ queryable interface which explicitly use Office search service to query items.
            </summary>
            <typeparam name="T">Model type.</typeparam>
            <param name="manager">A model manager instance.</param>
            <param name="keywords">A list of keywords.</param>
            <param name="keywordInclusion">Whether to match all or any keywords.</param>
            <returns>A LINQ queryable interface.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerExtension.Query``1(Codeless.SharePoint.ObjectModel.ISPModelManager)">
            <summary>
            Creates a LINQ queryable interface.
            </summary>
            <typeparam name="T">Model type.</typeparam>
            <param name="manager">A model manager instance.</param>
            <returns>A LINQ queryable interface.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerExtension.Query``1(Codeless.SharePoint.ObjectModel.ISPModelManager,System.String[],Microsoft.Office.Server.Search.Query.KeywordInclusion)">
            <summary>
            Creates a LINQ queryable interface which explicitly use Office search service to query items.
            </summary>
            <typeparam name="T">Model type.</typeparam>
            <param name="manager">A model manager instance.</param>
            <param name="keywords">A list of keywords.</param>
            <param name="keywordInclusion">Whether to match all or any keywords.</param>
            <returns>A LINQ queryable interface.</returns>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPModelManagerDefaultTypeAttribute">
            <summary>
            Defines a default type of model manager to be instantiated using <see cref="M:Codeless.SharePoint.ObjectModel.SPModel.GetDefaultManager(System.Type,Microsoft.SharePoint.SPWeb)"/> or <see cref="P:Codeless.SharePoint.ObjectModel.SPModelManager`1.Current"/>.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerDefaultTypeAttribute.#ctor(System.Type)">
            <summary>
            Creates an instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPModelManagerDefaultTypeAttribute"/> class with the specified type.
            </summary>
            <param name="type"></param>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPModelManagerDefaultTypeAttribute.DefaultType">
            <summary>
            Gets the default type of model manager attributed to a model class.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPModel">
            <summary>
            Provides the base class of model objects representing a list item in site collection.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModel.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPModel.Adapter">
            <summary>
            Gets the data access adapter of the underlying list item.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPModel.ParentCollection">
            <summary>
            Get the <see cref="T:Codeless.SharePoint.ObjectModel.SPModelCollection"/> object this object belongs to.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPModel.Manager">
            <summary>
            Get the <see cref="T:Codeless.SharePoint.ObjectModel.ISPModelManager"/> object this object belongs to.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModel.OnAdding(Codeless.SharePoint.ObjectModel.SPModelEventArgs)">
            <summary>
            Invoked when the underlying list item is being added to a list.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModel.OnAdded(Codeless.SharePoint.ObjectModel.SPModelEventArgs)">
            <summary>
            Invoked when the underlying list item is added to a list.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModel.OnAddedAsync(Codeless.SharePoint.ObjectModel.SPModelEventArgs)">
            <summary>
            Invoked asynchronously when the underlying list item is added to a list.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModel.OnUpdating(Codeless.SharePoint.ObjectModel.SPModelEventArgs)">
            <summary>
            Invoked when the underlying list item is being updated.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModel.OnUpdated(Codeless.SharePoint.ObjectModel.SPModelEventArgs)">
            <summary>
            Invoked when the underlying list item is updated.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModel.OnUpdatedAsync(Codeless.SharePoint.ObjectModel.SPModelEventArgs)">
            <summary>
            Invoked asynchronously when the underlying list item is updated.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModel.OnAddingOrUpdating(Codeless.SharePoint.ObjectModel.SPModelEventArgs)">
            <summary>
            Invoked when the underlying list item is being added to a list or being updated.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModel.OnAddedOrUpdated(Codeless.SharePoint.ObjectModel.SPModelEventArgs)">
            <summary>
            Invoked when the underlying list item is added to a list or updated.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModel.OnAddedOrUpdatedAsync(Codeless.SharePoint.ObjectModel.SPModelEventArgs)">
            <summary>
            Invoked asynchronously when the underlying list item is added to a list or updated.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModel.OnDeleting(Codeless.SharePoint.ObjectModel.SPModelEventArgs)">
            <summary>
            Invoked when the underlying list item is being deleted.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModel.OnDeleted(Codeless.SharePoint.ObjectModel.SPModelEventArgs)">
            <summary>
            Invoked when the underlying list item is deleted.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModel.OnPublishing(Codeless.SharePoint.ObjectModel.SPModelEventArgs)">
            <summary>
            Invoked when the underlying list item is being published.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModel.OnPublished(Codeless.SharePoint.ObjectModel.SPModelEventArgs)">
            <summary>
            Invoked when the underlying list item is published.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModel.ResolveContentTypeId(System.Type)">
            <summary>
            Gets a list of content type ID associated with the specified model type.
            </summary>
            <param name="type">A type that derives from <see cref="T:Codeless.SharePoint.ObjectModel.SPModel"/>.</param>
            <returns>A list of content type ID.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModel.GetRequiredViewFields(System.Type)">
            <summary>
            Gets a list of field internal names needed when querying list item represented by the specified model type.
            </summary>
            <param name="type">A type that derives from <see cref="T:Codeless.SharePoint.ObjectModel.SPModel"/>.</param>
            <returns>A list of internal names.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModel.ResolveType(Microsoft.SharePoint.SPContentTypeId)">
            <summary>
            Resolves inherited <see cref="T:Codeless.SharePoint.ObjectModel.SPModel"/> type associated with the specified content type ID.
            For details of associating Content type ID for a given type, see <see cref="T:Codeless.SharePoint.ObjectModel.SPContentTypeAttribute"/>.
            </summary>
            <param name="contentTypeId">Content type ID.</param>
            <exception cref="T:System.ArgumentException">No types are found with the specified content type ID.</exception>
            <returns>A resolved type.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModel.Provision(System.Type,Microsoft.SharePoint.SPWeb)">
            <summary>
            Creates content type(s) associated with the specified type to the given site, and create list if any.
            </summary>
            <remarks>
            Children content types associated with derived types are also created. Content types and site columns are prosivioned on the root site.
            If a <see cref="T:Codeless.SharePoint.ObjectModel.SPListAttribute"/> is attributed to the specified type, a list with URL specified by <see cref="P:Codeless.SharePoint.ObjectModel.SPListAttribute.Url"/> will be created on the given site.
            However, if another <see cref="T:Codeless.SharePoint.ObjectModel.SPListAttribute"/> is attributed to derived types, lists will *not* be created.</remarks>
            <param name="type">A type that derives from <see cref="T:Codeless.SharePoint.ObjectModel.SPModel"/>.</param>
            <param name="targetWeb">Site object.</param>
            <returns>A collection of lists affected.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModel.Provision(System.Type,Microsoft.SharePoint.SPWeb,System.String)">
            <summary>
            Creates content type(s) associated with the specified type to the given site, and create list with the specified URL if any.
            </summary>
            <remarks>
            Children content types associated with derived types are also created. Content types and site columns are prosivioned on the root site.
            If a <see cref="T:Codeless.SharePoint.ObjectModel.SPListAttribute"/> is attributed to the specified type, a list with URL specified by <paramref name="webRelativeUrl"/> will be created on the given site.
            However, if another <see cref="T:Codeless.SharePoint.ObjectModel.SPListAttribute"/> is attributed to derived types, lists will *not* be created.
            </remarks>
            <param name="type">A type that derives from <see cref="T:Codeless.SharePoint.ObjectModel.SPModel"/>.</param>
            <param name="targetWeb">Site object.</param>
            <param name="webRelativeUrl">List URL.</param>
            <returns>A collection of lists affected.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModel.Provision(System.Type,Microsoft.SharePoint.SPWeb,System.String,System.String)">
            <summary>
            Creates content type(s) associated with the specified type to the given site, and create list with the specified URL and title if any.
            </summary>
            <param name="type">A type that derives from <see cref="T:Codeless.SharePoint.ObjectModel.SPModel"/>.</param>
            <param name="targetWeb">Site object.</param>
            <param name="webRelativeUrl">List URL.</param>
            <param name="title">List title.</param>
            <returns>A collection of lists affected.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModel.Provision(System.Type,Microsoft.SharePoint.SPList)">
            <summary>
            Creates content type(s) associated with the specified type to the given list.
            </summary>
            <remarks>
            Children content types associated with derived types are also created. Content types and site columns are prosivioned on the root site.
            If a <see cref="T:Codeless.SharePoint.ObjectModel.SPListAttribute"/> is attributed to the specified type, values specified on the attribute are copied to the given list.
            </remarks>
            <param name="type">A type that derives from <see cref="T:Codeless.SharePoint.ObjectModel.SPModel"/>.</param>
            <param name="targetList">A list object.</param>
            <returns>A collection of lists affected.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModel.ProvisionAsTemplate(System.Type,Microsoft.SharePoint.SPWeb,System.String)">
            <summary>
            Creates a list template with the specified name. The list template created contains content type(s) associated with the specified type.
            </summary>
            <param name="type">A type that derives from <see cref="T:Codeless.SharePoint.ObjectModel.SPModel"/>.</param>
            <param name="targetWeb">Site object.</param>
            <param name="title">Name of list template.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModel.GetDefaultManager(System.Type,Microsoft.SharePoint.SPWeb)">
            <summary>
            Gets the default manager instantiated with the specified site.
            Actual type of the created manager can be set through <see cref="T:Codeless.SharePoint.ObjectModel.SPModelManagerDefaultTypeAttribute"/> on the model type.
            If there is no <see cref="T:Codeless.SharePoint.ObjectModel.SPModelManagerDefaultTypeAttribute"/> specified, an <see cref="T:Codeless.SharePoint.ObjectModel.SPModelManager`1"/> object is instantiated with <paramref name="type"/>.
            </summary>
            <param name="type">Model type.</param>
            <param name="contextWeb">A site object.</param>
            <returns>A manager object.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModel.GetDefaultManager(System.Type,Microsoft.SharePoint.SPWeb,Codeless.SharePoint.SPObjectCache)">
            <summary>
            Gets the default manager instantiated with the specified site and an existing SharePoint object cache.
            Actual type of the created manager can be set through <see cref="T:Codeless.SharePoint.ObjectModel.SPModelManagerDefaultTypeAttribute"/> on the model type.
            If there is no <see cref="T:Codeless.SharePoint.ObjectModel.SPModelManagerDefaultTypeAttribute"/> specified, an <see cref="T:Codeless.SharePoint.ObjectModel.SPModelManager`1"/> object is instantiated with <paramref name="type"/>.
            </summary>
            <param name="type">Model type.</param>
            <param name="contextWeb">A site object.</param>
            <param name="cache">An instance of SharePoint object cache.</param>
            <returns>A manager object.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModel.EnumerateLists(System.Type,Microsoft.SharePoint.SPWeb)">
            <summary>
            Gets all lists under the specified site and all its descendant sites which contains the content type associated with the model type.
            </summary>
            <param name="type">Model type.</param>
            <param name="contextWeb">A site object.</param>
            <exception cref="T:System.ArgumentException">The type <paramref name="type"/> does not associate with any content type.</exception>
            <returns>An enumerable of list objects.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModel.DoesListContainsType(Microsoft.SharePoint.SPList,System.Type)">
            <summary>
            Determines whether the specified list contains the content type associated with the model type.
            </summary>
            <param name="list">A list object.</param>
            <param name="type">Model type.</param>
            <exception cref="T:System.ArgumentException">The type <paramref name="type"/> does not associate with any content type.</exception>
            <returns>*true* if the specified list contains content type that is associated with the model type.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModel.TryCreate(Microsoft.SharePoint.SPListItem)">
            <summary>
            Creates a model object representing the list item.
            </summary>
            <param name="listItem">A list item.</param>
            <returns>A model object or *null* if there is no types associated with the content type of the list item.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModel.TryCreate(Codeless.SharePoint.ISPListItemAdapter)">
            <summary>
            Creates a model object representing the list item.
            </summary>
            <param name="adapter">A data access adapter of the list item.</param>
            <returns>A model object or *null* if there is no types associated with the content type of the list item.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModel.TryCreate(Codeless.SharePoint.ISPListItemAdapter,Codeless.SharePoint.ObjectModel.ISPModelManager)">
            <summary>
            Creates a model object representing the list item.
            </summary>
            <param name="adapter">A data access adapter of the list item.</param>
            <param name="manager">An instance of the <see cref="T:Codeless.SharePoint.ObjectModel.ISPModelManager"/> class which model object created will belongs to this manager.</param>
            <returns>A model object or *null* if there is no types associated with the content type of the list item.</returns>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPModelCollection">
            <summary>
            Provides a base class for a collection of <see cref="T:Codeless.SharePoint.ObjectModel.SPModel"/> queried from a site collection.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPModelCollection.LookupKey">
            <summary>
            Provides a key for fetched model class instance lookup.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelCollection.LookupKey.#ctor(System.Guid,System.Int32)">
            <summary>
            Creates a key.
            </summary>
            <param name="listId">List ID.</param>
            <param name="listItemId">List item ID.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelCollection.LookupKey.Equals(Codeless.SharePoint.ObjectModel.SPModelCollection.LookupKey)">
            <summary>
            Determines the equality of this instance to the given instance.
            Two date ranges are considered equal if and only if both list ID and list item ID are equal.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelCollection.LookupKey.Equals(System.Object)">
            <summary>
            Overriden. When <paramref name="obj"/> is a <see cref="T:Codeless.SharePoint.ObjectModel.SPModelCollection.LookupKey"/> instance, the custom equality comparison is performed.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelCollection.LookupKey.GetHashCode">
            <summary>
            Overriden.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPModelCollection.Count">
            <summary>
            Gets the number of items in this collection.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies items in this collection to the specified array at an arbitrary position.
            </summary>
            <param name="array">Destination array.</param>
            <param name="arrayIndex">Position at the destination array where the first item in this collection is copied to.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelCollection.BaseGetEnumerator">
            <summary>
            When overriden, gets a typeless enumerator of that iterates through all items in this collection.
            </summary>
            <returns>An enumerator.</returns>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPModelCollection`1">
            <summary>
            Provides a typed collection of <see cref="T:Codeless.SharePoint.ObjectModel.SPModel"/> queried from a site collection or search service.
            </summary>
            <typeparam name="T">Type of the items in this collection.</typeparam>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPModelCollection`1.Count">
            <summary>
            Gets the number of items in this collection.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPModelCollection`1.Item(System.Int32)">
            <summary>
            Gets an item at the specified position in this collection.
            </summary>
            <param name="index">Position in this collection.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Throws when the given position is less than zero or greater than the largest possible value.</exception>
            <returns>An item at the specified position in this collection.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelCollection`1.Contains(`0)">
            <summary>
            Determines if this collection contains the specified item.
            </summary>
            <param name="item">Item to search.</param>
            <returns>*true* if this collection contains the specified item; otherwise *false*.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelCollection`1.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies items in this collection to the specified array at an arbitrary position.
            </summary>
            <param name="array">Destination array.</param>
            <param name="arrayIndex">Position at the destination array where the first item in this collection is copied to.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies items in this collection to the specified array at an arbitrary position.
            </summary>
            <param name="array">Destination array.</param>
            <param name="arrayIndex">Position at the destination array where the first item in this collection is copied to.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelCollection`1.GetEnumerator">
            <summary>
            Gets an enumerator of type <typeparamref name="T"/> that iterates through all items in this collection.
            </summary>
            <returns>An enumerator.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelCollection`1.IndexOf(`0)">
            <summary>
            Gets the position of the specified item in this collection.
            </summary>
            <param name="item">Item to search.</param>
            <returns>The position the item if this collection contains the specified item; othewise -1.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelCollection`1.BaseGetEnumerator">
            <summary>
            Gets a typeless enumerator of that iterates through all items in this collection.
            </summary>
            <returns>An enumerator.</returns>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPModelDefaultsAttribute">
            <summary>
            Defines a default column group and content type group for model class located in an assembly.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPModelDefaultsAttribute.DefaultFieldGroup">
            <summary>
            Gets or sets a default column group name.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPModelDefaultsAttribute.DefaultContentTypeGroup">
            <summary>
            Gets or sets a default content type group name.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPModelQueryException">
            <summary>
            Throws when error has occurred when executing query against SharePoint or Office search service.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPModelQueryException.QueryText">
            <summary>
            Gets the query expression that caused the exception.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPModelQueryException.WebUrl">
            <summary>
            Gets the site URL where the query is executed against.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPModelImplicitQueryMode">
            <summary>
            Represents which API will be used when performing item queries if no search keywords are specified.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPModelImplicitQueryMode.None">
            <summary>
            No actual queries will be performed.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPModelImplicitQueryMode.ListQuery">
            <summary>
            Queries will be performed using <see cref="M:Microsoft.SharePoint.SPList.GetItems(Microsoft.SharePoint.SPQuery)"/>.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPModelImplicitQueryMode.SiteQuery">
            <summary>
            Queries will be performed using <see cref="M:Microsoft.SharePoint.SPWeb.GetSiteData(Microsoft.SharePoint.SPSiteDataQuery)"/>.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPModelImplicitQueryMode.KeywordSearch">
            <summary>
            Queries will be performed using FAST search infrastructure.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPModelCommitMode">
            <summary>
            Specifies how a list item is saved when committing changes.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPModelCommitMode.Default">
            <summary>
            The list item is updated by creating a new version of the item.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPModelCommitMode.SystemUpdate">
            <summary>
            The list item is updated without effecting changes in the Modified or Modified By fields.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPModelCommitMode.SystemUpdateOverwriteVersion">
            <summary>
            The list item is updated without effecting changes in the Modified or Modified By fields, and without creating another version of the item.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPModelCommitMode.OverwriteVersion">
            <summary>
            The list item is updated without creating another version of the item.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPModelFileOperation">
            <summary>
            Specifies operation to be done on a file in a SharePoint web site.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPModelFileOperation.MinorCheckIn">
            <summary>
            Checks in the file to a document library and increments as a minor version.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPModelFileOperation.MajorCheckIn">
            <summary>
            Checks in the file to a document library and increments as a major version.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPModelFileOperation.OverwriteCheckIn">
            <summary>
            Checks in the file to a document library and overwrite the file.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPModelFileOperation.CheckOut">
            <summary>
            Checks the file out of a document library.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPModelFileOperation.UndoCheckOut">
            <summary>
            Undoes the file checkout.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPModelFileOperation.Publish">
            <summary>
            Submits the file for content approval.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPModelFileOperation.UnPublish">
            <summary>
            Removes the file from content approval.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPModelFileOperation.Approve">
            <summary>
            Approves the file submitted for content approval.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPModelFileOperation.Deny">
            <summary>
            Denies approval for a file that was submitted for content approval.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPModelFileOperation.TakeOffline">
            <summary>
            Takes the most current approved or major version of the file offline.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPModelListQueryEventArgs">
            <summary>
            Provides data when an ExecutingListQuery event is triggered from <see cref="T:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1"/>.
            See <see cref="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.OnExecutingListQuery(Codeless.SharePoint.ObjectModel.SPModelListQueryEventArgs)"/>.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPModelListQueryEventArgs.Query">
            <summary>
            Gets an <see cref="T:Microsoft.SharePoint.SPQuery"/> instance that will be executed against a list.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPModelSiteQueryEventArgs">
            <summary>
            Provides data when an ExecutingSiteQuery event is triggered from <see cref="T:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1"/>.
            See <see cref="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.OnExecutingSiteQuery(Codeless.SharePoint.ObjectModel.SPModelSiteQueryEventArgs)"/>.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPModelSiteQueryEventArgs.Query">
            <summary>
            Gets an <see cref="T:Microsoft.SharePoint.SPSiteDataQuery"/> instance that will be executed against a site.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPModelKeywordSearchEventArgs">
            <summary>
            Provides data when an ExecutingKeywordSearch event is triggered from <see cref="T:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1"/>.
            See <see cref="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.OnExecutingKeywordSearch(Codeless.SharePoint.ObjectModel.SPModelKeywordSearchEventArgs)"/>.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPModelKeywordSearchEventArgs.Query">
            <summary>
            Gets an <see cref="T:Microsoft.Office.Server.Search.Query.KeywordQuery"/> instance that will be executed against Office search service.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1">
            <summary>
            Provides a base class that handles querying, creating, deleting and persisting list items in a SharePoint site collection using model classes.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.#ctor(Microsoft.SharePoint.SPSite)">
            <summary>
            Initializes an instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1"/> class that queries list items under the specified site collection and its sub-sites.
            </summary>
            <param name="site">The site collection object to query against.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.#ctor(Microsoft.SharePoint.SPWeb)">
            <summary>
            Initializes an instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1"/> class that queries list items under the specified site and its sub-sites.
            </summary>
            <param name="web">The site object to query against.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.#ctor(Microsoft.SharePoint.SPWeb,System.Boolean)">
            <summary>
            Initializes an instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1"/> class that queries list items under the specified site and optionally its sub-sites.
            </summary>
            <param name="web">The site object to query against.</param>
            <param name="currentWebOnly">A boolean value specifies whether lists in sub-sites should also be queried.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.#ctor(Microsoft.SharePoint.SPList)">
            <summary>
            Initializes an instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1"/> class that queries list items under the specified list.
            </summary>
            <param name="list">The list object to query against.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.#ctor(Microsoft.SharePoint.SPWeb,System.Collections.Generic.IList{Microsoft.SharePoint.SPList})">
            <summary>
            Initializes an instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1"/> class that queries list items under the specified list(s).
            </summary>
            <param name="currentWeb">The site object.</param>
            <param name="contextLists">A List of lists to query against.</param>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.Site">
            <summary>
            Gets the site collection associated with the site that initialized this instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1"/> class.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.TermStore">
            <summary>
            Gets the term store connected with the site that initialized this instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1"/> class.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.ObjectCache">
            <summary>
            Gets the <see cref="T:Codeless.SharePoint.SPObjectCache"/> object. This object cache instance is used in <see cref="T:Codeless.SharePoint.ISPListItemAdapter"/> objects created by this manager.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.ImplicitQueryMode">
            <summary>
            Gets the query mode when calling overloads of <see cref="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.GetItems``1"/> or <see cref="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.GetItems``1"/> which does not perform keyword search explicitly.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.Culture">
            <summary>
            Gets the working culture of this manager.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.GetItems``1">
            <summary>
            Gets items of the associated content type(s).
            </summary>
            <typeparam name="TItem">Item type.</typeparam>
            <returns>A collection containing the returned items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.GetItems``1(Codeless.SharePoint.CamlExpression)">
            <summary>
            Gets items of the associated content type(s) that satisfy the condition.
            </summary>
            <typeparam name="TItem">Item type.</typeparam>
            <param name="query">CAML query expression.</param>
            <returns>A collection containing the returned items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.GetItems``1(Codeless.SharePoint.CamlExpression,System.UInt32)">
            <summary>
            Gets items of the associated content type(s) that satisfy the condition.
            </summary>
            <typeparam name="TItem">Item type.</typeparam>
            <param name="query">CAML query expression.</param>
            <param name="limit">Maximum number of items to be returned.</param>
            <returns>A collection containing the returned items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.GetItems``1(Codeless.SharePoint.CamlExpression,System.UInt32,System.UInt32)">
            <summary>
            Gets items of the associated content type(s) that satisfy the condition.
            </summary>
            <typeparam name="TItem">Item type.</typeparam>
            <param name="query">CAML query expression.</param>
            <param name="limit">Maximum number of items to be returned.</param>
            <param name="startRow">Number of items to skip from start.</param>
            <returns>A collection containing the returned items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.GetItems``1(Codeless.SharePoint.CamlExpression,System.UInt32,System.String[],Microsoft.Office.Server.Search.Query.KeywordInclusion)">
            <summary>
            Performs a keyword search against the items of the associated content type(s).
            </summary>
            <typeparam name="TItem">Item type.</typeparam>
            <param name="query">CAML query expression.</param>
            <param name="limit">Maximum number of items to be returned.</param>
            <param name="keywords">A list of keywords to be searched against.</param>
            <param name="keywordInclusion">See <see cref="T:Microsoft.Office.Server.Search.Query.KeywordInclusion"/>.</param>
            <returns>A collection containing the returned items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.GetItems``1(Codeless.SharePoint.CamlExpression,System.UInt32,System.UInt32,System.String[],Codeless.SharePoint.SearchRefiner[],Microsoft.Office.Server.Search.Query.KeywordInclusion,System.Int32@)">
            <summary>
            Performs a keyword search against the items of the associated content type(s).
            </summary>
            <typeparam name="TItem">Item type.</typeparam>
            <param name="query">CAML query expression.</param>
            <param name="limit">Maximum number of items to be returned.</param>
            <param name="startRow">Number of items to skip from start.</param>
            <param name="keywords">A list of keywords to be searched against.</param>
            <param name="refiners">A list of <see cref="T:Codeless.SharePoint.SearchRefiner"/> instances. Refinement results are populated to the supplied instances.</param>
            <param name="keywordInclusion">See <see cref="T:Microsoft.Office.Server.Search.Query.KeywordInclusion"/>.</param>
            <param name="totalCount">Total number of items.</param>
            <returns>A collection containing the returned items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.GetCount``1">
            <summary>
            Gets the number of items of the associated content type(s).
            </summary>
            <typeparam name="TItem">Item type.</typeparam>
            <returns>Number of items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.GetCount``1(Codeless.SharePoint.CamlExpression)">
            <summary>
            Gets the number of items of the associated content type(s) that satisfy the condition.
            </summary>
            <typeparam name="TItem">Item type.</typeparam>
            <param name="query">CAML query expression.</param>with the associated content type(s)
            <returns>Number of items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.GetCount``1(Codeless.SharePoint.CamlExpression,System.String[],Microsoft.Office.Server.Search.Query.KeywordInclusion)">
            <summary>
            Performs a keyword search against the items of the associated content type(s) and returns the number of items.
            </summary>
            <typeparam name="TItem">Item type.</typeparam>
            <param name="query">CAML query expression.</param>
            <param name="keywords">A list of keywords to be searched against.</param>
            <param name="keywordInclusion">See <see cref="T:Microsoft.Office.Server.Search.Query.KeywordInclusion"/>.</param>
            <returns>Number of items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.GetCount``1(Codeless.SharePoint.CamlExpression,System.String[],Codeless.SharePoint.SearchRefiner[],Microsoft.Office.Server.Search.Query.KeywordInclusion)">
            <summary>
            Performs a keyword search against the items of the associated content type(s) and returns the number of items.
            </summary>
            <typeparam name="TItem">Item type.</typeparam>
            <param name="query">CAML query expression.</param>
            <param name="keywords">A list of keywords to be searched against.</param>
            <param name="refiners">A list of <see cref="T:Codeless.SharePoint.SearchRefiner"/> instances. Refinement results are populated to the supplied instances.</param>
            <param name="keywordInclusion">See <see cref="T:Microsoft.Office.Server.Search.Query.KeywordInclusion"/>.</param>
            <returns>Number of items.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.Create``1">
            <summary>
            Creates an item of the associated content type. If the content type derives from File or Folder, a random name is used.
            See also <see cref="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.Create(System.Type,System.String)"/>
            </summary>
            <typeparam name="TItem">Item type.</typeparam>
            <returns>An item of the specified content type.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.Create``1(System.String)">
            <summary>
            Creates an item of the associated content type with the given file or folder name.
            See also <see cref="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.Create(System.Type,System.String)"/>
            </summary>
            <typeparam name="TItem">Item type.</typeparam>
            <param name="name">File or folder name.</param>
            <returns>An item of the specified content type.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.Create(System.Type,System.String)">
            <summary>
            Creates an item of the associated content type with the given file or folder name.
            </summary>
            <param name="modelType">Item type.</param>
            <param name="name">File or folder name.</param>
            <returns>An item of the specified content type.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.Recycle(`0)">
            <summary>
            Moves the specified item to recycle bin.
            </summary>
            <param name="item">An item to be recycled.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.Delete(`0)">
            <summary>
            Deletes the specified item from a list. 
            </summary>
            <param name="item">An item to be deleted.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.CommitChanges">
            <summary>
            Commits changes made to model class instances fetched from this manager.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.CommitChanges(`0)">
            <summary>
            Commits changes made to the specified model class instances.
            </summary>
            <param name="item">An item with changes to be persisted.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.CommitChanges(Codeless.SharePoint.ObjectModel.SPModelCommitMode)">
            <summary>
            Commits changes made to model class instances fetched from this manager with the specified commit option.
            </summary>
            <param name="mode">An value of <see cref="T:Codeless.SharePoint.ObjectModel.SPModelCommitMode"/> representing how a list item is updated.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.CommitChanges(`0,Codeless.SharePoint.ObjectModel.SPModelCommitMode)">
            <summary>
            Commits changes made to the specified model class instances with the specified commit option.
            </summary>
            <param name="item">An item with changes to be persisted.</param>
            <param name="mode">An value of <see cref="T:Codeless.SharePoint.ObjectModel.SPModelCommitMode"/> representing how a list item is updated.</param>
            <exception cref="T:System.ArgumentException">Supplied item does not belongs to this manager - item</exception>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.ExecuteFileOperation(`0,Codeless.SharePoint.ObjectModel.SPModelFileOperation)">
            <summary>
            Executes specified operation on the file represented by the model object with no comment.
            </summary>
            <param name="item">An item which operation is being performed on.</param>
            <param name="operation">The operation to be performed.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.ExecuteFileOperation(`0,Codeless.SharePoint.ObjectModel.SPModelFileOperation,System.String)">
            <summary>
            Executes specified operation on the file represented by the model object with the specified comment.
            </summary>
            <param name="item">An item which operation is being performed on.</param>
            <param name="operation">The operation to be performed.</param>
            <param name="comment">A string that contains a comment about the operation. It is ignored for some oeprations.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.TryCreateModel(Codeless.SharePoint.ISPListItemAdapter,System.Boolean)">
            <summary>
            Attempts to create a model class instance of type <typeparamref name="T"/> from the list item reprensented by the specified data access adapter.
            If the list item does not correspond to a model type equal or derived from type <typeparamref name="T"/>, *null* is returned.
            </summary>
            <param name="adapter">A data access adapter.</param>
            <param name="readOnly">Whether to mark the model instance created as read-only.</param>
            <returns>An typed model item instance.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.OnExecutingListQuery(Codeless.SharePoint.ObjectModel.SPModelListQueryEventArgs)">
            <summary>
            Called when a list query is being executed.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.OnExecutingSiteQuery(Codeless.SharePoint.ObjectModel.SPModelSiteQueryEventArgs)">
            <summary>
            Called when a cross-list query is being executed.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.OnExecutingKeywordSearch(Codeless.SharePoint.ObjectModel.SPModelKeywordSearchEventArgs)">
            <summary>
            Called when a keyword search is being executed against Office search service.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.GetTermStoreForContext(Microsoft.SharePoint.SPWeb)">
            <summary>
            Returns the default term store connected with the site that initialized this instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1"/> class.
            </summary>
            <param name="web">The site that initialized this instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1"/> class.</param>
            <returns>An instance of the <see cref="P:Codeless.SharePoint.ObjectModel.SPModelManagerBase`1.TermStore"/> class representing a connected term store.</returns>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPModelProvisionException">
            <summary>
            The exception that is thrown when error has occured when provisioning fields, content types, lists or views in a site collection.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPContentTypeAttribute">
            <summary>
            Declares the attributed class to represent a content type.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPContentTypeAttribute.#ctor(System.String,System.String)">
            <summary>
            Constructs an instance of <see cref="T:Codeless.SharePoint.ObjectModel.SPContentTypeAttribute"/> with a full or partial content type ID.
            If content type ID supplied is partial, it must be in the form of 32 consecutive characters of hexadecimal numerics (0-9, A-F).
            When the full content type ID is being resolved, the value will be concatenated to the resolved content type ID of the base class with the content type ID separator "00".
            If the base class is <see cref="T:Codeless.SharePoint.ObjectModel.SPModel"/>, "0x01" is assumed to be the parent content type ID.
            </summary>
            <param name="contentTypeId">Full or partial content type ID.</param>
            <param name="name">Name of the content type.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPContentTypeAttribute.#ctor(System.UInt16,System.String)">
            <summary>
            Constructs an instance of <see cref="T:Codeless.SharePoint.ObjectModel.SPContentTypeAttribute"/> with a two-digit partial content type ID.
            When the full content type ID is being resolved, the value will be formatted as a two-digit hexadecimal number an concatenated to the resolved content type ID of the base class.
            If the base class is <see cref="T:Codeless.SharePoint.ObjectModel.SPModel"/>, "0x01" is assumed to be the parent content type ID.
            </summary>
            <param name="specifier">A two-byte integer value which will be formatted as a two-digit hexadecimal number.</param>
            <param name="name">Name of the content type.</param>
            <exception cref="T:System.ArgumentException">Throws when <paramref name="specifier"/> equals to zero.</exception>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPContentTypeAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs an instance of <see cref="T:Codeless.SharePoint.ObjectModel.SPContentTypeAttribute"/> with a parent content type ID and a partial content type ID.
            When the full content type ID is being resolved, the two content type ID will be concatenated with with the content type ID separator "00".
            </summary>
            <param name="parentContentTypeId">Parent content type ID.</param>
            <param name="guid">Partial content type ID.</param>
            <param name="name">Name of the content type.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPContentTypeAttribute.#ctor(System.String,System.UInt16,System.String)">
            <summary>
            Constructs an instance of <see cref="T:Codeless.SharePoint.ObjectModel.SPContentTypeAttribute"/> with a parent content type ID and a partial content type ID.
            When the full content type ID is being resolved, the value will be formatted as a two-digit hexadecimal number an concatenated to the parent content type ID specified.
            </summary>
            <param name="parentContentTypeId">Parent content type ID.</param>
            <param name="specifier">A two-byte integer value which will be formatted as a two-digit hexadecimal number.</param>
            <param name="name">Name of the content type.</param>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPContentTypeAttribute.ContentTypeIdString">
            <summary>
            Gets the partial content type ID attributed to the class. 
            The partial content type ID is used to construct a full content type ID returned by <see cref="P:Codeless.SharePoint.ObjectModel.SPContentTypeAttribute.ContentTypeId"/>.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPContentTypeAttribute.Name">
            <summary>
            Gets or sets the name of the associated content type. See <see cref="P:Microsoft.SharePoint.SPContentType.Name"/> for details.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPContentTypeAttribute.Description">
            <summary>
            Gets or sets the description of the associated content type. See <see cref="P:Microsoft.SharePoint.SPContentType.Description"/> for details.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPContentTypeAttribute.Group">
            <summary>
            Gets or sets the group name of the associated content type. See <see cref="P:Microsoft.SharePoint.SPContentType.Group"/> for details.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPContentTypeAttribute.Hidden">
            <summary>
            Gets or sets whether the associated content type is hidden. See <see cref="P:Microsoft.SharePoint.SPContentType.Hidden"/> for details.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPContentTypeAttribute.HiddenInList">
            <summary>
            Gets or sets whether the content type is hidden in the "New Item" menu.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPContentTypeAttribute.ExternalContentType">
            <summary>
            Gets or sets whether the attributed class represents a third-party content type.
            A third-party content type will not be provisioned, nor any modifications will be made to existing content type.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPContentTypeAttribute.ProvisionEventReceiverType">
            <summary>
            Gets or sets the type of event receiver which model provision event is invoked with.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPContentTypeAttribute.ContentTypeId">
            <summary>
            Gets a full content type ID resolved by type hierarchy.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPFieldLookupSource">
            <summary>
            Specifies the location of the lookup list.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPFieldLookupSource.None">
            <summary>
            Does not specify the location of the lookup list.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPFieldLookupSource.Self">
            <summary>
            Lookup the same list.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPFieldLookupSource.SiteList">
            <summary>
            Lookup a list that is in the same site.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPFieldLookupSource.SiteCollectionList">
            <summary>
            Lookup a list that is in the root site.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPFieldFormVisibility">
            <summary>
            Specifies whether a column should be shown.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPFieldFormVisibility.Unspecified">
            <summary>
            Keep the current configuration.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPFieldFormVisibility.Hidden">
            <summary>
            The column is hidden in all places.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPFieldFormVisibility.DisplayOnly">
            <summary>
            The column is hidden in create and edit form.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPFieldFormVisibility.ExceptEditForm">
            <summary>
            The column is hidden only in edit form.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPFieldFormVisibility.ExceptNewForm">
            <summary>
            The column is hidden only in create form.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPFieldFormVisibility.Visible">
            <summary>
            The column is visible in all places.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPFieldAttribute">
            <summary>
            Represents a SharePoint column that is referenced by an SPModel class.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPFieldAttribute.#ctor(System.String,Microsoft.SharePoint.SPFieldType)">
            <summary>
            Initializes a new instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPFieldAttribute"/> class with the specified internal name and column type.
            </summary>
            <param name="internalName">The internal name of a column.</param>
            <param name="fieldType">The field type of a column.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPFieldAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPFieldAttribute"/> class with the specified internal name and a custom column type.
            </summary>
            <param name="internalName">The internal name of a column.</param>
            <param name="fieldType">The field type of a column.</param>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPFieldAttribute.ID">
            <summary>
            Gets or sets the unique ID of the column when a fixed unique ID is desirable.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPFieldAttribute.Type">
            <summary>
            Gets the type of the column.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPFieldAttribute.TypeAsString">
            <summary>
            Gets the custom type of the column.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPFieldAttribute.InternalName">
            <summary>
            Gets the internal name of the column.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPFieldAttribute.ListFieldInternalName">
            <summary>
            Gets or sets the internal name of the column when added to a list.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPFieldAttribute.IncludeInQuery">
            <summary>
            Gets or sets whether this column is associated with the attributed property when generating queries through LINQ interface. 
            If this property is set to *false*, the column will not be retrieved in queries unless <see cref="P:Codeless.SharePoint.ObjectModel.SPFieldAttribute.IncludeInViewFields"/> is set to *true*.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPFieldAttribute.IncludeInViewFields">
            <summary>
            Gets or sets whether this column should be retrieved when <see cref="P:Codeless.SharePoint.ObjectModel.SPFieldAttribute.IncludeInQuery"/> is set to *false*.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPFieldAttribute.ColumnOrder">
            <summary>
            Gets ot sets the column order in content types and list views.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPFieldAttribute.ShowInListView">
            <summary>
            Gets or sets whether this column is shown in list views.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPFieldAttribute.NoCrawl">
            <summary>
            Gets or sets whether this column should be crawled by Office search.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPFieldAttribute.Title">
            <summary>
            Gets or sets the display name of the column.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPFieldAttribute.Description">
            <summary>
            Gets or sets the description of the column.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPFieldAttribute.Group">
            <summary>
            Gets or sets the group name of the column.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPFieldAttribute.DefaultValue">
            <summary>
            Gets or sets the default value of the column.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPFieldAttribute.DefaultFormula">
            <summary>
            Gets or sets the default formula of the column.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPFieldAttribute.FormVisibility">
            <summary>
            Sets where this column should be shown.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPFieldAttribute.ShowInDisplayForm">
            <summary>
            Gets whether this column will be shown in item display form.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPFieldAttribute.ShowInEditForm">
            <summary>
            Gets whether this column will be shown in item edit form.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPFieldAttribute.ShowInNewForm">
            <summary>
            Gets whether this column will be shown in item new form.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPFieldAttribute.ShowInViewForms">
            <summary>
            Gets whether this column will be shown in view forms.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPFieldAttribute.ShowInVersionHistory">
            <summary>
            Gets whether this column will be shown in version history dialog.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPFieldAttribute.Hidden">
            <summary>
            Gets whether this column is a hidden column.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPFieldAttribute.ReadOnlyField">
            <summary>
            Gets whether this column can be edited by users.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPFieldAttribute.Required">
            <summary>
            Gets or sets whether this column is required.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPFieldAttribute.Indexed">
            <summary>
            Gets or sets whether this column is indexed.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPFieldAttribute.EnforceUniqueValues">
            <summary>
            Gets or sets whether this column has unique value for each item in a list.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPFieldAttribute.Equals(Codeless.SharePoint.ObjectModel.SPFieldAttribute)">
            <summary>
            Determines if this instance refers to the same column as by the other instance compared by the internal name.
            </summary>
            <param name="other">Instance to compare.</param>
            <returns>*true* if this instance refers to the same column; otherwise *false*.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPFieldAttribute.Equals(System.Object)">
            <summary>
            Overriden.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPFieldAttribute.GetHashCode">
            <summary>
            Overriden.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPBuiltInFieldAttribute">
            <summary>
            Represents an existing column that is referenced by an SPModel class.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPBuiltInFieldAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPBuiltInFieldAttribute"/> class with the specified internal name.
            </summary>
            <param name="internalName">The internal name of a column.</param>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPBuiltInFieldAttribute.Alias">
            <summary>
            Gets or sets the internal name used when the column is added to a list.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPBuiltInFieldAttribute.Group">
            <summary>
            A no-op.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPBuiltInFieldAttribute.TypeAsString">
            <summary>
            A no-op.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPIntegerFieldAttribute">
            <summary>
            Represents an integer column that is referenced by an SPModel class.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPIntegerFieldAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPIntegerFieldAttribute"/> class with the specified internal name.
            </summary>
            <param name="internalName">The internal name of a column.</param>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPIntegerFieldAttribute.DisplayFormat">
            <summary>
            Gets or sets the display format.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPIntegerFieldAttribute.MaximumValue">
            <summary>
            Gets or sets the maximum value allowed.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPIntegerFieldAttribute.MinimumValue">
            <summary>
            Gets or sets the minimum value allowed.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPIntegerFieldAttribute.ShowAsPercentage">
            <summary>
            Gets or sets whether value is shown as a percentage.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPTextFieldAttribute">
            <summary>
            Represents a text column that is referenced by an SPModel class.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPTextFieldAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPTextFieldAttribute"/> class with the specified internal name.
            </summary>
            <param name="internalName">The internal name of a column.</param>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPNoteFieldAttribute">
            <summary>
            Represents a multiline text column that is referenced by an SPModel class.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPNoteFieldAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPNoteFieldAttribute"/> class with the specified internal name.
            </summary>
            <param name="internalName">The internal name of a column.</param>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPNoteFieldAttribute.NumberOfLines">
            <summary>
            Gets or sets the number of lines of the editing field.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPNoteFieldAttribute.RestrictedMode">
            <summary>
            Gets or sets whether the rich-text funtionalities is restricted.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPNoteFieldAttribute.RichText">
            <summary>
            Gets or sets whether the rich-text mode is on.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPNoteFieldAttribute.UnlimitedLengthInDocumentLibrary">
            <summary>
            Gets or sets whether values longer than 255 characters is accepted.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPNoteFieldAttribute.RichTextMode">
            <summary>
            Gets or sets the rich-text formatting mode.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPDateTimeFieldAttribute">
            <summary>
            Represents a Date and Time column that is referenced by an SPModel class.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPDateTimeFieldAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPDateTimeFieldAttribute"/> class with the specified internal name.
            </summary>
            <param name="internalName">The internal name of a column.</param>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPDateTimeFieldAttribute.CalendarType">
            <summary>
            Gets or sets the calendar type.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPDateTimeFieldAttribute.DisplayFormat">
            <summary>
            Gets or sets the format to use in displaying dates and times.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPChoiceFieldAttribute">
            <summary>
            Represents a choice column that is referenced by an SPModel class.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPChoiceFieldAttribute.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPChoiceFieldAttribute"/> class with the specified internal name.
            </summary>
            <param name="internalName">The internal name of a column.</param>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPChoiceFieldAttribute.EditFormat">
            <summary>
            Gets or sets how options for how to display selections in a choice field.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPChoiceFieldAttribute.Choices">
            <summary>
            Gets the list of choices.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPChoiceFieldAttribute.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPMultiChoiceFieldAttribute">
            <summary>
            Represents a multiple choice column that is referenced by an SPModel class.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPMultiChoiceFieldAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPMultiChoiceFieldAttribute"/> class with the specified internal name.
            </summary>
            <param name="internalName">The internal name of a column.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPMultiChoiceFieldAttribute.#ctor(System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPMultiChoiceFieldAttribute"/> class with the specified internal name and available choices.
            </summary>
            <param name="internalName">The internal name of a column.</param>
            <param name="choices">A list of available choices.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPMultiChoiceFieldAttribute.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPMultiChoiceFieldAttribute"/> class with the specified internal name and available choices enumerated by an Enum type.
            </summary>
            <param name="internalName">The internal name of a column.</param>
            <param name="enumType">An Enum type.</param>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPMultiChoiceFieldAttribute.Choices">
            <summary>
            Gets the list of choices.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPCalculatedFieldAttribute">
            <summary>
            Represents a calculated column that is referenced by an SPModel class.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPCalculatedFieldAttribute.#ctor(System.String,Microsoft.SharePoint.SPFieldType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPCalculatedFieldAttribute"/> class with the specified internal name, result type and formula.
            </summary>
            <param name="internalName">The internal name of a column.</param>
            <param name="outputType">The result type of the formula.</param>
            <param name="formula">The formula of the calculated column.</param>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPCalculatedFieldAttribute.Formula">
            <summary>
            Gets or sets the formula.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPCalculatedFieldAttribute.OutputType">
            <summary>
            Gets or sets the result type of the formula.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPCalculatedFieldAttribute.DateFormat">
            <summary>
            Gets or sets the format to use in displaying dates and times if the result type is a Date and Time value.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPCalculatedFieldAttribute.DisplayFormat">
            <summary>
            Gets or sets the format to use in displaying numbers if the result type is a number.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPCalculatedFieldAttribute.ShowAsPercentage">
            <summary>
            Gets or sets whether value is shown as a percentage if the result type is a number.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPCalculatedFieldAttribute.CurrencyLocaleId">
            <summary>
            Gets or sets the currency used if the result type is a number.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPLookupFieldAttribute">
            <summary>
            Represents a lookup column that is referenced by an SPModel class.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPLookupFieldAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPLookupFieldAttribute"/> class with the specified internal name.
            </summary>
            <param name="internalName">The internal name of a column.</param>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPLookupFieldAttribute.LookupField">
            <summary>
            Gets or sets the column to be displayed.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPLookupFieldAttribute.LookupListUrl">
            <summary>
            Gets or sets the foreign list URL.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPLookupFieldAttribute.LookupSource">
            <summary>
            Gets or sets the location of the foreign list.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPLookupFieldAttribute.AllowMultipleValues">
            <summary>
            Gets or sets whether multiple values are allowed.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPBooleanFieldAttribute">
            <summary>
            Represents a Yes/No column that is referenced by an SPModel class.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPBooleanFieldAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPBooleanFieldAttribute"/> class with the specified internal name.
            </summary>
            <param name="internalName">The internal name of a column.</param>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPBooleanFieldAttribute.DefaultValue">
            <summary>
            Gets or sets the default value. To set the default value, supplies *true* or *false*.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPNumberFieldAttribute">
            <summary>
            Represents a number column that is referenced by an SPModel class.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPNumberFieldAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPNumberFieldAttribute"/> class with the specified internal name.
            </summary>
            <param name="internalName">The internal name of a column.</param>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPNumberFieldAttribute.DisplayFormat">
            <summary>
            Gets or sets the display format.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPNumberFieldAttribute.MaximumValue">
            <summary>
            Gets or sets the maximum value allowed.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPNumberFieldAttribute.MinimumValue">
            <summary>
            Gets or sets the minimum value allowed.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPNumberFieldAttribute.ShowAsPercentage">
            <summary>
            Gets or sets whether value is shown as a percentage.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPCurrencyFieldAttribute">
            <summary>
            Represents a currency column that is referenced by an SPModel class.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPCurrencyFieldAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPCurrencyFieldAttribute"/> class with the specified internal name.
            </summary>
            <param name="internalName">The internal name of a column.</param>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPCurrencyFieldAttribute.CurrencyLocaleId">
            <summary>
            Gets or sets the currency used.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPCurrencyFieldAttribute.ShowAsPercentage">
            <summary>
            Gets or sets whether value is shown as a percentage if the result type is a number.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPUrlFieldAttribute">
            <summary>
            Represents a URL column that is referenced by an SPModel class.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPUrlFieldAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPUrlFieldAttribute"/> class with the specified internal name.
            </summary>
            <param name="internalName">The internal name of a column.</param>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPUrlFieldAttribute.DisplayFormat">
            <summary>
            Gets or sets the format used.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPUserFieldAttribute">
            <summary>
            Represents a people column that is referenced by an SPModel class.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPUserFieldAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPUserFieldAttribute"/> class with the specified internal name.
            </summary>
            <param name="internalName">The internal name of a column.</param>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPUserFieldAttribute.SelectionGroup">
            <summary>
            Gets or sets the SharePoint group ID.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPUserFieldAttribute.SelectionMode">
            <summary>
            Gets or sets the selection mode.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPUserFieldAttribute.AllowMultipleValues">
            <summary>
            Gets or sets whether entering multiple values is allowed.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPGuidFieldAttribute">
            <summary>
            Represents a GUID column that is referenced by an SPModel class.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPGuidFieldAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPGuidFieldAttribute"/> class with the specified internal name.
            </summary>
            <param name="internalName">The internal name of a column.</param>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.TaxonomyFieldAttribute">
            <summary>
            Represents a managed metadata column that is referenced by an SPModel class.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.TaxonomyFieldAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Codeless.SharePoint.ObjectModel.TaxonomyFieldAttribute"/> class with the specified internal name.
            </summary>
            <param name="internalName">The internal name of a column.</param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.TaxonomyFieldAttribute.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Codeless.SharePoint.ObjectModel.TaxonomyFieldAttribute"/> class with the specified internal name and the term set information.
            </summary>
            <param name="internalName">The internal name of a column.</param>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.TaxonomyFieldAttribute.DefaultGroupName">
            <summary>
            Gets or sets the group name to be created if the term set does not exist.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.TaxonomyFieldAttribute.DefaultTermSetName">
            <summary>
            Gets or sets the term set name to be created if the term set does not exist.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.TaxonomyFieldAttribute.TermSetId">
            <summary>
            Gets or sets the term set unique identifier.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.TaxonomyFieldAttribute.AllowMultipleValues">
            <summary>
            Gets or sets whether entering multiple values is allowed.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.PublishingHtmlFieldAttribute">
            <summary>
            Represents an HTML column that is referenced by an SPModel class.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.PublishingHtmlFieldAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Codeless.SharePoint.ObjectModel.PublishingHtmlFieldAttribute"/> class with the specified internal name.
            </summary>
            <param name="internalName">The internal name of a column.</param>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.PublishingHtmlFieldAttribute.RichText">
            <summary>
            Gets or sets whether rich-text formatting is allowed.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.PublishingHtmlFieldAttribute.RestrictedMode">
            <summary>
            Gets or sets whether rich-text formatting is restricted.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.PublishingHtmlFieldAttribute.RichTextMode">
            <summary>
            Gets or sets the rich-text formatting.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.PublishingImageFieldAttribute">
            <summary>
            Represents a publishing image column that is referenced by an SPModel class.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.PublishingImageFieldAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Codeless.SharePoint.ObjectModel.PublishingImageFieldAttribute"/> class with the specified internal name.
            </summary>
            <param name="internalName">The internal name of a column.</param>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.PublishingImageFieldAttribute.RichText">
            <summary>
            Gets or sets whether rich-text formatting is allowed.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.PublishingImageFieldAttribute.RestrictedMode">
            <summary>
            Gets or sets whether rich-text formatting is restricted.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.PublishingImageFieldAttribute.RichTextMode">
            <summary>
            Gets or sets the rich-text formatting.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPListReadSecurity">
            <summary>
            Specifies which items users are allowed to read.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPListReadSecurity.All">
            <summary>
            Users can read all items.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPListReadSecurity.Owner">
            <summary>
            Users can read items that were created by the user.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPListWriteSecurity">
            <summary>
            Specifies which items users are allowed to create and edit.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPListWriteSecurity.All">
            <summary>
            Users can create and edit all items.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPListWriteSecurity.Owner">
            <summary>
            Users can create items and edit items that were created by the user.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPListWriteSecurity.None">
            <summary>
            Users cannot create or edit items.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPListProvisionMode">
            <summary>
            Obsolete. Previously specifies the behavior of <see cref="T:Codeless.SharePoint.ObjectModel.SPModelManager`1"/> on this list defintion.
            </summary> 
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPListProvisionMode.Manual">
            <summary>
            Obsolete.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPListProvisionMode.AutomaticInNonHosted">
            <summary>
            Obsolete.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.ObjectModel.SPListProvisionMode.Automatic">
            <summary>
            Obsolete.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ObjectModel.SPListAttribute">
            <summary>
            Represents the definition of a list to be created during provisioning.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPListAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPListAttribute"/> class.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPListAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPListAttribute"/> class with the specified location.
            </summary>
            <param name="url"></param>
        </member>
        <member name="M:Codeless.SharePoint.ObjectModel.SPListAttribute.#ctor(System.String,Microsoft.SharePoint.SPListTemplateType)">
            <summary>
            Initializes a new instance of the <see cref="T:Codeless.SharePoint.ObjectModel.SPListAttribute"/> class with the specified location and list type.
            </summary>
            <param name="url"></param>
            <param name="listTemplateType"></param>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPListAttribute.Url">
            <summary>
            Gets or sets the site-relative URL where the list to be created.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPListAttribute.ListTemplateType">
            <summary>
            Gets the type of the list.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPListAttribute.ProvisionMode">
            <summary>
            Obsolete.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPListAttribute.Title">
            <summary>
            Gets or sets the title of the list.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPListAttribute.Description">
            <summary>
            Gets or sets the description of the list.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPListAttribute.Direction">
            <summary>
            Gets or sets the text direction of the list.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPListAttribute.DefaultViewQuery">
            <summary>
            Gets or sets the query expression of the default view of the list.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPListAttribute.Hidden">
            <summary>
            Gets or sets whether the list is hidden.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPListAttribute.EnableAttachments">
            <summary>
            Gets or sets whether attachment is enabled.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPListAttribute.EnableFolderCreation">
            <summary>
            Gets or sets whether folder is allowed in the list.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPListAttribute.EnableMinorVersions">
            <summary>
            Gets or sets whether to create a draft version when items are edited.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPListAttribute.EnableModeration">
            <summary>
            Gets or sets whether content approval is required.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPListAttribute.EnableVersioning">
            <summary>
            Gets or sets whether to create a major version when created when items are edited.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPListAttribute.DraftVersionVisibility">
            <summary>
            Gets or sets who can see draft items.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPListAttribute.RootWebOnly">
            <summary>
            Obsolete.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPListAttribute.OnQuickLaunch">
            <summary>
            Gets or sets whether this list is linked from Quick Launch area.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPListAttribute.ReadSecurity">
            <summary>
            Gets or sets what items can be read by uses.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ObjectModel.SPListAttribute.WriteSecurity">
            <summary>
            Gets or sets what items can be created or edited by uses.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.SPAggregatedChange">
            <summary>
            Represents a set of changes on the same persisted object in SharePoint.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.SPAggregatedChange.#ctor">
            <summary>
            Instantiate an instance of the <see cref="T:Codeless.SharePoint.SPAggregatedChange"/> class.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.SPAggregatedChange.#ctor(System.Collections.Generic.IList{Microsoft.SharePoint.SPChange})">
            <summary>
            Instantiate an instance of the <see cref="T:Codeless.SharePoint.SPAggregatedChange"/> class with the fixed set of changes.
            The collection is marked read-only and no further changes to the collection is allowed.
            </summary>
            <param name="items"></param>
        </member>
        <member name="P:Codeless.SharePoint.SPAggregatedChange.Key">
            <summary>
            Gets the object that uniquely identifies a persisted object in SharePoint.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPAggregatedChange.UniqueId">
            <summary>
            Gets the <see cref="T:System.Guid"/> object that uniquely identifies a persisted object in SharePoint if available.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPAggregatedChange.ObjectType">
            <summary>
            Gets the object type of the persisted object.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPAggregatedChange.ChangeFlags">
            <summary>
            Gets the combination of changes that are made on the persisted object.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.SPAggregatedChange.InsertItem(System.Int32,Microsoft.SharePoint.SPChange)">
            <summary>
            Overriden.
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:Codeless.SharePoint.SPAggregatedChange.SetItem(System.Int32,Microsoft.SharePoint.SPChange)">
            <summary>
            Overriden.
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:Codeless.SharePoint.SPAggregatedChange.RemoveItem(System.Int32)">
            <summary>
            Overriden.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Codeless.SharePoint.SPAggregatedChange.ClearItems">
            <summary>
            Overriden.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.SPChangeMonitor.MonitorDispose">
            <summary>
            When overriden, releases the resources acquired when this monitor is initializing.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.LoggerTarget">
            <summary>
            Specifies which logging channel a log entry should write to.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.LoggerTarget.UlsLog">
            <summary>
            Specifies a log entry should write to ULS trace log.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.LoggerTarget.Console">
            <summary>
            Specifies a log entry should write to console output.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.LoggerTarget.EntLib">
            <summary>
            Specifies a log entry should write to Microsoft Enterprise Library Logging Block.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.LoggerTarget.EventLog">
            <summary>
            Specifies a log entry should write to Windows event log.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.LoggerOptionsAttribute">
            <summary>
            Specifies logging behaviors for subsequent calls to <see cref="T:Codeless.SharePoint.Logger"/> in the attributed method.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.LoggerOptionsAttribute.#ctor">
            <summary>
            Creates an instance of the <see cref="T:Codeless.SharePoint.LoggerOptionsAttribute"/> class with default options.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.LoggerOptionsAttribute.#ctor(Codeless.SharePoint.LoggerTarget)">
            <summary>
            Creates an instance of the <see cref="T:Codeless.SharePoint.LoggerOptionsAttribute"/> class with the specified logging targets.
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:Codeless.SharePoint.LoggerOptionsAttribute.#ctor(System.String)">
            <summary>
            Creates an instance of the <see cref="T:Codeless.SharePoint.LoggerOptionsAttribute"/> class with the specified category.
            </summary>
            <param name="category"></param>
        </member>
        <member name="M:Codeless.SharePoint.LoggerOptionsAttribute.#ctor(System.String,Codeless.SharePoint.LoggerTarget)">
            <summary>
            Creates an instance of the <see cref="T:Codeless.SharePoint.LoggerOptionsAttribute"/> class with the specified category and logging targets.
            </summary>
            <param name="category"></param>
            <param name="options"></param>
        </member>
        <member name="P:Codeless.SharePoint.LoggerOptionsAttribute.Category">
            <summary>
            Gets or sets the logging category.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.LoggerOptionsAttribute.All">
            <summary>
            Gets or sets the default logging targets for all types of log entries.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.LoggerOptionsAttribute.Information">
            <summary>
            Gets or sets the default logging targets for information log.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.LoggerOptionsAttribute.Debug">
            <summary>
            Gets or sets the default logging targets for debug log.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.LoggerOptionsAttribute.Warn">
            <summary>
            Gets or sets the default logging targets for warning log.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.LoggerOptionsAttribute.Error">
            <summary>
            Gets or sets the default logging targets for error log.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.Logger">
            <summary>
            Provides unified interface for writing logs to different logging systems.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.Logger.Info(System.String)">
            <summary>
            Writes an information log.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Codeless.SharePoint.Logger.Info(System.String,System.Object[])">
            <summary>
            Writes an information log.
            </summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:Codeless.SharePoint.Logger.Debug(System.String)">
            <summary>
            Writes a debug log.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Codeless.SharePoint.Logger.Debug(System.String,System.Object[])">
            <summary>
            Writes a debug log.
            </summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:Codeless.SharePoint.Logger.Warn(System.String)">
            <summary>
            Writes a warning log.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Codeless.SharePoint.Logger.Warn(System.String,System.Object[])">
            <summary>
            Writes a warning log.
            </summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:Codeless.SharePoint.Logger.Error(System.String)">
            <summary>
            Writes an error log.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Codeless.SharePoint.Logger.Error(System.String,System.Object[])">
            <summary>
            Writes an error log.
            </summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:Codeless.SharePoint.Logger.Error(System.Exception)">
            <summary>
            Writes an error log.
            </summary>
            <param name="ex"></param>
        </member>
        <member name="T:Codeless.SharePoint.SearchRefiner">
            <summary>
            Represents a keyword search refiner.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.SearchRefiner.#ctor(System.String)">
            <summary>
            Initialize an instance of the <see cref="T:Codeless.SharePoint.SearchRefiner"/> class with the specified refiner property.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:Codeless.SharePoint.SearchRefiner.#ctor(System.String,System.String)">
            <summary>
            Initialize an instance of the <see cref="T:Codeless.SharePoint.SearchRefiner"/> class with the specified refiner property and refinement value.
            </summary>
            <param name="propertyName"></param>
            <param name="refinementToken"></param>
        </member>
        <member name="P:Codeless.SharePoint.SearchRefiner.PropertyName">
            <summary>
            Gets the refiner name.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SearchRefiner.RefinementToken">
            <summary>
            Gets or sets the refinement to be searched against.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SearchRefiner.Refinements">
            <summary>
            Gets the refinements associated with this refiner.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.SearchRefinement">
            <summary>
            Represents a keyword search refinement result.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SearchRefinement.Name">
            <summary>
            Gets the display text of the refinement.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SearchRefinement.Token">
            <summary>
            Gets the refinement token.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SearchRefinement.Count">
            <summary>
            Gets the count of items that fall in this refinement.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.SiteConfigProvider">
            <summary>
            Provides a default mechanism to store and retrieve configuration entries to a site collection.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.SiteConfigProvider.InitializeListSettings(Codeless.SharePoint.ObjectModel.SPListAttribute)">
            <summary>
            Configure customizations on the SharePoint list definition that stores configuration entries.
            </summary>
            <param name="attribute">List definition.</param>
            <returns>Modified list definition.</returns>
        </member>
        <member name="T:Codeless.SharePoint.SiteConfigTypeConverter`1">
            <summary>
            Converts string values stored in site collections to objects of type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Value type.</typeparam>
        </member>
        <member name="M:Codeless.SharePoint.SiteConfigTypeConverter`1.ConvertFromString(System.String)">
            <summary>
            Converts the specified text to an object of type <typeparamref name="T"/>.
            </summary>
            <param name="value">The text representation of the object to convert.</param>
            <returns>An object of type <typeparamref name="T"/> that represents the converted text.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SiteConfigTypeConverter`1.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Overridden.
            </summary>
            <param name="context"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:Codeless.SharePoint.SiteConfigTypeConverter`1.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Overridden.
            </summary>
            <param name="context"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:Codeless.SharePoint.SiteConfigTypeConverter`1.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Overridden.
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Codeless.SharePoint.SiteConfigTypeConverter`1.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Overridden.
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:Codeless.SharePoint.SiteConfigTypeConverter`1.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            Overridden.
            </summary>
            <param name="context"></param>
            <param name="propertyValues"></param>
            <returns></returns>
        </member>
        <member name="M:Codeless.SharePoint.SiteConfigTypeConverter`1.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Overridden.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Codeless.SharePoint.SiteConfigTypeConverter`1.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Overridden.
            </summary>
            <param name="context"></param>
            <param name="value"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:Codeless.SharePoint.SiteConfigTypeConverter`1.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Overridden.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Codeless.SharePoint.SiteConfigTypeConverter`1.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Overridden.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Codeless.SharePoint.SiteConfigTypeConverter`1.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Overridden.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Codeless.SharePoint.SiteConfigTypeConverter`1.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Overridden.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Codeless.SharePoint.SiteConfigTypeConverter`1.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>
            Overridden.
            </summary>
            <param name="context"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Codeless.SharePoint.SPItemVersion">
            <summary>
            Represents a version number of a list item.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.SPItemVersion.#ctor(System.Int32)">
            <summary>
            Creates a representation of version number from a internal integer value stored by SharePoint.
            </summary>
            <param name="version">Internal version number.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPItemVersion.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a representation of version number with the given major and minor version number.
            </summary>
            <param name="majorVersion">Major version number.</param>
            <param name="minorVersion">Minor version number.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Throws when input parameter <paramref name="minorVersion"/> does not fall between 0 and 511 inclusive.</exception>
        </member>
        <member name="M:Codeless.SharePoint.SPItemVersion.#ctor(System.String)">
            <summary>
            Creates a representation of version number from a human-readeable version string.
            </summary>
            <param name="versionString">Version string.</param>
            <exception cref="T:System.ArgumentNullException">Throws when input parameter <paramref name="versionString"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Throws when input version string does not contain a correct representation of a version number.</exception>
        </member>
        <member name="P:Codeless.SharePoint.SPItemVersion.MajorVersion">
            <summary>
            Returns the major version number represented by this instance.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPItemVersion.MinorVersion">
            <summary>
            Returns the minor version number represented by this instance.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPItemVersion.IsMajorVersion">
            <summary>
            Returns *true* if the version number represents a major version.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPItemVersion.IsMinorVersion">
            <summary>
            Returns *true* if the version number represents a minor version.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.SPItemVersion.CompareTo(Codeless.SharePoint.SPItemVersion)">
            <summary>
            Compares with another version number.
            Version numbers are compared against major version and then minor version
            </summary>
            <param name="other">Version number to compare.</param>
            <returns>Returns -1 if the version number precedes the given one; 1 if the version number succedes the given one; or 0 if the version number is identical to the given one.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPItemVersion.Equals(Codeless.SharePoint.SPItemVersion)">
            <summary>
            Determines whether the version number is identical to the given one.
            </summary>
            <param name="other">Version number to compare.</param>
            <returns>*true* if the version number is identical to the given one; otherwise *false*.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPItemVersion.Equals(System.Object)">
            <summary>
            Determines whether this instance and a specified object, which must also be a <see cref="T:Codeless.SharePoint.SPItemVersion"/> object, have the same value. 
            </summary>
            <param name="obj">The object to compare to this instance.</param>
            <returns>*true* if <paramref name="obj"/> is a <see cref="T:Codeless.SharePoint.SPItemVersion"/> and its value is the same as this instance; otherwise, *false*.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPItemVersion.GetHashCode">
            <summary>
            Returns the hash code for this object.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPItemVersion.ToString">
            <summary>
            Returns a human-readable version string that represents the version number of this instance.
            </summary>
            <returns>A human-readable version string.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPItemVersion.op_Equality(Codeless.SharePoint.SPItemVersion,Codeless.SharePoint.SPItemVersion)">
            <summary>
            Determines whether two specified version number have the same value.
            </summary>
            <param name="x">The first version number to compare.</param>
            <param name="y">The second version number to compare.</param>
            <returns>*true* if the value of <paramref name="x"/> is the same as the value of <paramref name="y"/>; otherwise, *false*.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPItemVersion.op_Inequality(Codeless.SharePoint.SPItemVersion,Codeless.SharePoint.SPItemVersion)">
            <summary>
            Determines whether two specified version number have different values.
            </summary>
            <param name="x">The first version number to compare.</param>
            <param name="y">The second version number to compare.</param>
            <returns>*true* if the value of <paramref name="x"/> is different to the value of <paramref name="y"/>; otherwise, *false*.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPItemVersion.op_GreaterThanOrEqual(Codeless.SharePoint.SPItemVersion,Codeless.SharePoint.SPItemVersion)">
            <summary>
            Returns a value that indicates whether a version number is greater than or equal to another version number.
            </summary>
            <param name="x">The first version number to compare.</param>
            <param name="y">The second version number to compare.</param>
            <returns>*true* if the value of <paramref name="x"/> is greater than or equal to the value of <paramref name="y"/>; otherwise, *false*.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPItemVersion.op_LessThanOrEqual(Codeless.SharePoint.SPItemVersion,Codeless.SharePoint.SPItemVersion)">
            <summary>
            Returns a value that indicates whether a version number is less than or equal to another version number.
            </summary>
            <param name="x">The first version number to compare.</param>
            <param name="y">The second version number to compare.</param>
            <returns>*true* if the value of <paramref name="x"/> is less than or equal to the value of <paramref name="y"/>; otherwise, *false*.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPItemVersion.op_GreaterThan(Codeless.SharePoint.SPItemVersion,Codeless.SharePoint.SPItemVersion)">
            <summary>
            Returns a value that indicates whether a version number is greater than another version number.
            </summary>
            <param name="x">The first version number to compare.</param>
            <param name="y">The second version number to compare.</param>
            <returns>*true* if the value of <paramref name="x"/> is greater than the value of <paramref name="y"/>; otherwise, *false*.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPItemVersion.op_LessThan(Codeless.SharePoint.SPItemVersion,Codeless.SharePoint.SPItemVersion)">
            <summary>
            Returns a value that indicates whether a version number is less than another version number.
            </summary>
            <param name="x">The first version number to compare.</param>
            <param name="y">The second version number to compare.</param>
            <returns>*true* if the value of <paramref name="x"/> is less than the value of <paramref name="y"/>; otherwise, *false*.</returns>
        </member>
        <member name="T:Codeless.SharePoint.SPListItemVersionAdapter">
            <summary>
            Provides field value accessors to list item versions.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.SPListItemVersionAdapter.#ctor(Microsoft.SharePoint.SPListItemVersion)">
            <summary>
            Creates an adapter.
            </summary>
            <param name="item">Version of a list item.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPListItemVersionAdapter.#ctor(Microsoft.SharePoint.SPListItemVersion,Codeless.SharePoint.SPObjectCache)">
            <summary>
            Creates an adapter with the given object cache.
            </summary>
            <param name="item">Version of a list item.</param>
            <param name="objectCache">Object cache.</param>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemVersionAdapter.Item(System.String)">
            <summary>
            Gets or sets values to the specified column.
            </summary>
            <param name="name">Field name.</param>
            <returns>Value of the specified column.</returns>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemVersionAdapter.Site">
            <summary>
            Gets the site collection associated with the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemVersionAdapter.Web">
            <summary>
            Gets the parent site of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemVersionAdapter.UniqueId">
            <summary>
            Gets the unique ID of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemVersionAdapter.WebId">
            <summary>
            Gets the parent site ID of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemVersionAdapter.ListId">
            <summary>
            Gets the parent list ID of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemVersionAdapter.ListItemId">
            <summary>
            Gets the list item ID of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemVersionAdapter.ListItem">
            <summary>
            Gets the list item represented by the adapter.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.SPListItemVersionAdapter.HasField(System.String)">
            <summary>
            Determines whether the specified field is included in the data set.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>Returns *true* if the specified field is included in the data set.</returns>
        </member>
        <member name="T:Codeless.SharePoint.SPObjectCache">
            <summary>
            Provides caching and uniqueness to database persisted SharePoint objects.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.SPObjectCache.#ctor(Microsoft.SharePoint.SPSite)">
            <summary>
            Creates an <see cref="T:Codeless.SharePoint.SPObjectCache"/> instance with the specific site collection.
            </summary>
            <param name="contextSite">Site collection. All objects will be fetched on this site collection instance.</param>
            <exception cref="T:System.ArgumentNullException">Throws when input parameter <paramref name="contextSite"/> is null.</exception>
        </member>
        <member name="P:Codeless.SharePoint.SPObjectCache.Item(System.String)">
            <summary>
            Gets or sets object associated with a specified key in the cache.
            </summary>
            <param name="key">A string representing the key associated with a cached object.</param>
            <returns>The cached object associated with the specified key; -or- *null* if the specified key does not exist in the cache.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPObjectCache.Dispose">
            <summary>
            Releases resources held by this object cache.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.SPObjectCache.GetObjects``1">
            <summary>
            Gets a enumerable collection of cached objects of type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Type of cached objects to be enumerated.</typeparam>
            <returns></returns>
        </member>
        <member name="M:Codeless.SharePoint.SPObjectCache.AddWeb(Microsoft.SharePoint.SPWeb)">
            <summary>
            Adds the given <see cref="T:Microsoft.SharePoint.SPWeb"/> object to the cache. 
            If a <see cref="T:Microsoft.SharePoint.SPWeb"/> with the same site GUID already exists in cache, the given one is ignored. 
            </summary>
            <param name="web">Site object.</param>
            <returns>An <see cref="T:Microsoft.SharePoint.SPWeb"/> object in cache. Returned object is not necessary the same instance as the given one.</returns>
            <exception cref="T:System.ArgumentNullException">Throws when input parameter <paramref name="web"/> is null.</exception>
        </member>
        <member name="M:Codeless.SharePoint.SPObjectCache.GetWeb(System.Guid)">
            <summary>
            Gets an <see cref="T:Microsoft.SharePoint.SPWeb"/> object with the given site GUID.
            </summary>
            <param name="webId">Site GUID.</param>
            <returns>An <see cref="T:Microsoft.SharePoint.SPWeb"/> object in cache. NULL if site of given GUID does not exist.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPObjectCache.TryGetWeb(System.String)">
            <summary>
            Gets an <see cref="T:Microsoft.SharePoint.SPWeb"/> object with the given URL.
            </summary>
            <param name="webUrl">Site URL.</param>
            <returns>An <see cref="T:Microsoft.SharePoint.SPWeb"/> object in cache. NULL if site of given URL does not exist.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPObjectCache.AddList(Microsoft.SharePoint.SPList)">
            <summary>
            Adds the given <see cref="T:Microsoft.SharePoint.SPList"/> object to the cache. 
            If a <see cref="T:Microsoft.SharePoint.SPList"/> with the same list ID already exists in cache, the given one is ignored. 
            </summary>
            <param name="list">List object.</param>
            <returns>An <see cref="T:Microsoft.SharePoint.SPList"/> object in cache. Returned object is not necessary the same instance as the given one.</returns>
            <exception cref="T:System.ArgumentNullException">Throws when input parameter <paramref name="list"/> is null.</exception>
        </member>
        <member name="M:Codeless.SharePoint.SPObjectCache.GetList(System.Guid,System.Guid)">
            <summary>
            Gets an <see cref="T:Microsoft.SharePoint.SPList"/> objectof the spcified list GUID, under specified site.
            </summary>
            <param name="webId">Site GUID.</param>
            <param name="listId">List GUID.</param>
            <returns>An <see cref="T:Microsoft.SharePoint.SPList"/> object in cache. NULL if site or list of given GUID does not exist.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPObjectCache.TryGetList(System.String)">
            <summary>
            Gets an <see cref="T:Microsoft.SharePoint.SPList"/> object with the given server-relative URL.
            </summary>
            <param name="listUrl">Server-relative URL of list.</param>
            <returns>An <see cref="T:Microsoft.SharePoint.SPList"/> object in cache. NULL if site or list of given GUID does not exist.</returns>
            <exception cref="T:System.ArgumentNullException">Throws when input parameter <paramref name="listUrl"/> is null.</exception>
        </member>
        <member name="M:Codeless.SharePoint.SPObjectCache.AddListItem(Microsoft.SharePoint.SPListItem)">
            <summary>
            Adds the given <see cref="T:Microsoft.SharePoint.SPListItem"/> object to the cache.
            </summary>
            <param name="listItem">List item object.</param>
            <returns>An <see cref="T:Microsoft.SharePoint.SPListItem"/> object in cache. Returned object is not necessary the same instance as the given one.</returns>
            <exception cref="T:System.ArgumentNullException">Throws when input parameter <paramref name="listItem"/> is null.</exception>
        </member>
        <member name="M:Codeless.SharePoint.SPObjectCache.GetListItem(System.Guid,System.Guid,System.Int32)">
            <summary>
            Gets an <see cref="T:Microsoft.SharePoint.SPListItem"/> object of the specified list item ID, under specified site and list.
            </summary>
            <param name="webId">Site GUID.</param>
            <param name="listId">List GUID.</param>
            <param name="listItemId">List item ID.</param>
            <returns>An <see cref="T:Microsoft.SharePoint.SPList"/> object in cache. NULL if site or list of given GUID does not exist, or list item of given ID does not exist in list.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPObjectCache.AddField(Microsoft.SharePoint.SPField)">
            <summary>
            Adds the given <see cref="T:Microsoft.SharePoint.SPField"/> object to the cache.
            </summary>
            <param name="field">Field object.</param>
            <returns>An <see cref="T:Microsoft.SharePoint.SPField"/> object in cache. Returned object is not necessary the same instance as the given one.</returns>
            <exception cref="T:System.ArgumentNullException">Throws when input parameter <paramref name="field"/> is null.</exception>
        </member>
        <member name="M:Codeless.SharePoint.SPObjectCache.GetField(System.Guid)">
            <summary>
            Gets an <see cref="T:Microsoft.SharePoint.SPField"/> object representing site column of the specified GUID.
            </summary>
            <param name="fieldId">Field GUID.</param>
            <returns>An <see cref="T:Microsoft.SharePoint.SPField"/> object in cache. NULL if site column of given GUID does not exist.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPObjectCache.GetField(System.Guid,System.Guid,System.Guid)">
            <summary>
            Gets an <see cref="T:Microsoft.SharePoint.SPField"/> object representing list column of the specified GUID, under the specified list.
            </summary>
            <param name="webId">Site GUID.</param>
            <param name="listId">List GUID.</param>
            <param name="fieldId">Field GUID.</param>
            <returns>An <see cref="T:Microsoft.SharePoint.SPField"/> object in cache. NULL if list column of given GUID does not exist, or specified list does not exist.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPObjectCache.GetField(System.Guid,System.Guid,System.String)">
            <summary>
            Gets an <see cref="T:Microsoft.SharePoint.SPField"/> object representing list column of the specified internal name, under the specified list.
            </summary>
            <param name="webId">Site GUID.</param>
            <param name="listId">List GUID.</param>
            <param name="internalName">Internal name of the list column</param>
            <returns>An <see cref="T:Microsoft.SharePoint.SPField"/> object in cache. NULL if list column of given internal name does not exist, or specified list does not exist.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPObjectCache.TryGetField(System.String)">
            <summary>
            Get an <see cref="T:Microsoft.SharePoint.SPField"/> object representing site column of the specified internal name.
            </summary>
            <param name="internalName">Internal name.</param>
            <returns>An <see cref="T:Microsoft.SharePoint.SPField"/> object in cache. NULL if site column of given internal name does not exist.</returns>
            <exception cref="T:System.ArgumentNullException">Throws when input parameter <paramref name="internalName"/> is null.</exception>
        </member>
        <member name="M:Codeless.SharePoint.SPObjectCache.AddContentType(Microsoft.SharePoint.SPContentType)">
            <summary>
            Adds the given <see cref="T:Microsoft.SharePoint.SPContentType"/> object to the cache.
            </summary>
            <param name="contentType">Content type object.</param>
            <returns>>An <see cref="T:Microsoft.SharePoint.SPContentType"/> object in cache. Returned object is not necessary the same instance as the given one.</returns>
            <exception cref="T:System.ArgumentNullException">Throws when input parameter <paramref name="contentType"/> is null.</exception>
        </member>
        <member name="M:Codeless.SharePoint.SPObjectCache.GetContentType(Microsoft.SharePoint.SPContentTypeId)">
            <summary>
            Gets an <see cref="T:Microsoft.SharePoint.SPContentType"/> object representing site content type of the specified content type ID.
            </summary>
            <param name="contentTypeId">Content type ID.</param>
            <returns>An <see cref="T:Microsoft.SharePoint.SPContentType"/> object in cache. NULL if site content type of given content type ID does not exist.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPObjectCache.GetContentType(System.String,Microsoft.SharePoint.SPContentTypeId)">
            <summary>
            Gets an <see cref="T:Microsoft.SharePoint.SPContentType"/> object representing list content type of the specified content type ID under the specified list.
            </summary>
            <param name="listUrl">Server-relative URL of the list.</param>
            <param name="contentTypeId">List content type ID.</param>
            <returns>An <see cref="T:Microsoft.SharePoint.SPContentType"/> object in cache. NULL if list content type of given content type ID does not exist, or the specified list does not exist.</returns>
            <exception cref="T:System.ArgumentNullException">Throws when input parameter <paramref name="listUrl"/> is null.</exception>
        </member>
        <member name="M:Codeless.SharePoint.SPObjectCache.AddView(Microsoft.SharePoint.SPView)">
            <summary>
            Adds the given <see cref="T:Microsoft.SharePoint.SPView"/> object to the cache
            </summary>
            <param name="view">View object.</param>
            <returns>An <see cref="T:Microsoft.SharePoint.SPView"/> object in cache. Returned object is not necessary the same instance as the given one.</returns>
            <exception cref="T:System.ArgumentNullException">Throws when input parameter <paramref name="view"/> is null.</exception>
        </member>
        <member name="M:Codeless.SharePoint.SPObjectCache.RequestReusableAcl(System.Guid)">
            <summary>
            Requests an <see cref="T:Microsoft.SharePoint.SPReusableAcl"/> object representing ACL information of the specified scope ID in advance.
            If the requested object has not been loaded, it will be loaded in batch in the next time <see cref="M:Codeless.SharePoint.SPObjectCache.GetReusableAcl(System.Guid)"/> is called.
            </summary>
            <param name="scopeId">Scope ID.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPObjectCache.GetReusableAcl(System.Guid)">
            <summary>
            Gets an <see cref="T:Microsoft.SharePoint.SPReusableAcl"/> object representing ACL information of the specified scope ID.
            </summary>
            <param name="scopeId">Scope ID.</param>
            <returns>An <see cref="T:Microsoft.SharePoint.SPReusableAcl"/> object in cache. NULL if the specified scope ID does not exist in the site collection.</returns>
        </member>
        <member name="T:Codeless.SharePoint.SPRecurrenceDateRange">
            <summary>
            Represents a date range for a recurrence.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.SPRecurrenceDateRange.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Creates an <see cref="T:Codeless.SharePoint.SPRecurrenceDateRange"/> instance.
            </summary>
            <param name="start">Start time of a date range.</param>
            <param name="end">End time of a date range.</param>
        </member>
        <member name="P:Codeless.SharePoint.SPRecurrenceDateRange.StartDate">
            <summary>
            Start time of this recurrence.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPRecurrenceDateRange.EndDate">
            <summary>
            End time of this recurrence.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.SPRecurrenceDateRange.op_Equality(Codeless.SharePoint.SPRecurrenceDateRange,Codeless.SharePoint.SPRecurrenceDateRange)">
            <summary>
            Determines whether two specified date range have the same value.
            </summary>
            <param name="x">The first date range to compare.</param>
            <param name="y">The second date range to compare.</param>
            <returns>*true* if the value of <paramref name="x"/> is the same as the value of <paramref name="y"/>; otherwise, *false*.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPRecurrenceDateRange.op_Inequality(Codeless.SharePoint.SPRecurrenceDateRange,Codeless.SharePoint.SPRecurrenceDateRange)">
            <summary>
            Determines whether two specified date range have different values.
            </summary>
            <param name="x">The first date range to compare.</param>
            <param name="y">The second date range to compare.</param>
            <returns>*true* if the value of <paramref name="x"/> is different to the value of <paramref name="y"/>; otherwise, *false*.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPRecurrenceDateRange.op_LessThanOrEqual(Codeless.SharePoint.SPRecurrenceDateRange,Codeless.SharePoint.SPRecurrenceDateRange)">
            <summary>
            Returns a value that indicates whether a date range is less than or equal to another date range.
            </summary>
            <param name="x">The first date range to compare.</param>
            <param name="y">The second date range to compare.</param>
            <returns>*true* if the value of <paramref name="x"/> is less than or equal to the value of <paramref name="y"/>; otherwise, *false*.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPRecurrenceDateRange.op_LessThan(Codeless.SharePoint.SPRecurrenceDateRange,Codeless.SharePoint.SPRecurrenceDateRange)">
            <summary>
            Returns a value that indicates whether a date range is less than another date range.
            </summary>
            <param name="x">The first date range to compare.</param>
            <param name="y">The second date range to compare.</param>
            <returns>*true* if the value of <paramref name="x"/> is less than the value of <paramref name="y"/>; otherwise, *false*.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPRecurrenceDateRange.op_GreaterThanOrEqual(Codeless.SharePoint.SPRecurrenceDateRange,Codeless.SharePoint.SPRecurrenceDateRange)">
            <summary>
            Returns a value that indicates whether a date range is greater than or equal to another date range.
            </summary>
            <param name="x">The first date range to compare.</param>
            <param name="y">The second date range to compare.</param>
            <returns>*true* if the value of <paramref name="x"/> is greater than or equal to the value of <paramref name="y"/>; otherwise, *false*.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPRecurrenceDateRange.op_GreaterThan(Codeless.SharePoint.SPRecurrenceDateRange,Codeless.SharePoint.SPRecurrenceDateRange)">
            <summary>
            Returns a value that indicates whether a date range is greater than another date range.
            </summary>
            <param name="x">The first date range to compare.</param>
            <param name="y">The second date range to compare.</param>
            <returns>*true* if the value of <paramref name="x"/> is greater than the value of <paramref name="y"/>; otherwise, *false*.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPRecurrenceDateRange.Overlaps(Codeless.SharePoint.SPRecurrenceDateRange)">
            <summary>
            Determines whether the period of this recurrence overlaps with the given recurrence.
            </summary>
            <param name="other">An <see cref="T:Codeless.SharePoint.SPRecurrenceDateRange"/> instance to compare.</param>
            <returns>*true* if this recurrence overlaps with the given recurrence. otherwise *false*.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPRecurrenceDateRange.Equals(Codeless.SharePoint.SPRecurrenceDateRange)">
            <summary>
            Determines the equality of this instance to the given instance.
            Two date ranges are considered equal if and only if both start and end time are equal.
            </summary>
            <param name="other">An <see cref="T:Codeless.SharePoint.SPRecurrenceDateRange"/> instance to compare.</param>
            <returns>*true* if this recurrence is the same with the given recurrence. otherwise *false*.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPRecurrenceDateRange.CompareTo(Codeless.SharePoint.SPRecurrenceDateRange)">
            <summary>
            Compares with another date range.
            A date range with later start date is considered greater. If start dates of two isntances are equal, a date range with later end date is considered greater.
            </summary>
            <param name="other">Date range to compare.</param>
            <returns>Returns -1 if the version number precedes the given one; 1 if the version number succedes the given one; or 0 if the version number is identical to the given one.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPRecurrenceDateRange.Equals(System.Object)">
            <summary>
            Overriden. When <paramref name="obj"/> is an <see cref="T:Codeless.SharePoint.SPRecurrenceDateRange"/> instance, the custom equality comparison is performed.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Codeless.SharePoint.SPRecurrenceDateRange.GetHashCode">
            <summary>
            Overriden. Computes hash code by the start and end time.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Codeless.SharePoint.CamlException">
            <summary>
            Represents error encountered when parsing or generating CAML expressions.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.CamlUnaryOperator">
            <summary>
            Represents a unary CAML operator.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlUnaryOperator.IsNotNull">
            <summary>
            Represents a &lt;IsNotNull/&gt; element.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlUnaryOperator.IsNull">
            <summary>
            Represents a &lt;IsNull/&gt; element.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.CamlBinaryOperator">
            <summary>
            Represents a binary CAML operator.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlBinaryOperator.BeginsWith">
            <summary>
            Represents a &lt;BeginsWith/&gt; element.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlBinaryOperator.Contains">
            <summary>
            Represents a &lt;Contains/&gt; element.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlBinaryOperator.Eq">
            <summary>
            Represents a &lt;Eq/&gt; element.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlBinaryOperator.Geq">
            <summary>
            Represents a &lt;Geq/&gt; element.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlBinaryOperator.Gt">
            <summary>
            Represents a &lt;Gt/&gt; element.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlBinaryOperator.In">
            <summary>
            Represents a &lt;In/&gt; element.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlBinaryOperator.Includes">
            <summary>
            Represents a &lt;Includes/&gt; element.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlBinaryOperator.Leq">
            <summary>
            Represents a &lt;Leq/&gt; element.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlBinaryOperator.Lt">
            <summary>
            Represents a &lt;Lt/&gt; element.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlBinaryOperator.Membership">
            <summary>
            Represents a &lt;Membership/&gt; element.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlBinaryOperator.Neq">
            <summary>
            Represents a &lt;Neq/&gt; element.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlBinaryOperator.NotIncludes">
            <summary>
            Represents a &lt;NotIncludes/&gt; element.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.CamlLogicalOperator">
            <summary>
            Represents a logical CAML operator.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlLogicalOperator.And">
            <summary>
            Represents a &lt;And/&gt; element.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlLogicalOperator.Not">
            <summary>
            Represents a &lt;Not/&gt; element.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlLogicalOperator.Or">
            <summary>
            Represents a &lt;Or/&gt; element.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.CamlOrder">
            <summary>
            Represents a sort direction.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlOrder.Ascending">
            <summary>
            Represents an ascending sort direction.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlOrder.Descending">
            <summary>
            Represents a descending sort direction.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.CamlValueType">
            <summary>
            Represents a value type supported in CAML expressions.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlValueType.Text">
            <summary>
            Represents a &lt;Value Type="Text"/&gt; element.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlValueType.Lookup">
            <summary>
            Represents a &lt;Value Type="Lookup"/&gt; element.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlValueType.DateTime">
            <summary>
            Represents a &lt;Value Type="DateTime"/&gt; element.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlValueType.Integer">
            <summary>
            Represents a &lt;Value Type="Integer"/&gt; element.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlValueType.Number">
            <summary>
            Represents a &lt;Value Type="Number"/&gt; element.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlValueType.Boolean">
            <summary>
            Represents a &lt;Value Type="Boolean"/&gt; element.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlValueType.Guid">
            <summary>
            Represents a &lt;Value Type="Guid"/&gt; element.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlValueType.ContentTypeId">
            <summary>
            Represents a &lt;Value Type="ContentTypeId"/&gt; element.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlValueType.URL">
            <summary>
            Represents a &lt;Value Type="URL"/&gt; element.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlValueType.ModStat">
            <summary>
            Represents a &lt;Value Type="ModStat"/&gt; element.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.CamlExpressionType">
            <summary>
            Represents type of a <see cref="T:Codeless.SharePoint.CamlExpression"/> sub-expression instance.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlExpressionType.Invalid">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlExpressionType.ViewFieldsFieldRef">
            <summary>
            Represents a &lt;FieldRef/&gt; expression inside a &lt;ViewFields/&gt; clause.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlExpressionType.OrderByFieldRef">
            <summary>
            Represents a &lt;FieldRef/&gt; expression inside an &lt;OrderBy/&gt; clause.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlExpressionType.GroupByFieldRef">
            <summary>
            Represents a &lt;FieldRef/&gt; expression inside a &lt;GroupBy/&gt; clause.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlExpressionType.ViewFields">
            <summary>
            Represents a &lt;ViewFields/&gt; element.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlExpressionType.GroupBy">
            <summary>
            Represents a &lt;GroupBy/&gt; element.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlExpressionType.OrderBy">
            <summary>
            Represents an &lt;OrderBy/&gt; element.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlExpressionType.WhereUnaryComparison">
            <summary>
            Represents a unary comparison expression inside a &lt;Where/&gt; element.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlExpressionType.WhereBinaryComparison">
            <summary>
            Represents a binary comparison expression inside a &lt;Where/&gt; element.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlExpressionType.WhereLogical">
            <summary>
            Represents a logical comparison expression inside a &lt;Where/&gt; element.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlExpressionType.Where">
            <summary>
            Represents a &lt;Where/&gt; element.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlExpressionType.Query">
            <summary>
            Represents a &lt;Query/&gt; element.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlExpressionType.Binded">
            <summary>
            Represents a CAML expression that contains binded values.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.CamlExpressionType.Empty">
            <summary>
            Represents an empty CAML expression.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.Caml">
            <summary>
            Provides static methods to build CAML query expressions.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.Caml.Parameter">
            <summary>
            Represents a parameter of a certain data type which its value can be binded when available.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.Caml.Parameter.FieldRef(System.String)">
            <summary>
            Creates a parameter binding to a field name within a CAML expression.
            </summary>
            <param name="parameterName">Unique name to identify this parameter when binding values.</param>
            <returns>A parameter binding which can be supplied to expression building methods.</returns>
        </member>
        <member name="M:Codeless.SharePoint.Caml.Parameter.Order(System.String)">
            <summary>
            Creates a parameter binding to a sorting direction within a CAML expression.
            </summary>
            <param name="parameterName">Unique name to identify this parameter when binding values.</param>
            <returns>A parameter binding which can be supplied to expression building methods.</returns>
        </member>
        <member name="M:Codeless.SharePoint.Caml.Parameter.BooleanString(System.String)">
            <summary>
            Creates a parameter binding to a boolean string "TRUE" or "FALSE".
            </summary>
            <param name="parameterName">Unique name to identify this parameter when binding values.</param>
            <returns>A parameter binding which can be supplied to expression building methods.</returns>
        </member>
        <member name="M:Codeless.SharePoint.Caml.Parameter.Boolean(System.String)">
            <summary>
            Creates a parameter binding to a boolean value.
            </summary>
            <param name="parameterName">Unique name to identify this parameter when binding values.</param>
            <returns>A parameter binding which can be supplied to expression building methods.</returns>
        </member>
        <member name="M:Codeless.SharePoint.Caml.Parameter.Int32(System.String)">
            <summary>
            Creates a parameter binding to an integer value or a list of integer values.
            </summary>
            <param name="parameterName">Unique name to identify this parameter when binding values.</param>
            <returns>A parameter binding which can be supplied to expression building methods.</returns>
        </member>
        <member name="M:Codeless.SharePoint.Caml.Parameter.Double(System.String)">
            <summary>
            Creates a parameter binding to a numerical value or a list of numerical values.
            </summary>
            <param name="parameterName">Unique name to identify this parameter when binding values.</param>
            <returns>A parameter binding which can be supplied to expression building methods.</returns>
        </member>
        <member name="M:Codeless.SharePoint.Caml.Parameter.String(System.String)">
            <summary>
            Creates a parameter binding to a text value or a list of text values.
            </summary>
            <param name="parameterName">Unique name to identify this parameter when binding values.</param>
            <returns>A parameter binding which can be supplied to expression building methods.</returns>
        </member>
        <member name="M:Codeless.SharePoint.Caml.Parameter.DateTime(System.String)">
            <summary>
            Creates a parameter binding to a date time value or a list of date time values.
            </summary>
            <param name="parameterName">Unique name to identify this parameter when binding values.</param>
            <returns>A parameter binding which can be supplied to expression building methods.</returns>
        </member>
        <member name="M:Codeless.SharePoint.Caml.Parameter.DateTime(System.String,System.Boolean)">
            <summary>
            Creates a parameter binding to a date time value or a list of date time values. Time components can be optionally included.
            </summary>
            <param name="parameterName">Unique name to identify this parameter when binding values.</param>
            <param name="includeTimeValue">Specifies whether the time component should be included for comparison.</param>
            <returns>A parameter binding which can be supplied to expression building methods.</returns>
        </member>
        <member name="M:Codeless.SharePoint.Caml.Parameter.Guid(System.String)">
            <summary>
            Creates a parameter binding to a GUID value or a list of GUID values.
            </summary>
            <param name="parameterName">Unique name to identify this parameter when binding values.</param>
            <returns>A parameter binding which can be supplied to expression building methods.</returns>
        </member>
        <member name="M:Codeless.SharePoint.Caml.Parameter.Lookup(System.String)">
            <summary>
            Creates a parameter binding to a lookup value or a list of lookup values.
            </summary>
            <param name="parameterName">Unique name to identify this parameter when binding values.</param>
            <returns>A parameter binding which can be supplied to expression building methods.</returns>
        </member>
        <member name="M:Codeless.SharePoint.Caml.Parameter.ContentTypeId(System.String)">
            <summary>
            Creates a parameter binding to a content type ID value or a list of content type ID values.
            </summary>
            <param name="parameterName">Unique name to identify this parameter when binding values.</param>
            <returns>A parameter binding which can be supplied to expression building methods.</returns>
        </member>
        <member name="M:Codeless.SharePoint.Caml.Parameter.Url(System.String)">
            <summary>
            Creates a parameter binding to a URL value or a list of URL values.
            </summary>
            <param name="parameterName">Unique name to identify this parameter when binding values.</param>
            <returns>A parameter binding which can be supplied to expression building methods.</returns>
        </member>
        <member name="M:Codeless.SharePoint.Caml.Parameter.ModerationStatus(System.String)">
            <summary>
            Creates a parameter binding to a moderation status value or a list of moderation status values.
            </summary>
            <param name="parameterName">Unique name to identify this parameter when binding values.</param>
            <returns>A parameter binding which can be supplied to expression building methods.</returns>
        </member>
        <member name="T:Codeless.SharePoint.Caml.SpecialValue">
            <summary>
            Represents special CAML elements within a CAML expression.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.Caml.SpecialValue.UserID">
            <summary>
            Gets a parameter binding which can be supplied to expression building methods, represents the <UserID/> element.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.Caml.SpecialValue.Today">
            <summary>
            Gets a parameter binding which can be supplied to expression building methods, represents the <Today/> element.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.Caml.SpecialValue.Now">
            <summary>
            Gets a parameter binding which can be supplied to expression building methods, represents the <Now/> element.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.Caml.SpecialValue.TodayWithOffset(System.Int32)">
            <summary>
            Creates a <Today/> element with the specified offset.
            </summary>
            <param name="numOfDays">Number of day offset.</param>
            <returns>A parameter binding which can be supplied to expression building methods.</returns>
        </member>
        <member name="M:Codeless.SharePoint.Caml.SpecialValue.TodayWithOffset(Codeless.SharePoint.ICamlParameterBinding)">
            <summary>
            Creates a <Today/> element with a offset parameter.
            </summary>
            <param name="numOfDays">Number of day offset.</param>
            <returns>A parameter binding which can be supplied to expression building methods.</returns>
        </member>
        <member name="T:Codeless.SharePoint.Caml.WebsScope">
            <summary>
            Provides constant CAML expression to be used in queries.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.Caml.WebsScope.Recursive">
            <summary>
            Represents <Webs Scope="Recursive"/>.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.Caml.WebsScope.SiteCollection">
            <summary>
            Represents <Webs Scope="SiteCollection"/>.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.Caml.LastQueryText">
            <summary>
            Gets the last CAML expression generated from calling <see cref="M:Codeless.SharePoint.CamlExpression.ToString"/> or its overloads.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.Caml.Empty">
            <summary>
            Gets an empty expression. Performing logical And or Or gives back the operand expression; while performing negation gives the same empty expression.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.Caml.True">
            <summary>
            Gets an empty expression that evaluates to *true* when performing logical comparison.
            Performing logical And gives the operand expression; performing logical Or gives the same *true* expression; while performing negation gives the *false* empty expression.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.Caml.False">
            <summary>
            Gets an empty expression that evaluates to *false* when performing logical comparison.
            Performing logical And gives the same *false* expression; performing logical Or gives the operand expression; while performing negation gives the *true* empty expression.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.Caml.And(System.Collections.Generic.IEnumerable{Codeless.SharePoint.CamlExpression})">
            <summary>
            Performs logical And on a set of CAML expressions. Calling this method is equilavent to E1+E2+E3+....
            </summary>
            <param name="expressions">A set of CAML expressions</param>
            <returns>A resulting CAML expression.</returns>
        </member>
        <member name="M:Codeless.SharePoint.Caml.And(Codeless.SharePoint.CamlExpression[])">
            <summary>
            Performs logical And on a set of CAML expressions. Calling this method is equilavent to E1+E2+E3+....
            </summary>
            <param name="expressions">A set of CAML expressions</param>
            <returns>A resulting CAML expression.</returns>
        </member>
        <member name="M:Codeless.SharePoint.Caml.Or(System.Collections.Generic.IEnumerable{Codeless.SharePoint.CamlExpression})">
            <summary>
            Performs logical Or on a set of CAML expressions. Calling this method is equilavent to E1|E2|E3|....
            </summary>
            <param name="expressions">A set of CAML expressions</param>
            <returns>A resulting CAML expression.</returns>
        </member>
        <member name="M:Codeless.SharePoint.Caml.Or(Codeless.SharePoint.CamlExpression[])">
            <summary>
            Performs logical Or on a set of CAML expressions. Calling this method is equilavent to E1|E2|E3|....
            </summary>
            <param name="expressions">A set of CAML expressions</param>
            <returns>A resulting CAML expression.</returns>
        </member>
        <member name="M:Codeless.SharePoint.Caml.Not(Codeless.SharePoint.CamlExpression)">
            <summary>
            Performs negation on a CAML expression. Calling this method is equilavent to ~E.
            </summary>
            <param name="expr">A CAML expression.</param>
            <returns>A resulting CAML expression.</returns>
        </member>
        <member name="M:Codeless.SharePoint.Caml.Parse(System.String)">
            <summary>
            Parses a given string representation of a CAML expression into a <see cref="T:Codeless.SharePoint.CamlExpression"/> instance.
            </summary>
            <param name="value">A string representation of a CAML expression.</param>
            <returns>A parsed <see cref="T:Codeless.SharePoint.CamlExpression"/> instance that represent the same expression.</returns>
        </member>
        <member name="T:Codeless.SharePoint.ClaimsContext">
            <summary>
            Provides information on the current logged on user and authentication settings of the current web application.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ClaimsContext.IsAnonymous">
            <summary>
            Indicates if current user is anonymous.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ClaimsContext.IsWindowsUser">
            <summary>
            Indicates if current user is authenticated using Windows Authentication.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ClaimsContext.IsFormsUser">
            <summary>
            Indicates if current user is authenticated using Form-Based Authentication.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ClaimsContext.FormsUserId">
            <summary>
            Gets the Form-Based user ID if current user is authenticated using Form-Based Authentication.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ClaimsContext.FormsUserProfile">
            <summary>
            Gets the profile of current user if current user is authenticated using Form-Based Authentication.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ClaimsContext.FormsUser">
            <summary>
            Gets an underlying representation of current user if current user is authenticated using Form-Based Authentication.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ClaimsContext.FormsMembershipProvider">
            <summary>
            Gets a membership provider used by the current web application.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ClaimsContext.FormsRoleProvider">
            <summary>
            Gets a role provider used by the current web application.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ClaimsContext.Current">
            <summary>
            Gets a <see cref="T:Codeless.SharePoint.ClaimsContext"/> instance associated with the current HTTP request.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.SPRecurrenceEventType">
            <summary>
            Represents type of an event item. This value is stored in the -EventType- field of an event item.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.SPRecurrenceEventType.None">
            <summary>
            A non-recurrence event.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.SPRecurrenceEventType.Master">
            <summary>
            A recurrence event.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.SPRecurrenceEventType.Deleted">
            <summary>
            Deletion exception to a recurrence event.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.SPRecurrenceEventType.Rescheduled">
            <summary>
            Reschedule exception to a recurrence event.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.SPRecurrenceEnumerator">
            <summary>
            Enumerates recurrence according to recurrence rule of an event item.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.SPRecurrenceEnumerator.EnumeratedDayOfWeek">
            <summary>
            Specifies which day(s) of week should be enumerated.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.SPRecurrenceEnumerator.EnumeratedDayOfWeek.Sunday">
            <summary>
            Only Sunday should be enumerated.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.SPRecurrenceEnumerator.EnumeratedDayOfWeek.Monday">
            <summary>
            Only Monday should be enumerated.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.SPRecurrenceEnumerator.EnumeratedDayOfWeek.Tuesday">
            <summary>
            Only Tuesday should be enumerated.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.SPRecurrenceEnumerator.EnumeratedDayOfWeek.Wednesday">
            <summary>
            Only Wednesday should be enumerated.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.SPRecurrenceEnumerator.EnumeratedDayOfWeek.Thursday">
            <summary>
            Only Thursday should be enumerated.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.SPRecurrenceEnumerator.EnumeratedDayOfWeek.Friday">
            <summary>
            Only Friday should be enumerated.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.SPRecurrenceEnumerator.EnumeratedDayOfWeek.Saturday">
            <summary>
            Only Saturday should be enumerated.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.SPRecurrenceEnumerator.EnumeratedDayOfWeek.AllDays">
            <summary>
            All seven days in a week should be enumerated.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.SPRecurrenceEnumerator.EnumeratedDayOfWeek.Weekdays">
            <summary>
            Only from Monday to Friday should be enumerated.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.SPRecurrenceEnumerator.EnumeratedDayOfWeek.WeekendDays">
            <summary>
            Only Saturday and Sunday should be enumerated.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.SPRecurrenceEnumerator.EnumeratedOccurenceInPeriod">
            <summary>
            Specifies which occurrence should be enumerated. Occurence in question is up to derived classes which can be day in month, week in month or others.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.SPRecurrenceEnumerator.EnumeratedOccurenceInPeriod.First">
            <summary>
            Only the first occurrence should be enumerated.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.SPRecurrenceEnumerator.EnumeratedOccurenceInPeriod.Second">
            <summary>
            Only the second occurrence should be enumerated.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.SPRecurrenceEnumerator.EnumeratedOccurenceInPeriod.Third">
            <summary>
            Only the third occurrence should be enumerated.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.SPRecurrenceEnumerator.EnumeratedOccurenceInPeriod.Fourth">
            <summary>
            Only the forth occurrence should be enumerated.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.SPRecurrenceEnumerator.EnumeratedOccurenceInPeriod.Last">
            <summary>
            Only the last occurrence should be enumerated.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.SPRecurrenceEnumerator.EnumeratedDayOfWeekDictionary">
            <summary>
            Mapping table of <see cref="T:Codeless.SharePoint.SPRecurrenceEnumerator.EnumeratedDayOfWeek"/> as represented in recurrence XML.
            </summary>
        </member>
        <member name="F:Codeless.SharePoint.SPRecurrenceEnumerator.EnumeratedOccurenceInPeriodDictionary">
            <summary>
            Mapping table of <see cref="T:Codeless.SharePoint.SPRecurrenceEnumerator.EnumeratedOccurenceInPeriod"/> as represented in recurrence XML.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.SPRecurrenceEnumerator.#ctor(System.Xml.Linq.XElement,System.DateTime,System.DateTime)">
            <summary>
            Constructor of <see cref="T:Codeless.SharePoint.SPRecurrenceEnumerator"/>.
            </summary>
            <param name="element">Input recurrence XML.</param>
            <param name="eventStart">Recurrence start date defined by master recurrence item.</param>
            <param name="eventEnd">Recurrence end date defined by master recurrence item.</param>
            <exception cref="T:System.ArgumentNullException">Throws when input parameter <paramref name="element"/> is null.</exception>
        </member>
        <member name="M:Codeless.SharePoint.SPRecurrenceEnumerator.GetFirstBaseDate(System.DateTime)">
            <summary>
            When overridden in derived classes, computes the first base date from the recurrence type and recurrence start date as defined.
            </summary>
            <param name="now">Recurrence start date.</param>
            <returns>First base date regards of recurrence type.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPRecurrenceEnumerator.GetNextBaseDate(System.DateTime)">
            <summary>
            When overridden in derived classes, computes the next base date from recurrence type and current base date, depending on the recurrence type.
            </summary>
            <param name="now">Current base date.</param>
            <returns>Next base date regards of recurrence type.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPRecurrenceEnumerator.EnumerateDates(System.DateTime)">
            <summary>
            When overridden in derived classes, enumerates dates from current base date to next base date according to recurrence rule.
            </summary>
            <param name="baseDate">Current base date.</param>
            <returns>Enumerable sequence of recurrences from current base date to next base date.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPRecurrenceEnumerator.Enumerate(System.DateTime,System.DateTime)">
            <summary>
            Enumerates recurrences in specified period according to the recurrence rule.
            </summary>
            <param name="rangeStart">Start date.</param>
            <param name="rangeEnd">End date.</param>
            <returns>Enumerable sequence of recurrences in specified period.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPRecurrenceEnumerator.ParseRecurrenceData(System.String,System.DateTime,System.DateTime)">
            <summary>
            Creates an instance of <see cref="T:Codeless.SharePoint.SPRecurrenceEnumerator"/> from recurrence XML.
            </summary>
            <param name="value">Input recurrence XML.</param>
            <param name="eventStart">Recurrence start date defined by master recurrence item.</param>
            <param name="eventEnd">Recurrence end date defined by master recurrence item.</param>
            <returns>A <see cref="T:Codeless.SharePoint.SPRecurrenceEnumerator"/> instance which recurrence rule are defined by the input XML.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPRecurrenceEnumerator.GetInteger(System.String)">
            <summary>
            Gets the attribute value as an interger from recurrence XML.
            </summary>
            <param name="attributeName">Attribute name.</param>
            <returns>Integer value parsed from XML. 0 if the value does not represent a valid integer.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPRecurrenceEnumerator.GetFlag(System.String)">
            <summary>
            Gets the attribute value as an boolean from recurrence XML.
            </summary>
            <param name="attributeName">Attribute name.</param>
            <returns>Boolean value parsed from XML. False if the value does not represent a valid integer.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPRecurrenceEnumerator.ShouldEnumerate(System.DateTime)">
            <summary>
            Determines whether the specified date should be enumerated.
            </summary>
            <param name="date">Date to be checked.</param>
            <returns>*true* if the specified date meets recurrence rule and should be enumerated; otherwise *false*.</returns>
        </member>
        <member name="T:Codeless.SharePoint.DataRowAdapter">
            <summary>
            Provides field value accessors to a <see cref="T:System.Data.DataRow"/> instance returned from a cross-list query.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.DataRowAdapter.#ctor(Microsoft.SharePoint.SPSite,System.Data.DataRow)">
            <summary>
            Creates an adapter.
            </summary>
            <param name="site">Site collection object.</param>
            <param name="item">List item.</param>
        </member>
        <member name="M:Codeless.SharePoint.DataRowAdapter.#ctor(Microsoft.SharePoint.SPSite,System.Data.DataRow,Codeless.SharePoint.SPObjectCache)">
            <summary>
            Creates an adapter with the given object cache.
            </summary>
            <param name="site">Site collection object.</param>
            <param name="item">List item.</param>
            <param name="objectCache">Object cache.</param>
        </member>
        <member name="P:Codeless.SharePoint.DataRowAdapter.Item(System.String)">
            <summary>
            Gets or sets values to the specified column.
            </summary>
            <param name="name">Field name.</param>
            <returns>Value of the specified column.</returns>
        </member>
        <member name="P:Codeless.SharePoint.DataRowAdapter.ListItemAdapater">
            <summary>
            Gets an <see cref="T:Codeless.SharePoint.SPListItemAdapter"/> instance that references an <see cref="T:Microsoft.SharePoint.SPListItem"/> object.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.DataRowAdapter.Site">
            <summary>
            Gets the site collection associated with the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.DataRowAdapter.Web">
            <summary>
            Gets the parent site of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.DataRowAdapter.WebId">
            <summary>
            Gets the parent site ID of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.DataRowAdapter.ListId">
            <summary>
            Gets the parent list ID of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.DataRowAdapter.ListItemId">
            <summary>
            Gets the list item ID of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.DataRowAdapter.ListItem">
            <summary>
            Gets the list item represented by the adapter.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.DataRowAdapter.HasField(System.String)">
            <summary>
            Determines whether the specified field is included in the data set.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>Returns *true* if the specified field is included in the data set.</returns>
        </member>
        <member name="M:Codeless.SharePoint.DataRowAdapter.GetBoolean(System.String)">
            <summary>
            Gets value from a boolean field.
            If the field does not contain value or the string representation of the value does not form a boolean value, default value is returned.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>Value in the specified field.</returns>
        </member>
        <member name="M:Codeless.SharePoint.DataRowAdapter.GetDateTime(System.String)">
            <summary>
            Gets value from a DateTime field.
            If the field does not contain value, *null* is returned.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>Value in the specified field.</returns>
        </member>
        <member name="M:Codeless.SharePoint.DataRowAdapter.GetEnum``1(System.String)">
            <summary>
            Gets value from an Integer, Text, Choice or MultiChoice field and returns as the equivalent value of the enum type.
            For a MultiChoice field, the returned value is the bitwise OR result of the enum values represented by each selected choice.
            </summary>
            <typeparam name="TEnum">Enum type.</typeparam>
            <param name="fieldName">Field name.</param>
            <returns>Value in the specified field.</returns>
        </member>
        <member name="M:Codeless.SharePoint.DataRowAdapter.GetGuid(System.String)">
            <summary>
            Gets value from a GUID field.
            If the field does not contain value or the string representation of the value does not form a GUID value, default value is returned.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>Value in the specified field.</returns>
        </member>
        <member name="M:Codeless.SharePoint.DataRowAdapter.GetInteger(System.String)">
            <summary>
            Gets value from an integer field.
            If the field does not contain value or the string representation of the value does not form an integer value, default value is returned.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>Value in the specified field.</returns>
        </member>
        <member name="M:Codeless.SharePoint.DataRowAdapter.GetLookupFieldValue(System.String)">
            <summary>
            Gets value from a Lookup field.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>Value in the specified field.</returns>
        </member>
        <member name="M:Codeless.SharePoint.DataRowAdapter.GetNumber(System.String)">
            <summary>
            Gets value from a numeric field, such as Integer, Number and Currency field.
            If the field does not contain value or the string representation of the value does not form a double-precision value, default value is returned.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>Value in the specified field.</returns>
        </member>
        <member name="M:Codeless.SharePoint.DataRowAdapter.GetString(System.String)">
            <summary>
            Gets value from text field, such as Text, Note and Publishing HTML field.
            If the field does not contain value, an empty string is returned.
            If the field is not a text column, a string representation of the value is returned.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>Value in the specified field.</returns>
        </member>
        <member name="M:Codeless.SharePoint.DataRowAdapter.GetTaxonomy(System.String,Microsoft.SharePoint.Taxonomy.TermStore)">
            <summary>
            Gets value from a Taxonomy field.
            </summary>
            <param name="fieldName">Field name.</param>
            <param name="termStore">Term store object.</param>
            <returns>Value in the specified field.</returns>
        </member>
        <member name="M:Codeless.SharePoint.DataRowAdapter.GetUrlFieldValue(System.String)">
            <summary>
            Gets value from a URL field where URL returned can be absolute or relative.
            The URL is normalized to a server-relative path if it points to the same SharePoint web application.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>Value in the specified field.</returns>
        </member>
        <member name="T:Codeless.SharePoint.CamlVisitor">
            <summary>
            Providers a base class that visits a CAML expression.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.CamlVisitor.Visit(Codeless.SharePoint.CamlExpression)">
            <summary>
            Visits a CAML expression.
            </summary>
            <param name="expression">A CAML expression.</param>
        </member>
        <member name="M:Codeless.SharePoint.CamlVisitor.VisitViewFieldsFieldRefExpression(Codeless.SharePoint.CamlParameterBindingFieldRef)">
            <summary>
            Called when visiting a &lt;FieldRef/&gt; expression inside a &lt;ViewFields/&gt; element.
            </summary>
            <param name="fieldName">Name of view field.</param>
        </member>
        <member name="M:Codeless.SharePoint.CamlVisitor.VisitOrderByFieldRefExpression(Codeless.SharePoint.CamlParameterBindingFieldRef,Codeless.SharePoint.CamlParameterBindingOrder)">
            <summary>
            Called when visiting a &lt;FieldRef/&gt; expression inside an &lt;OrderBy/&gt; element.
            </summary>
            <param name="fieldName">Name of order field.</param>
            <param name="orderBinding">Sort direction of order field.</param>
        </member>
        <member name="M:Codeless.SharePoint.CamlVisitor.VisitGroupByFieldRefExpression(Codeless.SharePoint.CamlParameterBindingFieldRef)">
            <summary>
            Called when visiting a &lt;FieldRef/&gt; expression inside a &lt;GroupBy/&gt; element.
            </summary>
            <param name="fieldName">Name of grouping field.</param>
        </member>
        <member name="M:Codeless.SharePoint.CamlVisitor.VisitWhereUnaryComparisonExpression(Codeless.SharePoint.CamlUnaryOperator,Codeless.SharePoint.CamlParameterBindingFieldRef)">
            <summary>
            Called when visiting a unary expression inside a &lt;Where/&gt; element.
            </summary>
            <param name="operatorValue">Type of unary operator.</param>
            <param name="fieldName">Name of field.</param>
        </member>
        <member name="M:Codeless.SharePoint.CamlVisitor.VisitWhereBinaryComparisonExpression(Codeless.SharePoint.CamlBinaryOperator,Codeless.SharePoint.CamlParameterBindingFieldRef,Codeless.SharePoint.ICamlParameterBinding,System.Nullable{System.Boolean})">
            <summary>
            Called when visiting a binary expression inside a &lt;Where/&gt; element.
            </summary>
            <param name="operatorValue">Type of binary operator.</param>
            <param name="fieldName">Name of field.</param>
            <param name="value">Value to operate against the field.</param>
            <param name="includeTimeValue">Indicates whether time component is included in comparison.</param>
        </member>
        <member name="M:Codeless.SharePoint.CamlVisitor.VisitWhereLogicalExpression(Codeless.SharePoint.CamlLogicalOperator,Codeless.SharePoint.CamlExpression,Codeless.SharePoint.CamlExpression)">
            <summary>
            Called when visiting a logical comparison expression inside a &lt;Where/&gt; element.
            </summary>
            <param name="operatorValue">Type of logical operator.</param>
            <param name="leftExpression">Left expression.</param>
            <param name="rightExpression">Right expression.</param>
        </member>
        <member name="M:Codeless.SharePoint.CamlVisitor.VisitWhereExpression(Codeless.SharePoint.CamlExpression)">
            <summary>
            Called when visiting a &lt;Where/&gt; expression.
            </summary>
            <param name="expression">Subexpression contained.</param>
        </member>
        <member name="T:Codeless.SharePoint.ISiteConfigEntry">
            <summary>
            Defines a configuration entry.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ISiteConfigEntry.Key">
            <summary>
            Returns the key of a configuration entry.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ISiteConfigEntry.Value">
            <summary>
            Returns the value of a configuration entry.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ISiteConfigEntry.Category">
            <summary>
            Returns the category of a configuration entry.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ISiteConfigEntry.Description">
            <summary>
            Returns the description of a configuration entry.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ISiteConfigEntry.UseDefaultValue">
            <summary>
            Returns whether the value stored references default value from code.
            If this flag is set to *true*, value will be updated when the default value from code is changed.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ISecureSiteConfigEntry">
            <summary>
            Defines a configuration entry where its value is stored in a secured manner.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ISecureSiteConfigEntry.SecureValue">
            <summary>
            Returns the secured value of a configuration entry.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ISiteConfigProvider">
            <summary>
            Provides a mechanism to persist site configurations.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ISiteConfigProvider.Initialize(Microsoft.SharePoint.SPSite)">
            <summary>
            Initializes the provider with the specified site collection.
            When implemented, provider should mark itself associated to the given site collection.
            </summary>
            <param name="site">Site collection object.</param>
        </member>
        <member name="M:Codeless.SharePoint.ISiteConfigProvider.GetCacheDependency">
            <summary>
            Gets a <see cref="T:System.Web.Caching.CacheDependency"/> object for site configuration cache to flush entries associated with the site collection.
            </summary>
            <returns>A <see cref="T:System.Web.Caching.CacheDependency"/> object.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ISiteConfigProvider.GetEntry(System.String)">
            <summary>
            Gets a configuration entry associated with the site collection with the identification key.
            hen implemented, if such entry is not found, *NULL* should be returned.
            </summary>
            <returns>A configuration entry.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ISiteConfigProvider.CreateEntry(Codeless.SharePoint.ISiteConfigEntry)">
            <summary>
            Creates an entry associated with the site collection.
            When implemented, provider should take the <see cref="P:Codeless.SharePoint.ISiteConfigEntry.Key"/> as the identification key.
            </summary>
            <param name="entry">A configuration entry.</param>
        </member>
        <member name="M:Codeless.SharePoint.ISiteConfigProvider.UpdateEntry(Codeless.SharePoint.ISiteConfigEntry)">
            <summary>
            Updates an entry associated with the site collection.
            When implemented, provider should take the <see cref="P:Codeless.SharePoint.ISiteConfigEntry.Key"/> as the identification key.
            </summary>
            <param name="entry">A configuration entry.</param>
        </member>
        <member name="M:Codeless.SharePoint.ISiteConfigProvider.CommitChanges">
            <summary>
            Commits changes.
            When implemented, provider should persist changes made by <see cref="M:Codeless.SharePoint.ISiteConfigProvider.CreateEntry(Codeless.SharePoint.ISiteConfigEntry)"/> and <see cref="M:Codeless.SharePoint.ISiteConfigProvider.UpdateEntry(Codeless.SharePoint.ISiteConfigEntry)"/>.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.ISPListItemAdapter">
            <summary>
            Defines methods to access values from a list item.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ISPListItemAdapter.Title">
            <summary>
            Gets the title of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ISPListItemAdapter.Filename">
            <summary>
            Gets the filename of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ISPListItemAdapter.ServerRelativeUrl">
            <summary>
            Gets the server-relative URL of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ISPListItemAdapter.Site">
            <summary>
            Gets the site collection associated with the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ISPListItemAdapter.Web">
            <summary>
            Gets the parent site of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ISPListItemAdapter.UniqueId">
            <summary>
            Gets the unique ID of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ISPListItemAdapter.WebId">
            <summary>
            Gets the parent site ID of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ISPListItemAdapter.ListId">
            <summary>
            Gets the parent list ID of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ISPListItemAdapter.ListItemId">
            <summary>
            Gets the list item ID of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ISPListItemAdapter.ListItem">
            <summary>
            Gets the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ISPListItemAdapter.ContentTypeId">
            <summary>
            Gets the content type ID of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ISPListItemAdapter.LastModified">
            <summary>
            Gets the last modified time of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ISPListItemAdapter.EffectivePermissions">
            <summary>
            Gets the permissions of the list item represented by the adapter which is granted to the current user.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.ISPListItemAdapter.Version">
            <summary>
            Gets the version number of the list item.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.ISPListItemAdapter.HasField(System.String)">
            <summary>
            Determines whether the specified field is included in the data set.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>Returns *true* if the specified field is included in the data set.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ISPListItemAdapter.GetBoolean(System.String)">
            <summary>
            Gets value from a boolean field.
            If the field does not contain value or the string representation of the value does not form a boolean value, default value is returned.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>Value in the specified field.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ISPListItemAdapter.GetInteger(System.String)">
            <summary>
            Gets value from an integer field.
            If the field does not contain value or the string representation of the value does not form an integer value, default value is returned.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>Value in the specified field.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ISPListItemAdapter.GetNumber(System.String)">
            <summary>
            Gets value from a numeric field, such as Integer, Number and Currency field.
            If the field does not contain value or the string representation of the value does not form a double-precision value, default value is returned.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>Value in the specified field.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ISPListItemAdapter.GetString(System.String)">
            <summary>
            Gets value from text field, such as Text, Note and Publishing HTML field.
            If the field does not contain value, an empty string is returned.
            If the field is not a text column, a string representation of the value is returned.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>Value in the specified field.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ISPListItemAdapter.GetGuid(System.String)">
            <summary>
            Gets value from a GUID field.
            If the field does not contain value or the string representation of the value does not form a GUID value, default value is returned.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>Value in the specified field.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ISPListItemAdapter.GetDateTime(System.String)">
            <summary>
            Gets value from a DateTime field.
            If the field does not contain value, *null* is returned.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>Value in the specified field.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ISPListItemAdapter.GetEnum``1(System.String)">
            <summary>
            Gets value from an Integer, Text, Choice or MultiChoice field and returns as the equivalent value of the enum type.
            For a MultiChoice field, the returned value is the bitwise OR result of the enum values represented by each selected choice.
            </summary>
            <typeparam name="T">Enum type.</typeparam>
            <param name="fieldName">Field name.</param>
            <returns>Value in the specified field.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ISPListItemAdapter.GetTaxonomy(System.String,Microsoft.SharePoint.Taxonomy.TermStore)">
            <summary>
            Gets value from a Taxonomy field.
            </summary>
            <param name="fieldName">Field name.</param>
            <param name="termStore">Term store object.</param>
            <returns>Value in the specified field.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ISPListItemAdapter.GetUrlFieldValue(System.String)">
            <summary>
            Gets value from a URL field where URL returned can be absolute or relative.
            The URL is normalized to a server-relative path if it points to the same SharePoint web application.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>Value in the specified field.</returns>
        </member>
        <member name="M:Codeless.SharePoint.ISPListItemAdapter.GetLookupFieldValue(System.String)">
            <summary>
            Gets value from a Lookup field.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>Value in the specified field.</returns>
        </member>
        <member name="T:Codeless.SharePoint.KeywordQueryResultAdapter">
            <summary>
            Provides field value accessors to a <see cref="T:System.Data.DataRow"/> instance returned from Office search service.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.KeywordQueryResultAdapter.#ctor(Microsoft.SharePoint.SPSite,System.Data.DataRow)">
            <summary>
            Creates an adapter.
            </summary>
            <param name="site">Site collection object.</param>
            <param name="item">List item.</param>
        </member>
        <member name="M:Codeless.SharePoint.KeywordQueryResultAdapter.#ctor(Microsoft.SharePoint.SPSite,System.Data.DataRow,Codeless.SharePoint.SPObjectCache)">
            <summary>
            Creates an adapter with the given object cache.
            </summary>
            <param name="site">Site collection object.</param>
            <param name="item">List item.</param>
            <param name="objectCache">Object cache.</param>
        </member>
        <member name="P:Codeless.SharePoint.KeywordQueryResultAdapter.Item(System.String)">
            <summary>
            Gets or sets values to the specified column.
            </summary>
            <param name="name">Field name.</param>
            <returns>Value of the specified column.</returns>
        </member>
        <member name="P:Codeless.SharePoint.KeywordQueryResultAdapter.Filename">
            <summary>
            Gets the filename of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.KeywordQueryResultAdapter.ServerRelativeUrl">
            <summary>
            Gets the server-relative URL of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.KeywordQueryResultAdapter.UniqueId">
            <summary>
            Gets the unique ID of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.KeywordQueryResultAdapter.WebId">
            <summary>
            When overriden in derived classes, gets the parent site ID of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.KeywordQueryResultAdapter.ListId">
            <summary>
            When overriden in derived classes, gets the parent list ID of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.KeywordQueryResultAdapter.ListItemId">
            <summary>
            When overriden in derived classes, gets the list item ID of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.KeywordQueryResultAdapter.LastModified">
            <summary>
            When overriden in derived classes, gets the last modified time of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.KeywordQueryResultAdapter.EffectivePermissions">
            <summary>
            Gets the permissions of the list item represented by the adapter which is granted to the current user.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.KeywordQueryResultAdapter.HasField(System.String)">
            <summary>
            When overidden, determines whether the specified field is included in the data set.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>Returns *true* if the specified field is included in the data set.</returns>
        </member>
        <member name="M:Codeless.SharePoint.KeywordQueryResultAdapter.GetTaxonomy(System.String,Microsoft.SharePoint.Taxonomy.TermStore)">
            <summary>
            Gets value from a Taxonomy field.
            </summary>
            <param name="fieldName">Field name.</param>
            <param name="termStore">Term store object.</param>
            <returns>Value in the specified field.</returns>
        </member>
        <member name="M:Codeless.SharePoint.KeywordQueryResultAdapter.GetTaxonomyMultiInternal(System.String,Microsoft.SharePoint.Taxonomy.TermStore)">
            <summary>
            Gets a collection of <see cref="T:Microsoft.SharePoint.Taxonomy.Term"/> objects referenced by the multiple taxonomy field.
            </summary>
            <param name="fieldName">Field name.</param>
            <param name="termStore">Term store object.</param>
            <returns>A collection of terms.</returns>
        </member>
        <member name="T:Codeless.SharePoint.Publishing.PublishingWebHelper">
            <summary>
            Provides helper methods for publishing web feature.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.Publishing.PublishingWebHelper.GetVariationLabels(Microsoft.SharePoint.Publishing.PublishingSite,System.Boolean)">
            <summary>
            Gets all variation labels in a site collection. This method is safe when called in console.
            </summary>
            <param name="publishingSite">Site collection.</param>
            <param name="includePending">Whether to return pending variation labels.</param>
            <returns>A read-only collection of all variation labels.</returns>
        </member>
        <member name="M:Codeless.SharePoint.Publishing.PublishingWebHelper.TrimVariationFromPath(System.String)">
            <summary>
            Gets the path relative to the top URL of the current variation.
            </summary>
            <param name="requestPath"></param>
            <returns></returns>
        </member>
        <member name="M:Codeless.SharePoint.Publishing.PublishingWebHelper.CreatePublishingPage(Microsoft.SharePoint.Publishing.PublishingWeb,Microsoft.SharePoint.SPContentTypeId,System.String)">
            <summary>
            Creates a publishing page under the specified site with the content type ID and specified title.
            Filename of the created page is automatically chosen to avoid collision to existing pages.
            </summary>
            <param name="currentWeb">Publishing web.</param>
            <param name="contentTypeId">Content type ID of the new page.</param>
            <param name="title">Title of the new page.</param>
            <exception cref="T:System.InvalidOperationException">Throws if there is no page layouts associated with the specified content type ID.</exception>
            <returns>A publishing page object.</returns>
        </member>
        <member name="M:Codeless.SharePoint.Publishing.PublishingWebHelper.FixRichTextWebPartWhiteSpaces(Codeless.SharePoint.ISPListItemAdapter)">
            <summary>
            Removes extra white spaces in rich-text web parts.
            </summary>
            <param name="adapter">Data access adapter of the list item.</param>
        </member>
        <member name="M:Codeless.SharePoint.Publishing.PublishingWebHelper.FixRichTextFieldWhiteSpaces(Codeless.SharePoint.ISPListItemAdapter)">
            <summary>
            Removes extra white spaces in rich-text fields.
            </summary>
            <param name="adapter">Data access adapter of the list item.</param>
        </member>
        <member name="M:Codeless.SharePoint.Publishing.PublishingWebHelper.PublishRelatedAssets(Codeless.SharePoint.ISPListItemAdapter,System.String[])">
            <summary>
            Approves and publishes all assets referred in any link fields (such as URL or Summary Links), rich-text content and rich-text web parts.
            </summary>
            <param name="adapter">Data access adapter of the list item.</param>
            <param name="additionalFields">Internal name of fields where its HTML content need to be parsed.</param>
        </member>
        <member name="M:Codeless.SharePoint.Publishing.PublishingWebHelper.PublishRelatedAsset(System.String,Codeless.SharePoint.ISPListItemAdapter)">
            <summary>
            Approves and publishes asset referred by the specified URL.
            </summary>
            <param name="assetUrl">URL to the asset.</param>
            <param name="adapter">Data access adapter of the list item.</param>
        </member>
        <member name="M:Codeless.SharePoint.Publishing.PublishingWebHelper.ResolvePrefixedUrl(System.String)">
            <summary>
            Extension to <see cref="M:Microsoft.SharePoint.Utilities.SPUtility.GetServerRelativeUrlFromPrefixedUrl(System.String)"/>. 
            See <see cref="M:Codeless.SharePoint.Publishing.PublishingWebHelper.ResolvePrefixedUrl(System.String,System.UriKind)"/> for details.
            </summary>
            <param name="value">URL with prefixes to be resolved.</param>
            <returns>Resolved URL.</returns>
        </member>
        <member name="M:Codeless.SharePoint.Publishing.PublishingWebHelper.ResolvePrefixedUrl(System.String,System.UriKind)">
            <summary>
            Extension to <see cref="M:Microsoft.SharePoint.Utilities.SPUtility.GetServerRelativeUrlFromPrefixedUrl(System.String)"/>.
            This method supports two more tokens. "~variation/" will be resolved to the top web of the current variation;
            where "~pages/" will be resolved to the name of publishing page library under the locale of the current variation.
            It also allows to specify the returned URL to be server-relative or absolute.
            </summary>
            <param name="value">Input URL.</param>
            <param name="uriKind">Format of the resolved URL.</param>
            <returns>Resolved URL.</returns>
        </member>
        <member name="T:Codeless.SharePoint.Publishing.VariationContext">
            <summary>
            Provides information on the variation of current HTTP request.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.Publishing.VariationContext.#ctor(Microsoft.SharePoint.SPContext)">
            <summary>
            Creates an instance of the <see cref="T:Codeless.SharePoint.Publishing.VariationContext"/> class with the specified SharePoint request context.
            </summary>
            <param name="context">SharePoint request context.</param>
        </member>
        <member name="M:Codeless.SharePoint.Publishing.VariationContext.#ctor(Microsoft.SharePoint.SPWeb)">
            <summary>
            Creates an instance of the <see cref="T:Codeless.SharePoint.Publishing.VariationContext"/> class with the specified site.
            </summary>
            <param name="web">Site object.</param>
        </member>
        <member name="P:Codeless.SharePoint.Publishing.VariationContext.Current">
            <summary>
            Gets a cached instance of the <see cref="T:Codeless.SharePoint.Publishing.VariationContext"/> class for the current HTTP request.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.Publishing.VariationContext.IsVariationWeb">
            <summary>
            Indicates if the requested web belongs to a variation.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.Publishing.VariationContext.IsSource">
            <summary>
            Indicates if the variation of the requested web is the source variation.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.Publishing.VariationContext.TopWebServerRelativeUrl">
            <summary>
            Gets the server-relative URL of the top web of the current variation.
            If the requested web does not belong to a variation, the server-relative URL of the root site is returned.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.Publishing.VariationContext.VariationLabel">
            <summary>
            Gets the current variation label, that is the URL segment that identify the variation.
            If the requested web does not belong to a variation, an empty string is returned.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.Publishing.VariationContext.PagesListName">
            <summary>
            Gets the name of publishing page library under the current variation.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.Publishing.VariationContext.Culture">
            <summary>
            Gets the culture associated with the current variation.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.SearchServiceHelper">
            <summary>
            Provides helper methods to Office search service.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SearchServiceHelper.LastQueryText">
            <summary>
            Gets the last query text translated from a <see cref="T:Codeless.SharePoint.CamlExpression"/> instance to a <see cref="T:Microsoft.Office.Server.Search.Query.KeywordQuery"/> instance.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.SearchServiceHelper.FlushCache(Microsoft.SharePoint.SPSite)">
            <summary>
            Clears the managed property cache for a specified site collection.
            </summary>
            <param name="site">A site collection object.</param>
        </member>
        <member name="M:Codeless.SharePoint.SearchServiceHelper.CreateKeywordQueryFromCaml(Microsoft.SharePoint.SPSite,Codeless.SharePoint.CamlExpression)">
            <summary>
            Creates a <see cref="T:Microsoft.Office.Server.Search.Query.KeywordQuery"/> instance with query text and certain properties set in regards of the specified CAML expression.
            </summary>
            <param name="site">A site collection object.</param>
            <param name="expression">A CAML expression.</param>
            <returns>A prepared <see cref="T:Microsoft.Office.Server.Search.Query.KeywordQuery"/> instance.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SearchServiceHelper.CreateKeywordQueryFromCaml(Microsoft.SharePoint.SPSite,Codeless.SharePoint.CamlExpression,System.Collections.Hashtable)">
            <summary>
            Creates a <see cref="T:Microsoft.Office.Server.Search.Query.KeywordQuery"/> instance with query text and certain properties set in regards of the specified CAML expression, with values to be binded on parameters.
            </summary>
            <param name="site">A site collection object.</param>
            <param name="expression">A CAML expression.</param>
            <param name="bindings">A collection of parameter values.</param>
            <returns>A prepared <see cref="T:Microsoft.Office.Server.Search.Query.KeywordQuery"/> instance.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SearchServiceHelper.CreateQuery(Microsoft.SharePoint.SPSite,Codeless.SharePoint.CamlExpression,System.Int32,System.Int32,System.String[],Microsoft.Office.Server.Search.Query.KeywordInclusion,System.String[])">
            <summary>
            Creates a <see cref="T:Microsoft.Office.Server.Search.Query.KeywordQuery"/> instance with query text and certain properties set in regards of the specified CAML expression.
            </summary>
            <param name="site">A site collection object.</param>
            <param name="query">A CAML expression.</param>
            <param name="limit">Number of rows to be returned.</param>
            <param name="startRow">Number of rows to be skipped.</param>
            <param name="keywords">A list of keywords to be passed in query text.</param>
            <param name="inclusion">Whether to match all or any keywords supplied.</param>
            <param name="selectProperties">A list of managed properties to be returned.</param>
            <returns>A prepared <see cref="T:Microsoft.Office.Server.Search.Query.KeywordQuery"/> instance.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SearchServiceHelper.ExecuteQuery(Microsoft.SharePoint.SPSite,Codeless.SharePoint.CamlExpression,System.Int32,System.Int32,System.String[],Codeless.SharePoint.SearchRefiner[],Microsoft.Office.Server.Search.Query.KeywordInclusion,System.String[])">
            <summary>
            Executes a CAML query against Office search service.
            </summary>
            <param name="site">A site collection object.</param>
            <param name="query">A CAML expression.</param>
            <param name="limit">Number of rows to be returned.</param>
            <param name="startRow">Number of rows to be skipped.</param>
            <param name="keywords">A list of keywords to be passed in query text.</param>
            <param name="refiners">A list of <see cref="T:Codeless.SharePoint.SearchRefiner"/> objects where refinement results are populated.</param>
            <param name="inclusion">Whether to match all or any keywords supplied.</param>
            <param name="selectProperties">A list of managed properties to be returned.</param>
            <returns>Results returned from Office search service.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SearchServiceHelper.ExecuteQuery(Microsoft.Office.Server.Search.Query.KeywordQuery,Codeless.SharePoint.SearchRefiner[])">
            <summary>
            Executes a keyword query against Office search service.
            </summary>
            <param name="keywordQuery">A keyword query instance.</param>
            <param name="refiners">A list of <see cref="T:Codeless.SharePoint.SearchRefiner"/> objects where refinement results are populated.</param>
            <returns>Results returned from Office search service.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SearchServiceHelper.GetManagedPropertyNames(Microsoft.SharePoint.SPSite,System.String[])">
            <summary>
            Gets names of corresponding managed properties of the specified SharePoint fields.
            </summary>
            <param name="site">A site collection object.</param>
            <param name="internalName">A list of internal names of SharePoint fields.</param>
            <returns>A list of resolved managed property names.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SearchServiceHelper.GetManagedPropertyNames(Microsoft.SharePoint.SPSite)">
            <summary>
            Gets a mapping of SharePoint field names to managed property names.
            </summary>
            <param name="site">A site collection object.</param>
            <returns>A mapping of SharePoint field names to managed property names.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SearchServiceHelper.GetManagedPropertyNames(Microsoft.Office.Server.Search.Administration.SearchServiceApplication)">
            <summary>
            Gets a mapping of SharePoint field names to managed property names.
            </summary>
            <param name="searchApplication">A search service application.</param>
            <returns>A mapping of SharePoint field names to managed property names.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SearchServiceHelper.GetSearchServiceApplication(Microsoft.SharePoint.SPSite)">
            <summary>
            Gets a search service application connected to the specified site collection.
            </summary>
            <param name="site">A site collection object.</param>
            <returns>A search service application.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SearchServiceHelper.EnsureManagedProperties(Microsoft.SharePoint.SPSite,System.Collections.Generic.IEnumerable{Microsoft.SharePoint.SPField})">
            <summary>
            Creates managed properties from crawled properties that corresponds to the specified SharePoint fields.
            </summary>
            <param name="site">A site collection object.</param>
            <param name="fields">A list of SharePoint fields.</param>
        </member>
        <member name="T:Codeless.SharePoint.SiteConfig`1">
            <summary>
            Provides the base class for site configuration object.
            </summary>
            <remarks>
            When a new instance of a derived site configuration class is instantiated, values are pulled from a predefined list (Lists/SiteConfig).
            All public writable properties are propagated with the values.
            If the corresponding entry of a property are not found on the predefined list, 
            a new entry with value specified by <see cref="T:System.ComponentModel.DefaultValueAttribute"/> is created on the list, and the property is propagated with that default value.
            <see cref="T:System.ComponentModel.TypeConverterAttribute"/> is supported for custom data types.
            </remarks>
            <typeparam name="T">The derived type itself.</typeparam>
        </member>
        <member name="P:Codeless.SharePoint.SiteConfig`1.Current">
            <summary>
            Gets an instance of the current type <typeparamref name="T"/> which loads configuration from the current site collection.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.SiteConfig`1.Load(Microsoft.SharePoint.SPSite)">
            <summary>
            Gets an instance of the current type <typeparamref name="T"/> which loads configuration from the given site collection.
            </summary>
            <param name="site">Site collection object.</param>
            <returns>An instance of the current type <typeparamref name="T"/> which loads configuration from the given site collection.</returns>
            <exception cref="T:System.ArgumentNullException">Throws when input parameter <paramref name="site"/> is null.</exception>
        </member>
        <member name="M:Codeless.SharePoint.SiteConfig`1.Load(Microsoft.SharePoint.SPSite,System.Boolean)">
            <summary>
            Gets an instance of the current type <typeparamref name="T"/> which loads configuration from the given site collection,
            and optionally refresh the cache.
            </summary>
            <param name="site">Site collection object.</param>
            <param name="forceRefresh">Whether to refresh the cache.</param>
            <returns>An instance of the current type <typeparamref name="T"/> which loads configuration from the given site collection.</returns>
            <exception cref="T:System.ArgumentNullException">Throws when input parameter <paramref name="site"/> is null.</exception>
        </member>
        <member name="M:Codeless.SharePoint.SiteConfig`1.Load(System.Guid)">
            <summary>
            Gets an instance of the current type <typeparamref name="T"/> which loads configuration from the specified site collection.
            </summary>
            <param name="siteId">The GUID of a site collection.</param>
            <returns>An instance of the current type <typeparamref name="T"/> which loads configuration from the specified site collection.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SiteConfig`1.Load(System.Guid,System.Boolean)">
            <summary>
            Gets an instance of the current type <typeparamref name="T"/> which loads configuration from the specified site collection,
            and optionally refresh the cache.
            </summary>
            <param name="siteId">The GUID of a site collection.</param>
            <param name="forceRefresh">Whether to refresh the cache.</param>
            <returns>An instance of the current type <typeparamref name="T"/> which loads configuration from the given site collection.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SiteConfig`1.Invalidate(System.Guid)">
            <summary>
            Invalidate the cached instance of the current type <typeparamref name="T"/> for the specified site collection.
            </summary>
            <param name="siteId">The GUID of a site collection.</param>
        </member>
        <member name="M:Codeless.SharePoint.SiteConfig`1.Invalidate(Microsoft.SharePoint.SPSite)">
            <summary>
            Invalidate the cached instance of the current type <typeparamref name="T"/> for the specified site collection.
            </summary>
            <param name="site">Site collection object.</param>
        </member>
        <member name="M:Codeless.SharePoint.SiteConfig`1.Invalidate">
            <summary>
            Invalidate this instance of the current type <typeparamref name="T"/>. 
            In the next time <see cref="M:Codeless.SharePoint.SiteConfig`1.Load(System.Guid)"/> or one of this overloads is called for the same site collection,
            a new instance is returned which its property values are loaded again from the site collection.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.SiteConfigProviderAttribute">
            <summary>
            Specifies a custom site configuration provider for <see cref="T:Codeless.SharePoint.SiteConfig`1"/>.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.SiteConfigProviderAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Codeless.SharePoint.SiteConfigProviderAttribute"/> class with the specified <see cref="T:System.Type"/> object.
            </summary>
            <param name="providerType"></param>
        </member>
        <member name="P:Codeless.SharePoint.SiteConfigProviderAttribute.ProviderType">
            <summary>
            Gets the provider type.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.SPExtension">
            <summary>
            Provides extension methods to SharePoint classes.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.CreateAdapter(Microsoft.SharePoint.SPListItem)">
            <summary>
            Creates a generic data access adapter from a list item.
            </summary>
            <param name="listItem">List item where data is read from or write to.</param>
            <returns>A list item data access adapter.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.GetUrlFieldValue(Codeless.SharePoint.ISPListItemAdapter,System.String,System.UriKind)">
            <summary>
            Gets value from a URL field.
            If <paramref name="uriKind"/> is set to <see cref="F:System.UriKind.Absolute"/>, the URL is always absolute;
            otherwise the URL is normalized to a server-relative path if it points to the same SharePoint web application.
            </summary>
            <param name="adapter">Data access adapter of list item.</param>
            <param name="fieldName">Name of field to read.</param>
            <param name="uriKind">Specifies to always return absolute URL or not.</param>
            <returns>Value in the specified field.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.SetUrlFieldValue(Codeless.SharePoint.ISPListItemAdapter,System.String,System.String)">
            <summary>
            Sets value to a URL field with the specified URL.
            </summary>
            <param name="adapter">Data access adapter of list item.</param>
            <param name="fieldName">Name of field to write.</param>
            <param name="url">URL value.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.SetUrlFieldValue(Codeless.SharePoint.ISPListItemAdapter,System.String,System.String,System.String)">
            <summary>
            Sets value to a URL field with the specified URL and description.
            </summary>
            <param name="adapter">Data access adapter of list item.</param>
            <param name="fieldName">Name of field to write.</param>
            <param name="url">URL value.</param>
            <param name="description">Description of the URL.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.GetDateTimeOrMax(Codeless.SharePoint.ISPListItemAdapter,System.String)">
            <summary>
            Gets value from a date time field. If the field does not contain value, the largest date supported in SharePoint is returned, that is 8900/12/31 23:59:59 UTC.
            </summary>
            <param name="adapter">Data access adapter of list item.</param>
            <param name="fieldName">Name of field to read.</param>
            <returns>Value of the data time field.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.GetDateTimeOrMin(Codeless.SharePoint.ISPListItemAdapter,System.String)">
            <summary>
            Gets value from a date time field. If the field does not contain value, the smallest date supported in SharePoint is returned, that is 1900/1/1 0:00:00 UTC.
            </summary>
            <param name="adapter">Data access adapter of list item.</param>
            <param name="fieldName">Name of field to read.</param>
            <returns>Value of the data time field.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.GetDateOnly(Codeless.SharePoint.ISPListItemAdapter,System.String)">
            <summary>
            Gets value from a date time field ignoring the time component.
            </summary>
            <param name="adapter">Data access adapter of list item.</param>
            <param name="fieldName">Name of field to read.</param>
            <returns>Value of the data time field without the time component.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.GetDateOnlyOrMax(Codeless.SharePoint.ISPListItemAdapter,System.String)">
            <summary>
            Gets value from a date time field ignoring the time component. If the field does not contain value, the largest date supported in SharePoint is returned, that is 1900/1/1 0:00:00 UTC.
            </summary>
            <param name="adapter">Data access adapter of list item.</param>
            <param name="fieldName">Name of field to read.</param>
            <returns>Value of the data time field without the time component.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.GetDateOnlyOrMin(Codeless.SharePoint.ISPListItemAdapter,System.String)">
            <summary>
            Gets value from a date time field ignoring the time component. If the field does not contain value, the smallest date supported in SharePoint is returned, that is 1900/1/1 0:00:00 UTC.
            </summary>
            <param name="adapter">Data access adapter of list item.</param>
            <param name="fieldName">Name of field to read.</param>
            <returns>Value of the data time field without the time component.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.SetDateOnly(Codeless.SharePoint.ISPListItemAdapter,System.String,System.Nullable{System.DateTime})">
            <summary>
            Sets value to a date time field without the time component.
            </summary>
            <param name="adapter">Data access adapter of list item.</param>
            <param name="fieldName">Name of field to write.</param>
            <param name="value">Date value.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.WithElevatedPrivileges(Microsoft.SharePoint.SPSite,System.Action{Microsoft.SharePoint.SPSite})">
            <summary>
            Performs operation on the site collection with system account.
            </summary>
            <param name="site">A site collection object.</param>
            <param name="codeToRun">Action to run.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.WithElevatedPrivileges(Microsoft.SharePoint.SPWeb,System.Action{Microsoft.SharePoint.SPWeb})">
            <summary>
            Performs operation on the site with system account.
            </summary>
            <param name="web">A site object.</param>
            <param name="codeToRun">Action to run.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.WithElevatedPrivileges(Microsoft.SharePoint.SPList,System.Action{Microsoft.SharePoint.SPList})">
            <summary>
            Performs operation on the list with system account.
            </summary>
            <param name="list">A list object.</param>
            <param name="codeToRun">Action to run.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.WithElevatedPrivileges(Microsoft.SharePoint.SPListItem,System.Action{Microsoft.SharePoint.SPListItem})">
            <summary>
            Performs operation on the list item with system account.
            </summary>
            <param name="listItem">A list item object.</param>
            <param name="codeToRun">Action to run.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.WithElevatedPrivileges(Microsoft.SharePoint.SPFolder,System.Action{Microsoft.SharePoint.SPFolder})">
            <summary>
            Performs operation on the folder with system account.
            </summary>
            <param name="folder">A folder objet.</param>
            <param name="codeToRun">Action to run.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.WithElevatedPrivileges(Microsoft.SharePoint.SPFile,System.Action{Microsoft.SharePoint.SPFile})">
            <summary>
            Performs operation on the file with system account.
            </summary>
            <param name="file">A file objet.</param>
            <param name="codeToRun">Action to run.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.WithElevatedPrivileges(Microsoft.SharePoint.SPSecurableObject,System.Action{Microsoft.SharePoint.SPSecurableObject})">
            <summary>
            Performs operation on the secureable object with system account.
            </summary>
            <param name="securableObject">SPSecurableObject.</param>
            <param name="codeToRun">Action to run.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.WithUser(Microsoft.SharePoint.SPSite,Microsoft.SharePoint.SPUser,System.Action{Microsoft.SharePoint.SPSite})">
            <summary>
            Performs operation on the site collection with the specified account.
            </summary>
            <param name="site">A site collection object.</param>
            <param name="user">A user object that represents the account who operations are performed as.</param>
            <param name="codeToRun">Action to run.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.WithUser(Microsoft.SharePoint.SPWeb,Microsoft.SharePoint.SPUser,System.Action{Microsoft.SharePoint.SPWeb})">
            <summary>
            Performs operation on the site with the specified account.
            </summary>
            <param name="web">A site object.</param>
            <param name="user">A user object that represents the account who operations are performed as.</param>
            <param name="codeToRun">Action to run.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.WithUser(Microsoft.SharePoint.SPList,Microsoft.SharePoint.SPUser,System.Action{Microsoft.SharePoint.SPList})">
            <summary>
            Performs operation on the list with the specified account.
            </summary>
            <param name="list">A list object.</param>
            <param name="user">A user object that represents the account who operations are performed as.</param>
            <param name="codeToRun">Action to run.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.WithUser(Microsoft.SharePoint.SPListItem,Microsoft.SharePoint.SPUser,System.Action{Microsoft.SharePoint.SPListItem})">
            <summary>
            Performs operation on the list item with the specified account.
            </summary>
            <param name="listItem">A list item object.</param>
            <param name="user">A user object that represents the account who operations are performed as.</param>
            <param name="codeToRun">Action to run.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.WithUser(Microsoft.SharePoint.SPFolder,Microsoft.SharePoint.SPUser,System.Action{Microsoft.SharePoint.SPFolder})">
            <summary>
            Performs operation on the folder with the specified account.
            </summary>
            <param name="folder">A folder objet.</param>
            <param name="user">A user object that represents the account who operations are performed as.</param>
            <param name="codeToRun">Action to run.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.WithUser(Microsoft.SharePoint.SPFile,Microsoft.SharePoint.SPUser,System.Action{Microsoft.SharePoint.SPFile})">
            <summary>
            Performs operation on the file with the specified account.
            </summary>
            <param name="file">A file objet.</param>
            <param name="user">A user object that represents the account who operations are performed as.</param>
            <param name="codeToRun">Action to run.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.WithUser(Microsoft.SharePoint.SPSecurableObject,Microsoft.SharePoint.SPUser,System.Action{Microsoft.SharePoint.SPSecurableObject})">
            <summary>
            Performs operation on the secureable object with the specified account.
            </summary>
            <param name="securableObject">SPSecurableObject.</param>
            <param name="user">A user object that represents the account who operations are performed as.</param>
            <param name="codeToRun">Action to run.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.TryGetWebForCurrentUser(Microsoft.SharePoint.SPSite,System.Guid)">
            <summary>
            Finds a descendant site of the specified ID.
            </summary>
            <param name="site">A site collection object.</param>
            <param name="webId">GUID of a descendant site.</param>
            <returns>A site object or *null* if the sub-site does not exist or access is denied.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.GetSubWebByIDSafe(Microsoft.SharePoint.SPWeb,System.Guid)">
            <summary>
            Gets a sub-site with the specified ID. This method derives from <see cref="M:Microsoft.SharePoint.SPWeb.GetSubwebsForCurrentUser"/> except that all exceptions are caught.
            </summary>
            <param name="web">A site object.</param>
            <param name="name">GUID of sub-site.</param>
            <returns>A site object or *null* if the sub-site does not exist or access is denied.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.GetSubWebByNameSafe(Microsoft.SharePoint.SPWeb,System.String)">
            <summary>
            Gets a sub-site with the specified name. This method derives from <see cref="M:Microsoft.SharePoint.SPWeb.GetSubwebsForCurrentUser"/> except that all exceptions are caught.
            </summary>
            <param name="web">A site object.</param>
            <param name="name">Name of sub-site.</param>
            <returns>A site object or *null* if the sub-site does not exist or access is denied.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.GetAllWebsForCurrentUser(Microsoft.SharePoint.SPWeb)">
            <summary>
            Gets all descendant sites which current user have permission to access.
            </summary>
            <param name="web">A site object.</param>
            <returns>An enumerable of all descendant sites which current user have permission to access.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.GetAllowUnsafeUpdatesScope(Microsoft.SharePoint.SPSite)">
            <summary>
            Sets <see cref="P:Microsoft.SharePoint.SPWeb.AllowUnsafeUpdates"/> to *true* on the root site and restore previous value on dispose.
            </summary>
            <param name="site">A site collection object.</param>
            <returns>An <see cref="T:System.IDisposable"/> object.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.GetAllowUnsafeUpdatesScope(Microsoft.SharePoint.SPWeb)">
            <summary>
            Sets <see cref="P:Microsoft.SharePoint.SPWeb.AllowUnsafeUpdates"/> to *true* on the specified site and restore previous value on dispose.
            </summary>
            <param name="web">A site object.</param>
            <returns>An <see cref="T:System.IDisposable"/> object.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.GetListsOfContentType(Microsoft.SharePoint.SPWeb,Microsoft.SharePoint.SPContentTypeId)">
            <summary>
            Gets all lists under the given site which contain the specified content type.
            </summary>
            <param name="web">A site object.</param>
            <param name="contentTypeId">Content type ID.</param>
            <returns>A enumerable of list objects.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.GetListOfContentType(Microsoft.SharePoint.SPWeb,Microsoft.SharePoint.SPContentTypeId)">
            <summary>
            Gets a single list under the given site which contains the specified content type.
            </summary>
            <param name="web">A site object.</param>
            <param name="contentTypeId">Content type ID.</param>
            <returns>A list object or *null* if there is none.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.GetListOfContentType(Microsoft.SharePoint.SPWeb,Microsoft.SharePoint.SPContentTypeId,System.Boolean)">
            <summary>
            Gets a single list under the given site which contains the specified content type, and optionally throw an exception if there is none.
            </summary>
            <param name="web">A site object.</param>
            <param name="contentTypeId">Content type ID.</param>
            <param name="throwIfNotExists">Whether to throw an exception if there is none.</param>
            <returns>A list object.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.ContainsContentType(Microsoft.SharePoint.SPList,Microsoft.SharePoint.SPContentTypeId)">
            <summary>
            Determines whether the specified list contains the content type.
            </summary>
            <param name="list">A list object.</param>
            <param name="contentTypeId">Content type ID.</param>
            <returns>*true* if the specified list contains the content type.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.GetListSafe(Microsoft.SharePoint.SPWeb,System.String)">
            <summary>
            Returns the list that is associated with the specified site-relative URL.
            </summary>
            <param name="web">A site object.</param>
            <param name="strUrl">A string that contains the site-relative URL for a list.</param>
            <remarks>This method caters unexpected <see cref="T:System.Runtime.InteropServices.COMException"/> with native error code 0x80004005.</remarks>
            <returns>An <see cref="T:Microsoft.SharePoint.SPList"/> object that represents the list.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.EnsureListByUrl(Microsoft.SharePoint.SPWeb,System.String,System.String,Microsoft.SharePoint.SPListTemplateType)">
            <summary>
            Creates a list under the specified site if no list exists at the given URL.
            </summary>
            <param name="web">A site object.</param>
            <param name="title">Title of the list to create.</param>
            <param name="webRelativeUrl">URL of the list to create at.</param>
            <param name="templateType">Template type.</param>
            <returns>Existing or newly created list object.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.EnsureListByUrl(Microsoft.SharePoint.SPWeb,System.String,System.String,Microsoft.SharePoint.SPListTemplate)">
            <summary>
            Creates a list under the specified site if no list exists at the given URL.
            </summary>
            <param name="web">A site object.</param>
            <param name="title">Title of the list to create.</param>
            <param name="webRelativeUrl">URL of the list to create at.</param>
            <param name="templateType">List template.</param>
            <returns>Existing or newly created list object.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.EnsureSubFolder(Microsoft.SharePoint.SPFolder,System.String)">
            <summary>
            Creates a sub-folder of the specified name if it does not exists.
            </summary>
            <param name="folder">Parent folder.</param>
            <param name="name">Name of sub-folder to create.</param>
            <returns>Existing or newly created folder object.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.GetFileSafe(Microsoft.SharePoint.SPWeb,System.String)">
            <summary>
            Returns the file object located at the specified URL.
            </summary>
            <param name="web">A site.</param>
            <param name="strUrl">A string that contains the URL for the file.</param>
            <returns>An <see cref="T:Microsoft.SharePoint.SPFile"/> object that represents the file; -or- *null* if the file does not exists.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.GetFolderSafe(Microsoft.SharePoint.SPWeb,System.String)">
            <summary>
            Returns the folder object located at the specified URL.
            </summary>
            <param name="web">A site.</param>
            <param name="strUrl">A string that contains the URL for the folder.</param>
            <returns>An <see cref="T:Microsoft.SharePoint.SPFolder"/> object that represents the folder; -or- *null* if the folder does not exists.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.GetFileOrFolderObjectSafe(Microsoft.SharePoint.SPWeb,System.String)">
            <summary>
            Returns a file or folder on the Web site with the specified URL.
            </summary>
            <param name="web">A site.</param>
            <param name="strUrl">A string that contains the URL of the file or folder.</param>
            <returns>An <see cref="T:Microsoft.SharePoint.SPFile"/> or <see cref="T:Microsoft.SharePoint.SPFolder"/> object that represents the file or folder; -or- *null* if the file or folder does not exists.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.GetFileOrFolder(Microsoft.SharePoint.SPSite,System.String)">
            <summary>
            Gets an <see cref="T:Microsoft.SharePoint.SPFile"/> or <see cref="T:Microsoft.SharePoint.SPFolder"/> object at the specfied URL.
            </summary>
            <param name="site">A site collection.</param>
            <param name="strUrl">Server-relatve or site-collection-relative URL.</param>
            <returns>An <see cref="T:Microsoft.SharePoint.SPFile"/> or <see cref="T:Microsoft.SharePoint.SPFolder"/> object, or *null* if the specified URL does not exist.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.GetAllFiles(Microsoft.SharePoint.SPFolder)">
            <summary>
            Iterates all files under the specified folder.
            </summary>
            <param name="folder">An <see cref="T:Microsoft.SharePoint.SPFolder"/> object.</param>
            <returns>An enumerable of all files under the specified folder.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.EnsureApproved(Microsoft.SharePoint.SPListItem)">
            <summary>
            Ensures the specified list item are approved. If the list item is under list folders, all parent folders are also approved.
            </summary>
            <param name="item">A list item.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.EnsureApproved(Microsoft.SharePoint.SPListItem,System.String)">
            <summary>
            Ensures the specified list item are approved. If the list item is under list folders, all parent folders are also approved.
            </summary>
            <param name="item">A list item.</param>
            <param name="comment">Comment message.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.EnsureApproved(Microsoft.SharePoint.SPFolder)">
            <summary>
            Ensures the specified folder and all parent folders are approved.
            </summary>
            <param name="folder">An <see cref="T:Microsoft.SharePoint.SPFolder"/> object.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.EnsureApproved(Microsoft.SharePoint.SPFolder,System.String)">
            <summary>
            Ensures the specified folder and all parent folders are approved.
            </summary>
            <param name="folder">An <see cref="T:Microsoft.SharePoint.SPFolder"/> object.</param>
            <param name="comment">Comment message.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.EnsurePublished(Microsoft.SharePoint.SPFile,System.String)">
            <summary>
            Ensures the specified file is published.
            </summary>
            <param name="file">An <see cref="T:Microsoft.SharePoint.SPFile"/> object.</param>
            <param name="comment">Comment message.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.GetCheckOutScope(Microsoft.SharePoint.SPFile,System.Boolean)">
            <summary>
            Ensures the specified file is checked out to the current user before performing edit operation, and optionally publish the file on dispose.
            </summary>
            <param name="file">An <see cref="T:Microsoft.SharePoint.SPFile"/> object.</param>
            <param name="publishOnDispose">Whether to publish the file on dispose.</param>
            <returns>An <see cref="T:System.IDisposable"/> object.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.GetCheckOutScope(Microsoft.SharePoint.SPFile,System.Boolean,System.String)">
            <summary>
            Ensures the specified file is checked out to the current user before performing edit operation, and optionally publish the file on dispose.
            </summary>
            <param name="file">An <see cref="T:Microsoft.SharePoint.SPFile"/> object.</param>
            <param name="publishOnDispose">Whether to publish the file on dispose.</param>
            <param name="checkInComment">Comment message.</param>
            <returns>An <see cref="T:System.IDisposable"/> object.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.EnableScheduledPublishing(Microsoft.SharePoint.SPList)">
            <summary>
            Enables scheduled publishing on the given list.
            </summary>
            <param name="targetList">List object.</param>
            <exception cref="T:System.MissingMethodException">Throws when the private static method ScheduledItem.RegisterSchedulingEventOnList does not exist.</exception>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.EnsureEventReceiver(Microsoft.SharePoint.SPEventReceiverDefinitionCollection,Microsoft.SharePoint.SPEventReceiverType,System.Type)">
            <summary>
            Determines whether a event receiver of the specified class is registered.
            If it does not, registers a event receiver with the given event receiver class.
            </summary>
            <param name="collection"></param>
            <param name="receiverType"></param>
            <param name="type"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">Throws when input parameter <paramref name="type"/> is null.</exception>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.EnsureEventReceiver(Microsoft.SharePoint.SPEventReceiverDefinitionCollection,Microsoft.SharePoint.SPEventReceiverType,System.Type,Microsoft.SharePoint.SPEventReceiverSynchronization)">
            <summary>
            Determines whether a event receiver of the specified class is registered.
            If it does not, registers a event receiver with the given event receiver class.
            </summary>
            <param name="collection"></param>
            <param name="receiverType"></param>
            <param name="type"></param>
            <param name="synchronization"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">Throws when input parameter <paramref name="type"/> is null.</exception>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.GetAssociationByBaseIDSafe(Microsoft.SharePoint.Workflow.SPWorkflowAssociationCollection,System.Guid)">
            <summary>
            Gets the workflow association with the given workflow GUID from a workflow association collection.
            </summary>
            <param name="collection">Workflow association collection object.</param>
            <param name="workflowBaseId">The GUID of a workflow.</param>
            <returns>The workflow association object that associates the specified workflow.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.EnsureWorkflowAssociation(Microsoft.SharePoint.SPList,System.Guid)">
            <summary>
            Determines whether a workflow with the given GUID is associated with the given list.
            If it does not, associates that workflow with the given list.
            </summary>
            <param name="list">List object.</param>
            <param name="workflowBaseId">The GUID of a workflow.</param>
            <returns>The workflow association object that associates the specified workflow and the given list.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.EnsureWorkflowAssociation(Microsoft.SharePoint.SPContentType,System.Guid)">
            <summary>
            Determines whether a workflow with the given GUID is associated with the given content type.
            If it does not, associates that workflow with the given content type.
            </summary>
            <param name="contentType">Content type object.</param>
            <param name="workflowBaseId">The GUID of a workflow.</param>
            <returns>The workflow association object that associates the specified workflow and the given content type.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.StartWorkflow(Microsoft.SharePoint.SPListItem,System.Guid,System.String)">
            <summary>
            Starts the specified workflow on the list item that is associated to the parent list.
            </summary>
            <param name="listItem">A list item to start workflow with.</param>
            <param name="workflowBaseId">A GUID specifying the workflow.</param>
            <param name="data">A string containing custom data.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.GetActiveWorkflow(Microsoft.SharePoint.SPListItem,System.Guid)">
            <summary>
            Gets a running workflow instance of the specified workflow associated with the list item.
            </summary>
            <param name="listItem">A list item.</param>
            <param name="workflowBaseId">A GUID specifying the workflow.</param>
            <returns>A instance of the <see cref="T:Microsoft.SharePoint.Workflow.SPWorkflow"/> type that represents the workflow; -or- *null* if there is no running instance of the specified workflow.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.GetSiteMemberByID(Microsoft.SharePoint.SPWeb,System.Int32)">
            <summary>
            Gets the user or group with the specified member ID.
            </summary>
            <param name="web">Site object.</param>
            <param name="id">Member ID.</param>
            <returns>A <see cref="T:Microsoft.SharePoint.SPPrincipal"/> object that represents either the specified user or group; -or- *null* if there is no member with the specified member ID.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.EnsureGroup(Microsoft.SharePoint.SPWeb,System.String)">
            <summary>
            Determines whether a SharePoint group with the given name exists.
            If it does not, creates a new SharePoint group with the given name.
            </summary>
            <param name="web">Site object.</param>
            <param name="name">Group name.</param>
            <returns>SharePoint group object with the given name.</returns>
            <exception cref="T:System.ArgumentNullException">Throws when input parameter <paramref name="name"/> is null.</exception>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.EnsureCustomRoleDefinition(Microsoft.SharePoint.SPSite,System.String,Microsoft.SharePoint.SPBasePermissions)">
            <summary>
            Determines whether a role with the given name exists and its permissions is set to be the given set.
            If it does not, creates a new role with the given name and/or sets its permissions to the specified set.
            </summary>
            <param name="site">Site collection object.</param>
            <param name="name">Role name.</param>
            <param name="permissions">Permission granted for this role.</param>
            <returns>Role definition name with the given name.</returns>
            <exception cref="T:System.ArgumentNullException">Throws when input parameter <paramref name="name"/> is null.</exception>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.EnsureCustomRoleDefinition(Microsoft.SharePoint.SPSite,System.String,Microsoft.SharePoint.SPRoleType,Microsoft.SharePoint.SPBasePermissions)">
            <summary>
            Determines whether a role with the given name exists and its permissions is set to be the given set.
            If it does not, creates a new role with the given name and/or sets its permissions to the specified set.
            The associated permission set is the union of that of built-in permission role and the additional permissions specified by <paramref name="permissions"/>.
            </summary>
            <param name="site">Site collection object.</param>
            <param name="name">Role name.</param>
            <param name="roleType">Built-in role which its permission set is inherited.</param>
            <param name="permissions">Additional permissions.</param>
            <returns>Role definition name with the given name.</returns>
            <exception cref="T:System.ArgumentNullException">Throws when input parameter <paramref name="name"/> is null.</exception>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.GrantPermission(Microsoft.SharePoint.SPSecurableObject,Microsoft.SharePoint.SPPrincipal,Microsoft.SharePoint.SPRoleDefinition)">
            <summary>
            Grants specified role to a user for a given object.
            </summary>
            <param name="obj">Securable object which permission can be uniquely assigned.</param>
            <param name="principal">User object.</param>
            <param name="role">Role to be granted.</param>
            <exception cref="T:System.ArgumentNullException">Throws when input parameter <paramref name="principal"/> or <paramref name="role"/> is null.</exception>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.GrantPermission(Microsoft.SharePoint.SPSecurableObject,Microsoft.SharePoint.SPPrincipal,Microsoft.SharePoint.SPRoleDefinition,System.Boolean)">
            <summary>
            Grants specified role to a user for a given object, optionally removes existing roles.
            </summary>
            <param name="obj">Securable object which permission can be uniquely assigned.</param>
            <param name="principal">User object.</param>
            <param name="role">Role to be granted.</param>
            <param name="removeExistingPermissions">Whether to remove existing roles from the user.</param>
            <exception cref="T:System.ArgumentNullException">Throws when input parameter <paramref name="principal"/> or <paramref name="role"/> is null.</exception>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.RemovePermission(Microsoft.SharePoint.SPSecurableObject,Microsoft.SharePoint.SPPrincipal,Microsoft.SharePoint.SPRoleDefinition)">
            <summary>
            Removes specified role from a user for a given object.
            </summary>
            <param name="obj">Securable object which permission can be uniquely assigned.</param>
            <param name="principal">User object.</param>
            <param name="role">Role to be removed.</param>
            <exception cref="T:System.ArgumentNullException">Throws when input parameter <paramref name="principal"/> or <paramref name="role"/> is null.</exception>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.CopyPermissions(Microsoft.SharePoint.SPSecurableObject,Microsoft.SharePoint.SPSecurableObject)">
            <summary>
            Copies permissions from one securable object to another.
            </summary>
            <param name="obj">Source object of which permissions to be copied.</param>
            <param name="other">Target object to which permissions are copied.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.RemoveLimitedAccessBindings(Microsoft.SharePoint.SPRoleAssignmentCollection)">
            <summary>
            Removes role assignments that only contains the *Limited Access* role.
            </summary>
            <param name="collection">Role assignment collection object.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.GetEffectivePermissions(Microsoft.SharePoint.SPRoleAssignment)">
            <summary>
            Computes the permissions granted by a given role assignment.
            </summary>
            <param name="assignment">Role assignment object.</param>
            <returns>Permission granted by the given role assignment.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.GetMembersWithPermissions(Microsoft.SharePoint.SPSecurableObject,Microsoft.SharePoint.SPBasePermissions)">
            <summary>
            Gets a collection of users or groups that are granted the specified permissions on the specified securable object.
            </summary>
            <param name="obj">Securable object.</param>
            <param name="permissions">A bitmask value representing required permissions.</param>
            <returns>A enumerable collection of users or groups that are granted the specified permissions.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.IsMembershipOfCurrentUser(Microsoft.SharePoint.SPPrincipal)">
            <summary>
            Determines whether current logon user is the specified user or belongs to the specified SharePoint/AD group.
            </summary>
            <param name="member">SharePoint user or group.</param>
            <returns>*true* if the current logon user is the specified user or belongs to the specified SharePoint/AD group.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.IsBuiltIn(Microsoft.SharePoint.SPField)">
            <summary>
            Determines whether a field is built-in.
            </summary>
            <param name="field">Field object to be checked.</param>
            <returns>*true* if the given field is built-in.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.IsSystemField(Microsoft.SharePoint.SPField)">
            <summary>
            Determines whether a field is system built-in, by checking the ColName in SchemaXml 
            </summary>
            <param name="field">Field object to be checked.</param>
            <returns>*true* if the given field is system field (not user data).</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.SetTermAnchor(Microsoft.SharePoint.Taxonomy.TaxonomyField,Microsoft.SharePoint.Taxonomy.TermSetItem)">
            <summary>
            Sets the anchor <see cref="T:Microsoft.SharePoint.Taxonomy.Term"/> or <see cref="T:Microsoft.SharePoint.Taxonomy.TermSet"/> object for a <see cref="T:Microsoft.SharePoint.Taxonomy.TaxonomyField"/> object.
            </summary>
            <param name="field">Taxonomy field object.</param>
            <param name="term">Term or term set object.</param>
            <exception cref="T:System.ArgumentNullException">Throws when input parameter <paramref name="term"/> is null.</exception>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.GetTermAnchor(Microsoft.SharePoint.Taxonomy.TaxonomyField,Microsoft.SharePoint.Taxonomy.TaxonomySession)">
            <summary>
            Gets the anchor <see cref="T:Microsoft.SharePoint.Taxonomy.Term"/> or <see cref="T:Microsoft.SharePoint.Taxonomy.TermSet"/> object for a <see cref="T:Microsoft.SharePoint.Taxonomy.TaxonomyField"/> object.
            </summary>
            <param name="field">Taxonomy field object.</param>
            <param name="session">Taxonomy session object.</param>
            <returns>The anchor term or term set.</returns>
            <exception cref="T:System.ArgumentNullException">Throws when input parameter <paramref name="session"/> is null.</exception>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.UpdateTaxonomyFieldValue(Microsoft.SharePoint.Taxonomy.TaxonomyField)">
            <summary>
            Updated values of the given taxonomy field.
            </summary>
            <param name="taxonomyField">Taxonomy field object.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.EnsureTermSet(Microsoft.SharePoint.Taxonomy.TermStore,System.Guid,System.String,System.String)">
            <summary>
            Determines whether a <see cref="T:Microsoft.SharePoint.Taxonomy.TermSet"/> object with the given GUID exists in the term store.
            If it does not, it creates a term set with the given term set name under the specified group.
            </summary>
            <param name="termStore">Term store object.</param>
            <param name="uniqueId">Term set GUID.</param>
            <param name="groupName">Default group name.</param>
            <param name="termSetName">Default term set name.</param>
            <returns>The <see cref="T:Microsoft.SharePoint.Taxonomy.TermSet"/> object with the given GUID.</returns>
            <exception cref="T:System.ArgumentNullException">Throws when input parameter <paramref name="groupName"/> or <paramref name="termSetName"/> is null.</exception>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.EnsureTerm(Microsoft.SharePoint.Taxonomy.TermSet,System.String)">
            <summary>
            Determines whether a <see cref="T:Microsoft.SharePoint.Taxonomy.Term"/> object with the given label exists under a <see cref="T:Microsoft.SharePoint.Taxonomy.TermSet"/> object.
            If it does not, it creates a term with the given label.
            </summary>
            <param name="termSet">Taxonomy term set object.</param>
            <param name="label">Label to match.</param>
            <returns>The <see cref="T:Microsoft.SharePoint.Taxonomy.Term"/> object matching the condition.</returns>
            <exception cref="T:System.ArgumentNullException">Throws when input parameter <paramref name="label"/> is null.</exception>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.EnsureTermWithCustomProperty(Microsoft.SharePoint.Taxonomy.TermSet,System.String,System.String,System.String)">
            <summary>
            Determines whether a <see cref="T:Microsoft.SharePoint.Taxonomy.Term"/> object having the specified custom property and value exists under a <see cref="T:Microsoft.SharePoint.Taxonomy.TermSet"/> object.
            If it does not, it creates a term with the given default label.
            </summary>
            <param name="termSet">Taxonomy term set object.</param>
            <param name="key">Custom property name.</param>
            <param name="value">Custom property value to match.</param>
            <param name="defaultLabel">Default label used in creating new term.</param>
            <returns>The <see cref="T:Microsoft.SharePoint.Taxonomy.Term"/> object matching the condition.</returns>
            <exception cref="T:System.ArgumentNullException">Throws when input parameter <paramref name="key"/>, <paramref name="value"/> or <paramref name="defaultLabel"/> is null.</exception>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.GetReusedTermsAndSelf(Microsoft.SharePoint.Taxonomy.Term)">
            <summary>
            Gets all <see cref="T:Microsoft.SharePoint.Taxonomy.Term"/> objects that are reused from the given term. The given term is also included in the returned list.
            </summary>
            <param name="term">Taxonomy term object.</param>
            <returns>A list of <see cref="T:Microsoft.SharePoint.Taxonomy.Term"/> objects reused across the term store.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.GetAncestorsAndSelf(Microsoft.SharePoint.Taxonomy.Term)">
            <summary>
            Gets a list of terms which are ancestors of the given <see cref="T:Microsoft.SharePoint.Taxonomy.Term"/> object. The given term is also included in the returned list.
            </summary>
            <param name="term">Taxonomy term object.</param>
            <returns>A list of terms.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.GetWssIds(Microsoft.SharePoint.Taxonomy.Term,Microsoft.SharePoint.SPSite,System.Boolean)">
            <summary>
            Gets the lookup ID for a <see cref="T:Microsoft.SharePoint.Taxonomy.Term"/> object under a specified site collection, 
            optionally along with the lookup IDs for descendant terms.
            </summary>
            <param name="term">Taxonomy term object.</param>
            <param name="site">Site collection object.</param>
            <param name="includeDescendants">Whether to include lookup IDs for descendant terms</param>
            <returns>A list of lookup IDs.</returns>
            <exception cref="T:System.ArgumentNullException">Throws when input parameter <paramref name="site"/> is null.</exception>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.EnsureWssId(Microsoft.SharePoint.Taxonomy.Term,Microsoft.SharePoint.SPSite,System.Boolean)">
            <summary>
            Gets the lookup ID for a <see cref="T:Microsoft.SharePoint.Taxonomy.Term"/> object under a specified site collection.
            If there is no lookup ID corresponds to the term, a new one is created.
            </summary>
            <param name="term">Taxonomy term object.</param>
            <param name="site">Site collection object.</param>
            <param name="isKeywordField">Whether the term is used under the Enterprise Keyword column.</param>
            <returns>Lookup ID of the given term.</returns>
            <exception cref="T:System.ArgumentNullException">Throws when input parameter <paramref name="site"/> is null.</exception>
            <exception cref="T:System.MissingMethodException">Throws when the private static method TaxonomyField.AddTaxonomyGuidToWss does not exist.</exception>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.GetTermByWssId(Microsoft.SharePoint.Taxonomy.TermStore,Microsoft.SharePoint.SPSite,System.Int32)">
            <summary>
            Gets the term associated with the given lookup ID for the specified site collection.
            </summary>
            <param name="termStore">Term store object.</param>
            <param name="site">Site collection object.</param>
            <param name="wssId">Looup ID.</param>
            <returns></returns>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.WriteTrace(Microsoft.SharePoint.Administration.SPDiagnosticsService,Microsoft.SharePoint.Administration.SPDiagnosticsCategory,System.String)">
            <summary>
            Write verbose information to ULS log.
            </summary>
            <param name="diagnosticsService">An <see cref="T:Microsoft.SharePoint.Administration.SPDiagnosticsService"/> instance.</param>
            <param name="traceCategory">Trace category.</param>
            <param name="message">Message to be logged.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.WriteTrace(Microsoft.SharePoint.Administration.SPDiagnosticsService,System.String,System.Exception)">
            <summary>
            Write exception information to ULS log. Stack trace of inner exceptions are also logged.
            </summary>
            <param name="diagnosticsService">An <see cref="T:Microsoft.SharePoint.Administration.SPDiagnosticsService"/> instance.</param>
            <param name="traceCategory">Trace category.</param>
            <param name="ex">Exception to be logged.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPExtension.WriteTrace(Microsoft.SharePoint.Administration.SPDiagnosticsService,Microsoft.SharePoint.Administration.SPDiagnosticsCategory,System.Exception)">
            <summary>
            Write exception information to ULS log. Stack trace of inner exceptions are also logged.
            </summary>
            <param name="diagnosticsService">An <see cref="T:Microsoft.SharePoint.Administration.SPDiagnosticsService"/> instance.</param>
            <param name="traceCategory">Trace category.</param>
            <param name="ex">Exception to be logged.</param>
        </member>
        <member name="T:Codeless.SharePoint.SPItemEventDataCollectionAdapter">
            <summary>
            Provides field value accessors to an <see cref="T:Microsoft.SharePoint.SPItemEventProperties"/> instance.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.SPItemEventDataCollectionAdapter.#ctor(Microsoft.SharePoint.SPItemEventProperties)">
            <summary>
            Creates an adapter.
            </summary>
            <param name="properties">An <see cref="T:Microsoft.SharePoint.SPItemEventProperties"/> object.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPItemEventDataCollectionAdapter.#ctor(Microsoft.SharePoint.SPItemEventProperties,Codeless.SharePoint.SPObjectCache)">
            <summary>
            Creates an adapter with the given object cache.
            </summary>
            <param name="properties">An <see cref="T:Microsoft.SharePoint.SPItemEventProperties"/> object.</param>
            <param name="objectCache">Object cache.</param>
        </member>
        <member name="P:Codeless.SharePoint.SPItemEventDataCollectionAdapter.Item(System.String)">
            <summary>
            Gets or sets values to the specified column.
            </summary>
            <param name="name">Field name.</param>
            <returns>Value of the specified column.</returns>
        </member>
        <member name="P:Codeless.SharePoint.SPItemEventDataCollectionAdapter.Filename">
            <summary>
            Overriden.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPItemEventDataCollectionAdapter.ServerRelativeUrl">
            <summary>
            Gets the server-relative URL of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPItemEventDataCollectionAdapter.Site">
            <summary>
            Gets the site collection associated with the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPItemEventDataCollectionAdapter.Web">
            <summary>
            Gets the parent site of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPItemEventDataCollectionAdapter.WebId">
            <summary>
            Gets the parent site ID of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPItemEventDataCollectionAdapter.ListId">
            <summary>
            Gets the parent list ID of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPItemEventDataCollectionAdapter.ListItemId">
            <summary>
            Gets the list item ID of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPItemEventDataCollectionAdapter.ListItem">
            <summary>
            Gets the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPItemEventDataCollectionAdapter.EffectivePermissions">
            <summary>
            Gets the permissions of the list item represented by the adapter which is granted to the current user.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.SPItemEventDataCollectionAdapter.HasField(System.String)">
            <summary>
            Determines whether the specified field is included in the data set.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>Returns *true* if the specified field is included in the data set.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPItemEventDataCollectionAdapter.GetBoolean(System.String)">
            <summary>
            Gets value from a boolean field.
            If the field does not contain value or the string representation of the value does not form a boolean value, default value is returned.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>Value in the specified field.</returns>
        </member>
        <member name="T:Codeless.SharePoint.SPItemEventHelper">
            <summary>
            Provides helper methods to SharePoint event handling.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.SPItemEventHelper.GetEventFiringDisabledScope">
            <summary>
            Disables event firing and restores current settings when disposed.
            </summary>
            <returns>A disposble object.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPItemEventHelper.GetEventFiringEnabledScope">
            <summary>
            Enables event firing and restores current settings when disposed.
            </summary>
            <returns>A disposble object.</returns>
        </member>
        <member name="P:Codeless.SharePoint.SPItemEventHelper.IsWorkflowFiredEvent">
            <summary>
            Returns *true* if the current event is fired inside workflow; otherwise *false*.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPItemEventHelper.IsNestedItemEvent">
            <summary>
            Returns *true* if the current event is fired by another event; otherwise *false*.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.SPListCacheDependency">
            <summary>
            Establishes a dependency relationship between an item stored in an ASP.NET application's <see cref="T:System.Web.Caching.Cache"/> object, and a SharePoint list.
            When a list item is created, updated or deleted under the supplied list, or the list itself is deleted, the cached item will be automatically removed.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.SPListCacheDependency.#ctor(Microsoft.SharePoint.SPList)">
            <summary>
            Initialize a new instance of the <see cref="T:Codeless.SharePoint.SPListCacheDependency"/> class that monitors a SharePoint list.
            </summary>
            <param name="list">SharePoint list instance.</param>
            <exception cref="T:System.ArgumentNullException">Throws when input parameter <paramref name="list"/> is null.</exception>
        </member>
        <member name="M:Codeless.SharePoint.SPListCacheDependency.#ctor(Microsoft.SharePoint.SPList,System.Double)">
            <summary>
            Initialize a new instance of the <see cref="T:Codeless.SharePoint.SPListCacheDependency"/> class that monitors a SharePoint list, with the specified monitoring interval.
            </summary>
            <param name="list">SharePoint list instance.</param>
            <param name="interval">Monitoring interval.</param>
            <exception cref="T:System.ArgumentNullException">Throws when input parameter <paramref name="list"/> is null.</exception>
        </member>
        <member name="M:Codeless.SharePoint.SPListCacheDependency.GetUniqueID">
            <summary>
            Retrieves a unique identifier for a <see cref="T:System.Web.Caching.CacheDependency"/> object.
            </summary>
            <returns>The unique identifier for the <see cref="T:System.Web.Caching.CacheDependency"/> object.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPListCacheDependency.DependencyDispose">
            <summary>
            Overriden.
            </summary>
        </member>
        <member name="T:Codeless.SharePoint.SPListItemAdapter">
            <summary>
            Provides field value accessors to list item.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.SPListItemAdapter.#ctor(Microsoft.SharePoint.SPListItem)">
            <summary>
            Creates an adapter.
            </summary>
            <param name="item">List item.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPListItemAdapter.#ctor(Microsoft.SharePoint.SPListItem,Codeless.SharePoint.SPObjectCache)">
            <summary>
            Creates an adapter with the given object cache.
            </summary>
            <param name="item">List item.</param>
            <param name="objectCache">Object cache.</param>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemAdapter.Item(System.String)">
            <summary>
            Gets or sets values to the specified column.
            </summary>
            <param name="name">Field name.</param>
            <returns>Value of the specified column.</returns>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemAdapter.Title">
            <summary>
            Gets the title of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemAdapter.ServerRelativeUrl">
            <summary>
            Gets the server-relative URL of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemAdapter.Site">
            <summary>
            Gets the site collection associated with the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemAdapter.Web">
            <summary>
            Gets the parent site of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemAdapter.UniqueId">
            <summary>
            Gets the unique ID of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemAdapter.WebId">
            <summary>
            Gets the parent site ID of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemAdapter.ListId">
            <summary>
            Gets the parent list ID of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemAdapter.ListItemId">
            <summary>
            Gets the list item ID of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemAdapter.ListItem">
            <summary>
            Gets the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemAdapter.ContentTypeId">
            <summary>
            Gets the content type ID of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemAdapter.EffectivePermissions">
            <summary>
            Gets the permissions of the list item represented by the adapter which is granted to the current user.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.SPListItemAdapter.HasField(System.String)">
            <summary>
            Determines whether the specified field is included in the data set.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>Returns *true* if the specified field is included in the data set.</returns>
        </member>
        <member name="T:Codeless.SharePoint.SPListItemAdapterBase">
            <summary>
            Provides a base class to implement value accessors to different classes representing a list item.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.SPListItemAdapterBase.#ctor">
            <summary>
            Creates an adapter.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.SPListItemAdapterBase.#ctor(Codeless.SharePoint.SPObjectCache)">
            <summary>
            Creates an adapter with the given object cache.
            </summary>
            <param name="objectCache">Object cache.</param>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemAdapterBase.Item(System.String)">
            <summary>
            When overriden in derived classes, gets or sets values to the specified column.
            </summary>
            <param name="name">Field name.</param>
            <returns>Value of the specified column.</returns>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemAdapterBase.ObjectCache">
            <summary>
            Gets the object cache set for the adapter. If the adapter is instantiated using default constructor, a new object cache instance is created.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemAdapterBase.Title">
            <summary>
            Gets the title of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemAdapterBase.Filename">
            <summary>
            Gets the filename of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemAdapterBase.ServerRelativeUrl">
            <summary>
            Gets the server-relative URL of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemAdapterBase.Site">
            <summary>
            When overriden in derived classes, gets the site collection associated with the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemAdapterBase.Web">
            <summary>
            When overriden in derived classes, gets the parent site of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemAdapterBase.UniqueId">
            <summary>
            Gets the unique ID of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemAdapterBase.WebId">
            <summary>
            When overriden in derived classes, gets the parent site ID of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemAdapterBase.ListId">
            <summary>
            When overriden in derived classes, gets the parent list ID of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemAdapterBase.ListItemId">
            <summary>
            When overriden in derived classes, gets the list item ID of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemAdapterBase.ListItem">
            <summary>
            When overriden in derived classes, gets the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemAdapterBase.ContentTypeId">
            <summary>
            Gets the content type ID of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemAdapterBase.LastModified">
            <summary>
            Gets the last modified time of the list item represented by the adapter.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemAdapterBase.EffectivePermissions">
            <summary>
            Gets the permissions of the list item represented by the adapter which is granted to the current user.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.SPListItemAdapterBase.Version">
            <summary>
            Gets the version number of the list item.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.SPListItemAdapterBase.HasField(System.String)">
            <summary>
            When overidden, determines whether the specified field is included in the data set.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>Returns *true* if the specified field is included in the data set.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPListItemAdapterBase.GetString(System.String)">
            <summary>
            Gets value from a text field, such as Text, Note and Publishing HTML field.
            If the field does not contain value, an empty string is returned.
            If the field is not a text column, a string representation of the value is returned.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>Value in the specified field as a string.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPListItemAdapterBase.GetInteger(System.String)">
            <summary>
            Gets value from an integer field.
            If the field does not contain value or the string representation of the value does not form an integer value, default value is returned.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>Value in the specified field as an integer.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPListItemAdapterBase.GetNumber(System.String)">
            <summary>
            Gets value from a numeric field, such as Integer, Number and Currency field.
            If the field does not contain value or the string representation of the value does not form a double-precision value, default value is returned.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>Value in the specified field as a double.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPListItemAdapterBase.GetBoolean(System.String)">
            <summary>
            Gets value from a boolean field.
            If the field does not contain value or the string representation of the value does not form a boolean value, default value is returned.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>Value in the specified field as a boolean.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPListItemAdapterBase.GetGuid(System.String)">
            <summary>
            Gets value from a GUID field.
            If the field does not contain value or the string representation of the value does not form a GUID value, default value is returned.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>Value in the specified field as a GUID.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPListItemAdapterBase.GetDateTime(System.String)">
            <summary>
            Gets value from a DateTime field.
            If the field does not contain value, *null* is returned.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>Value in the specified field as a <see cref="T:System.DateTime"/> object.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPListItemAdapterBase.GetEnum``1(System.String)">
            <summary>
            Gets value from an Integer, Text, Choice or MultiChoice field and returns as the equivalent value of the enum type.
            For a MultiChoice field, the returned value is the bitwise OR result of the enum values represented by each selected choice.
            </summary>
            <typeparam name="TEnum">Enum type.</typeparam>
            <param name="fieldName">Field name.</param>
            <returns>Value in the specified field as an enum.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPListItemAdapterBase.GetTaxonomy(System.String,Microsoft.SharePoint.Taxonomy.TermStore)">
            <summary>
            Gets a <see cref="T:Microsoft.SharePoint.Taxonomy.Term"/> object from a Taxonomy field.
            </summary>
            <param name="fieldName">Field name.</param>
            <param name="termStore">Term store object.</param>
            <returns>Value in the specified field as a <see cref="T:Microsoft.SharePoint.Taxonomy.Term"/> object.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPListItemAdapterBase.GetTaxonomyMultiInternal(System.String,Microsoft.SharePoint.Taxonomy.TermStore)">
            <summary>
            Gets a collection of <see cref="T:Microsoft.SharePoint.Taxonomy.Term"/> objects from a multiple Taxonomy field.
            </summary>
            <param name="fieldName">Field name.</param>
            <param name="termStore">Term store object.</param>
            <returns>A collection of <see cref="T:Microsoft.SharePoint.Taxonomy.Term"/> objects.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPListItemAdapterBase.GetUrlFieldValue(System.String)">
            <summary>
            Gets value from a URL field where URL returned can be absolute or relative.
            The URL is normalized to a server-relative path if it points to the same SharePoint web application.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>Value in the specified field.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPListItemAdapterBase.GetLookupFieldValue(System.String)">
            <summary>
            Gets a lookup value from a Lookup field.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>Value in the specified field.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPListItemAdapterBase.GetMultiLookupFieldValueInternal(System.String)">
            <summary>
            Gets a collection of lookup values from a multiple Lookup field.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>A collection of lookup values.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPListItemAdapterBase.GetUserFieldValue(System.String)">
            <summary>
            Gets an <see cref="T:Microsoft.SharePoint.SPPrincipal"/> object from a User field.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>An <see cref="T:Microsoft.SharePoint.SPPrincipal"/> object.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPListItemAdapterBase.GetMultiUserFieldValueInternal(System.String)">
            <summary>
            Gets a collection of <see cref="T:Microsoft.SharePoint.SPPrincipal"/> objects from a multiple User field.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>A collection of <see cref="T:Microsoft.SharePoint.SPPrincipal"/> objects.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPListItemAdapterBase.GetModel``1(System.String,Codeless.SharePoint.ObjectModel.SPModelCollection)">
            <summary>
            Gets a model object from a Lookup field.
            The same instance representing the same foreign list item is returned when the same <paramref name="parentCollection"/> is supplied.
            </summary>
            <typeparam name="T">Type of model object.</typeparam>
            <param name="fieldName">Field name.</param>
            <param name="parentCollection">An <see cref="T:Codeless.SharePoint.ObjectModel.SPModelCollection"/> object where the returned model object is cached in the collection.</param>
            <returns>Value in the specified field represented by a model object.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPListItemAdapterBase.GetModelCollectionInternal``1(System.String,Codeless.SharePoint.ObjectModel.SPModelCollection)">
            <summary>
            Gets a collection of model objects from a Lookup field.
            The same instance representing the same foreign list item is returned when the same <paramref name="parentCollection"/> is supplied.
            </summary>
            <typeparam name="T">Type of model object.</typeparam>
            <param name="fieldName">Field name.</param>
            <param name="parentCollection">An <see cref="T:Codeless.SharePoint.ObjectModel.SPModelCollection"/> object where the returned model object is cached in the collection.</param>
            <returns>A collection of model objects.</returns>
        </member>
        <member name="M:Codeless.SharePoint.SPListItemAdapterBase.SetBoolean(System.String,System.Boolean)">
            <summary>
            Sets value to a boolean field.
            </summary>
            <param name="fieldName">Field name.</param>
            <param name="value">A boolean value to set.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPListItemAdapterBase.SetInteger(System.String,System.Int32)">
            <summary>
            Sets value to an integer field.
            </summary>
            <param name="fieldName">Field name.</param>
            <param name="value">An integer value to set.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPListItemAdapterBase.SetNumber(System.String,System.Double)">
            <summary>
            Sets value to a numeric field, such as Integer, Number and Currency field.
            </summary>
            <param name="fieldName">Field name.</param>
            <param name="value">A double value to set.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPListItemAdapterBase.SetString(System.String,System.String)">
            <summary>
            Sets value to a text field, such as Text, Note and Publishing HTML field.
            </summary>
            <param name="fieldName">Field name.</param>
            <param name="value">A string value to set.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPListItemAdapterBase.SetGuid(System.String,System.Guid)">
            <summary>
            Sets value to a GUID field.
            </summary>
            <param name="fieldName">Field name.</param>
            <param name="value">A GUID value to set.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPListItemAdapterBase.SetDateTime(System.String,System.Nullable{System.DateTime})">
            <summary>
            Sets value to a DateTime field.
            </summary>
            <param name="fieldName">Field name.</param>
            <param name="value">A <see cref="T:System.DateTime"/> object representing the date to set; or *null* to empty the field.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPListItemAdapterBase.SetEnum``1(System.String,``0)">
            <summary>
            Sets value to an Integer, Text, Choice or MultiChoice field with the equivalent representation of the enum value.
            For a MultiChoice field, the value set is the collection of choices representating each bit that is set to 1.
            </summary>
            <typeparam name="T">Enum type.</typeparam>
            <param name="fieldName">Field name.</param>
            <param name="value">A enum value to set.</param>
        </member>
        <member name="M:Codeless.SharePoint.SPListItemAdapterBase.SetTaxonomy(System.String,Microsoft.SharePoint.Taxonomy.Term)">
            <summary>
            Sets value to a Taxonomy field.
            </summary>
            <param name="fieldName">Field name.</param>
            <param name="value">A <see cref="T:Microsoft.SharePoint.Taxonomy.Term"/> object to set.</param>
        </member>
        <member name="T:Codeless.SharePoint.PrincipalInfo">
            <summary>
            Provides information of identities resolved from SharePoint users and groups.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.PrincipalInfo.ObjectType">
            <summary>
            Gets the type of the underlying object representing the resolved identity.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.PrincipalInfo.ProviderUserId">
            <summary>
            Gets a unique identifier of the resolved identity used by the identity provider.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.PrincipalInfo.ProviderType">
            <summary>
            Gets the type of provider that resolve this user. 
            See members of <see cref="T:Microsoft.SharePoint.Administration.Claims.SPIdentityProviderTypes"/> for possible values.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.PrincipalInfo.EncodedClaim">
            <summary>
            Gets the encoded claim-based logon name on SharePoint for the resolved principal.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.PrincipalInfo.DisplayName">
            <summary>
            Gets the display name of the resolved identity.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.PrincipalInfo.EmailAddress">
            <summary>
            Gets the email address of the resolved identity.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.PrincipalInfo.IsResolved">
            <summary>
            Indicates if the SharePoint user referenced by <see cref="P:Codeless.SharePoint.PrincipalInfo.ParentPrincipal"/> resolves to a valid identity.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.PrincipalInfo.ParentPrincipal">
            <summary>
            Gets a SharePoint user which the resolved identity is represented in a SharePoint site collection.
            </summary>
        </member>
        <member name="P:Codeless.SharePoint.PrincipalInfo.Exception">
            <summary>
            Gets the exception occurred if the SharePoint user referenced by <see cref="P:Codeless.SharePoint.PrincipalInfo.ParentPrincipal"/> cannot be resolved.
            </summary>
        </member>
        <member name="M:Codeless.SharePoint.PrincipalInfo.Equals(Codeless.SharePoint.PrincipalInfo)">
            <summary>
            Determines the equality of this instance to the given instance.
            </summary>
            <param name="other">Object to compare.</param>
            <returns></returns>
        </member>
        <member name="M:Codeless.SharePoint.PrincipalInfo.Equals(System.Object)">
            <summary>
            Overriden. When <paramref name="obj"/> is a <see cref="T:Codeless.SharePoint.PrincipalInfo"/> instance, the custom equality comparison is performed.
            </summary>
            <param name="obj">Object to compare.</param>
            <returns></returns>
        </member>
        <member name="M:Codeless.SharePoint.PrincipalInfo.GetHashCode">
            <summary>
            Overriden.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Codeless.SharePoint.PrincipalInfo.CreatePrincipalContextScope">
            <summary>
            Creates a resolvation scope that resolved identities are cached until the object is disposed. 
            Same identity referenced by different SharePoint users are returned once only, even by subsequent calls to <see cref="M:Codeless.SharePoint.PrincipalInfo.Resolve(Microsoft.SharePoint.SPPrincipal,System.Boolean)"/> or <see cref="M:Codeless.SharePoint.PrincipalInfo.ResolveEmailAddresses(Microsoft.SharePoint.SPPrincipal)"/>.
            If no scope is created before calling <see cref="M:Codeless.SharePoint.PrincipalInfo.Resolve(Microsoft.SharePoint.SPPrincipal,System.Boolean)"/> or <see cref="M:Codeless.SharePoint.PrincipalInfo.ResolveEmailAddresses(Microsoft.SharePoint.SPPrincipal)"/>, an implicit scope is created during the call and is disposed after the call.
            </summary>
            <returns>A disposable object.</returns>
        </member>
        <member name="M:Codeless.SharePoint.PrincipalInfo.Resolve(Microsoft.SharePoint.SPPrincipal,System.Boolean)">
            <summary>
            Enumerates identities referenced by the specified SharePoint user or group, and optionally throw exception when error is encountered.
            If <paramref name="throwOnException"/> is set to *false*, a <see cref="T:Codeless.SharePoint.PrincipalInfo"/> object that <see cref="P:Codeless.SharePoint.PrincipalInfo.IsResolved"/> is set to *true* is returned when error is encountered.
            To eliminate duplication on subequent calls, first call <see cref="M:Codeless.SharePoint.PrincipalInfo.CreatePrincipalContextScope"/>.
            </summary>
            <param name="member">A SharePoint user or group to be resolved.</param>
            <param name="throwOnException">Whether to throw exception when error is encountered.</param>
            <returns>A enumerable object containing resolved identities.</returns>
        </member>
        <member name="M:Codeless.SharePoint.PrincipalInfo.ResolveEmailAddresses(Microsoft.SharePoint.SPPrincipal)">
            <summary>
            Enumerates email addresses from identities referenced by the specified SharePoint user or group.
            For SharePoint users that fail to be resolved, no exception will be thrown.
            To eliminate duplication on subequent calls, first call <see cref="M:Codeless.SharePoint.PrincipalInfo.CreatePrincipalContextScope"/>.
            </summary>
            <param name="member">A SharePoint user or group to be resolved.</param>
            <returns>A enumerable object containing resolved email addresses.</returns>
        </member>
        <member name="M:Codeless.SharePoint.PrincipalInfo.ResolveEmailAddresses(System.Collections.Generic.IEnumerable{Microsoft.SharePoint.SPPrincipal})">
            <summary>
            Enumerates email addresses from identities referenced by the specified SharePoint users or groups.
            For SharePoint users that fail to be resolved, no exception will be thrown.
            To eliminate duplication on subequent calls, first call <see cref="M:Codeless.SharePoint.PrincipalInfo.CreatePrincipalContextScope"/>.
            </summary>
            <param name="members">A list of SharePoint users or groups to be resolved.</param>
            <returns>A enumerable object containing resolved email addresses.</returns>
        </member>
    </members>
</doc>
